"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkinsteon_panel_frontend"] = self["webpackChunkinsteon_panel_frontend"] || []).push([["vendors-node_modules_polymer_paper-tooltip_paper-tooltip_js"],{

/***/ "./node_modules/@polymer/paper-tooltip/paper-tooltip.js":
/*!**************************************************************!*\
  !*** ./node_modules/@polymer/paper-tooltip/paper-tooltip.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer-fn.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer-fn.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer.dom.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer.dom.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/polymer/lib/utils/html-tag.js */ \"./node_modules/@polymer/polymer/lib/utils/html-tag.js\");\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n/**\nMaterial design:\n[Tooltips](https://www.google.com/design/spec/components/tooltips.html)\n`<paper-tooltip>` is a label that appears on hover and focus when the user\nhovers over an element with the cursor or with the keyboard. It will be centered\nto an anchor element specified in the `for` attribute, or, if that doesn't\nexist, centered to the parent node containing it.\nExample:\n    <div style=\"display:inline-block\">\n      <button>Click me!</button>\n      <paper-tooltip>Tooltip text</paper-tooltip>\n    </div>\n    <div>\n      <button id=\"btn\">Click me!</button>\n      <paper-tooltip for=\"btn\">Tooltip text</paper-tooltip>\n    </div>\nThe tooltip can be positioned on the top|bottom|left|right of the anchor using\nthe `position` attribute. The default position is bottom.\n    <paper-tooltip for=\"btn\" position=\"left\">Tooltip text</paper-tooltip>\n    <paper-tooltip for=\"btn\" position=\"top\">Tooltip text</paper-tooltip>\n\n### Styling\nThe following custom properties and mixins are available for styling:\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-tooltip-background` | The background color of the tooltip | `#616161`\n`--paper-tooltip-opacity` | The opacity of the tooltip | `0.9`\n`--paper-tooltip-text-color` | The text color of the tooltip | `white`\n`--paper-tooltip` | Mixin applied to the tooltip | `{}`\n`--paper-tooltip-delay-in` | Delay before tooltip starts to fade in | `500`\n`--paper-tooltip-delay-out` | Delay before tooltip starts to fade out | `0`\n`--paper-tooltip-duration-in` | Timing for animation when showing tooltip | `500`\n`--paper-tooltip-duration-out` | Timing for animation when hiding tooltip | `0`\n`--paper-tooltip-animation` | Mixin applied to the tooltip animation | `{}`\n@group Paper Elements\n@element paper-tooltip\n@demo demo/index.html\n*/\n(0,_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_1__.Polymer)({\n  _template: _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_3__.html`\n    <style>\n      :host {\n        display: block;\n        position: absolute;\n        outline: none;\n        z-index: 1002;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        -webkit-user-select: none;\n        user-select: none;\n        cursor: default;\n      }\n\n      #tooltip {\n        display: block;\n        outline: none;\n        @apply --paper-font-common-base;\n        font-size: 10px;\n        line-height: 1;\n        background-color: var(--paper-tooltip-background, #616161);\n        color: var(--paper-tooltip-text-color, white);\n        padding: 8px;\n        border-radius: 2px;\n        @apply --paper-tooltip;\n      }\n\n      @keyframes keyFrameScaleUp {\n        0% {\n          transform: scale(0.0);\n        }\n        100% {\n          transform: scale(1.0);\n        }\n      }\n\n      @keyframes keyFrameScaleDown {\n        0% {\n          transform: scale(1.0);\n        }\n        100% {\n          transform: scale(0.0);\n        }\n      }\n\n      @keyframes keyFrameFadeInOpacity {\n        0% {\n          opacity: 0;\n        }\n        100% {\n          opacity: var(--paper-tooltip-opacity, 0.9);\n        }\n      }\n\n      @keyframes keyFrameFadeOutOpacity {\n        0% {\n          opacity: var(--paper-tooltip-opacity, 0.9);\n        }\n        100% {\n          opacity: 0;\n        }\n      }\n\n      @keyframes keyFrameSlideDownIn {\n        0% {\n          transform: translateY(-2000px);\n          opacity: 0;\n        }\n        10% {\n          opacity: 0.2;\n        }\n        100% {\n          transform: translateY(0);\n          opacity: var(--paper-tooltip-opacity, 0.9);\n        }\n      }\n\n      @keyframes keyFrameSlideDownOut {\n        0% {\n          transform: translateY(0);\n          opacity: var(--paper-tooltip-opacity, 0.9);\n        }\n        10% {\n          opacity: 0.2;\n        }\n        100% {\n          transform: translateY(-2000px);\n          opacity: 0;\n        }\n      }\n\n      .fade-in-animation {\n        opacity: 0;\n        animation-delay: var(--paper-tooltip-delay-in, 500ms);\n        animation-name: keyFrameFadeInOpacity;\n        animation-iteration-count: 1;\n        animation-timing-function: ease-in;\n        animation-duration: var(--paper-tooltip-duration-in, 500ms);\n        animation-fill-mode: forwards;\n        @apply --paper-tooltip-animation;\n      }\n\n      .fade-out-animation {\n        opacity: var(--paper-tooltip-opacity, 0.9);\n        animation-delay: var(--paper-tooltip-delay-out, 0ms);\n        animation-name: keyFrameFadeOutOpacity;\n        animation-iteration-count: 1;\n        animation-timing-function: ease-in;\n        animation-duration: var(--paper-tooltip-duration-out, 500ms);\n        animation-fill-mode: forwards;\n        @apply --paper-tooltip-animation;\n      }\n\n      .scale-up-animation {\n        transform: scale(0);\n        opacity: var(--paper-tooltip-opacity, 0.9);\n        animation-delay: var(--paper-tooltip-delay-in, 500ms);\n        animation-name: keyFrameScaleUp;\n        animation-iteration-count: 1;\n        animation-timing-function: ease-in;\n        animation-duration: var(--paper-tooltip-duration-in, 500ms);\n        animation-fill-mode: forwards;\n        @apply --paper-tooltip-animation;\n      }\n\n      .scale-down-animation {\n        transform: scale(1);\n        opacity: var(--paper-tooltip-opacity, 0.9);\n        animation-delay: var(--paper-tooltip-delay-out, 500ms);\n        animation-name: keyFrameScaleDown;\n        animation-iteration-count: 1;\n        animation-timing-function: ease-in;\n        animation-duration: var(--paper-tooltip-duration-out, 500ms);\n        animation-fill-mode: forwards;\n        @apply --paper-tooltip-animation;\n      }\n\n      .slide-down-animation {\n        transform: translateY(-2000px);\n        opacity: 0;\n        animation-delay: var(--paper-tooltip-delay-out, 500ms);\n        animation-name: keyFrameSlideDownIn;\n        animation-iteration-count: 1;\n        animation-timing-function: cubic-bezier(0.0, 0.0, 0.2, 1);\n        animation-duration: var(--paper-tooltip-duration-out, 500ms);\n        animation-fill-mode: forwards;\n        @apply --paper-tooltip-animation;\n      }\n\n      .slide-down-animation-out {\n        transform: translateY(0);\n        opacity: var(--paper-tooltip-opacity, 0.9);\n        animation-delay: var(--paper-tooltip-delay-out, 500ms);\n        animation-name: keyFrameSlideDownOut;\n        animation-iteration-count: 1;\n        animation-timing-function: cubic-bezier(0.4, 0.0, 1, 1);\n        animation-duration: var(--paper-tooltip-duration-out, 500ms);\n        animation-fill-mode: forwards;\n        @apply --paper-tooltip-animation;\n      }\n\n      .cancel-animation {\n        animation-delay: -30s !important;\n      }\n\n      /* Thanks IE 10. */\n\n      .hidden {\n        display: none !important;\n      }\n    </style>\n\n    <div id=\"tooltip\" class=\"hidden\">\n      <slot></slot>\n    </div>\n`,\n  is: 'paper-tooltip',\n  hostAttributes: {\n    role: 'tooltip',\n    tabindex: -1\n  },\n  properties: {\n    /**\n     * The id of the element that the tooltip is anchored to. This element\n     * must be a sibling of the tooltip. If this property is not set,\n     * then the tooltip will be centered to the parent node containing it.\n     */\n    for: {\n      type: String,\n      observer: '_findTarget'\n    },\n    /**\n     * Set this to true if you want to manually control when the tooltip\n     * is shown or hidden.\n     */\n    manualMode: {\n      type: Boolean,\n      value: false,\n      observer: '_manualModeChanged'\n    },\n    /**\n     * Positions the tooltip to the top, right, bottom, left of its content.\n     */\n    position: {\n      type: String,\n      value: 'bottom'\n    },\n    /**\n     * If true, no parts of the tooltip will ever be shown offscreen.\n     */\n    fitToVisibleBounds: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * The spacing between the top of the tooltip and the element it is\n     * anchored to.\n     */\n    offset: {\n      type: Number,\n      value: 14\n    },\n    /**\n     * This property is deprecated, but left over so that it doesn't\n     * break exiting code. Please use `offset` instead. If both `offset` and\n     * `marginTop` are provided, `marginTop` will be ignored.\n     * @deprecated since version 1.0.3\n     */\n    marginTop: {\n      type: Number,\n      value: 14\n    },\n    /**\n     * The delay that will be applied before the `entry` animation is\n     * played when showing the tooltip.\n     */\n    animationDelay: {\n      type: Number,\n      value: 500,\n      observer: '_delayChange'\n    },\n    /**\n     * The animation that will be played on entry.  This replaces the\n     * deprecated animationConfig.  Entries here will override the\n     * animationConfig settings.  You can enter your own animation\n     * by setting it to the css class name.\n     */\n    animationEntry: {\n      type: String,\n      value: ''\n    },\n    /**\n     * The animation that will be played on exit.  This replaces the\n     * deprecated animationConfig.  Entries here will override the\n     * animationConfig settings.  You can enter your own animation\n     * by setting it to the css class name.\n     */\n    animationExit: {\n      type: String,\n      value: ''\n    },\n    /**\n     * This property is deprecated.  Use --paper-tooltip-animation to change the\n     * animation. The entry and exit animations that will be played when showing\n     * and hiding the tooltip. If you want to override this, you must ensure\n     * that your animationConfig has the exact format below.\n     * @deprecated since version\n     *\n     * The entry and exit animations that will be played when showing and\n     * hiding the tooltip. If you want to override this, you must ensure\n     * that your animationConfig has the exact format below.\n     */\n    animationConfig: {\n      type: Object,\n      value: function () {\n        return {\n          'entry': [{\n            name: 'fade-in-animation',\n            node: this,\n            timing: {\n              delay: 0\n            }\n          }],\n          'exit': [{\n            name: 'fade-out-animation',\n            node: this\n          }]\n        };\n      }\n    },\n    _showing: {\n      type: Boolean,\n      value: false\n    }\n  },\n  listeners: {\n    'webkitAnimationEnd': '_onAnimationEnd'\n  },\n  /**\n   * Returns the target element that this tooltip is anchored to. It is\n   * either the element given by the `for` attribute, or the immediate parent\n   * of the tooltip.\n   *\n   * @type {Node}\n   */\n  get target() {\n    var parentNode = (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_2__.dom)(this).parentNode;\n    // If the parentNode is a document fragment, then we need to use the host.\n    var ownerRoot = (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_2__.dom)(this).getOwnerRoot();\n    var target;\n    if (this.for) {\n      target = (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_2__.dom)(ownerRoot).querySelector('#' + this.for);\n    } else {\n      target = parentNode.nodeType == Node.DOCUMENT_FRAGMENT_NODE ? ownerRoot.host : parentNode;\n    }\n    return target;\n  },\n  /**\n   * @return {void}\n   */\n  attached: function () {\n    this._findTarget();\n  },\n  /**\n   * @return {void}\n   */\n  detached: function () {\n    if (!this.manualMode) this._removeListeners();\n  },\n  /**\n   * Replaces Neon-Animation playAnimation - just calls show and hide.\n   * @deprecated Use show and hide instead.\n   * @param {string} type Either `entry` or `exit`\n   */\n  playAnimation: function (type) {\n    if (type === 'entry') {\n      this.show();\n    } else if (type === 'exit') {\n      this.hide();\n    }\n  },\n  /**\n   * Cancels the animation and either fully shows or fully hides tooltip\n   */\n  cancelAnimation: function () {\n    // Short-cut and cancel all animations and hide\n    this.$.tooltip.classList.add('cancel-animation');\n  },\n  /**\n   * Shows the tooltip programatically\n   * @return {void}\n   */\n  show: function () {\n    // If the tooltip is already showing, there's nothing to do.\n    if (this._showing) return;\n    if ((0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_2__.dom)(this).textContent.trim() === '') {\n      // Check if effective children are also empty\n      var allChildrenEmpty = true;\n      var effectiveChildren = (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_2__.dom)(this).getEffectiveChildNodes();\n      for (var i = 0; i < effectiveChildren.length; i++) {\n        if (effectiveChildren[i].textContent.trim() !== '') {\n          allChildrenEmpty = false;\n          break;\n        }\n      }\n      if (allChildrenEmpty) {\n        return;\n      }\n    }\n    this._showing = true;\n    this.$.tooltip.classList.remove('hidden');\n    this.$.tooltip.classList.remove('cancel-animation');\n    this.$.tooltip.classList.remove(this._getAnimationType('exit'));\n    this.updatePosition();\n    this._animationPlaying = true;\n    this.$.tooltip.classList.add(this._getAnimationType('entry'));\n  },\n  /**\n   * Hides the tooltip programatically\n   * @return {void}\n   */\n  hide: function () {\n    // If the tooltip is already hidden, there's nothing to do.\n    if (!this._showing) {\n      return;\n    }\n\n    // If the entry animation is still playing, don't try to play the exit\n    // animation since this will reset the opacity to 1. Just end the animation.\n    if (this._animationPlaying) {\n      this._showing = false;\n      this._cancelAnimation();\n      return;\n    } else {\n      // Play Exit Animation\n      this._onAnimationFinish();\n    }\n    this._showing = false;\n    this._animationPlaying = true;\n  },\n  /**\n   * @return {void}\n   */\n  updatePosition: function () {\n    if (!this._target || !this.offsetParent) return;\n    var offset = this.offset;\n    // If a marginTop has been provided by the user (pre 1.0.3), use it.\n    if (this.marginTop != 14 && this.offset == 14) offset = this.marginTop;\n    var parentRect = this.offsetParent.getBoundingClientRect();\n    var targetRect = this._target.getBoundingClientRect();\n    var thisRect = this.getBoundingClientRect();\n    var horizontalCenterOffset = (targetRect.width - thisRect.width) / 2;\n    var verticalCenterOffset = (targetRect.height - thisRect.height) / 2;\n    var targetLeft = targetRect.left - parentRect.left;\n    var targetTop = targetRect.top - parentRect.top;\n    var tooltipLeft, tooltipTop;\n    switch (this.position) {\n      case 'top':\n        tooltipLeft = targetLeft + horizontalCenterOffset;\n        tooltipTop = targetTop - thisRect.height - offset;\n        break;\n      case 'bottom':\n        tooltipLeft = targetLeft + horizontalCenterOffset;\n        tooltipTop = targetTop + targetRect.height + offset;\n        break;\n      case 'left':\n        tooltipLeft = targetLeft - thisRect.width - offset;\n        tooltipTop = targetTop + verticalCenterOffset;\n        break;\n      case 'right':\n        tooltipLeft = targetLeft + targetRect.width + offset;\n        tooltipTop = targetTop + verticalCenterOffset;\n        break;\n    }\n    // TODO(noms): This should use IronFitBehavior if possible.\n    if (this.fitToVisibleBounds) {\n      // Clip the left/right side\n      if (parentRect.left + tooltipLeft + thisRect.width > window.innerWidth) {\n        this.style.right = '0px';\n        this.style.left = 'auto';\n      } else {\n        this.style.left = Math.max(0, tooltipLeft) + 'px';\n        this.style.right = 'auto';\n      }\n      // Clip the top/bottom side.\n      if (parentRect.top + tooltipTop + thisRect.height > window.innerHeight) {\n        this.style.bottom = parentRect.height - targetTop + offset + 'px';\n        this.style.top = 'auto';\n      } else {\n        this.style.top = Math.max(-parentRect.top, tooltipTop) + 'px';\n        this.style.bottom = 'auto';\n      }\n    } else {\n      this.style.left = tooltipLeft + 'px';\n      this.style.top = tooltipTop + 'px';\n    }\n  },\n  _addListeners: function () {\n    if (this._target) {\n      this.listen(this._target, 'mouseenter', 'show');\n      this.listen(this._target, 'focus', 'show');\n      this.listen(this._target, 'mouseleave', 'hide');\n      this.listen(this._target, 'blur', 'hide');\n      this.listen(this._target, 'tap', 'hide');\n    }\n    this.listen(this.$.tooltip, 'animationend', '_onAnimationEnd');\n    this.listen(this, 'mouseenter', 'hide');\n  },\n  _findTarget: function () {\n    if (!this.manualMode) this._removeListeners();\n    this._target = this.target;\n    if (!this.manualMode) this._addListeners();\n  },\n  _delayChange: function (newValue) {\n    // Only Update delay if different value set\n    if (newValue !== 500) {\n      this.updateStyles({\n        '--paper-tooltip-delay-in': newValue + 'ms'\n      });\n    }\n  },\n  _manualModeChanged: function () {\n    if (this.manualMode) this._removeListeners();else this._addListeners();\n  },\n  _cancelAnimation: function () {\n    // Short-cut and cancel all animations and hide\n    this.$.tooltip.classList.remove(this._getAnimationType('entry'));\n    this.$.tooltip.classList.remove(this._getAnimationType('exit'));\n    this.$.tooltip.classList.remove('cancel-animation');\n    this.$.tooltip.classList.add('hidden');\n  },\n  _onAnimationFinish: function () {\n    if (this._showing) {\n      this.$.tooltip.classList.remove(this._getAnimationType('entry'));\n      this.$.tooltip.classList.remove('cancel-animation');\n      this.$.tooltip.classList.add(this._getAnimationType('exit'));\n    }\n  },\n  _onAnimationEnd: function () {\n    // If no longer showing add class hidden to completely hide tooltip\n    this._animationPlaying = false;\n    if (!this._showing) {\n      this.$.tooltip.classList.remove(this._getAnimationType('exit'));\n      this.$.tooltip.classList.add('hidden');\n    }\n  },\n  _getAnimationType: function (type) {\n    // These properties have priority over animationConfig values\n    if (type === 'entry' && this.animationEntry !== '') {\n      return this.animationEntry;\n    }\n    if (type === 'exit' && this.animationExit !== '') {\n      return this.animationExit;\n    }\n    // If no results then return the legacy value from animationConfig\n    if (this.animationConfig[type] && typeof this.animationConfig[type][0].name === 'string') {\n      // Checking Timing and Update if necessary - Legacy for animationConfig\n      if (this.animationConfig[type][0].timing && this.animationConfig[type][0].timing.delay && this.animationConfig[type][0].timing.delay !== 0) {\n        var timingDelay = this.animationConfig[type][0].timing.delay;\n        // Has Timing Change - Update CSS\n        if (type === 'entry') {\n          this.updateStyles({\n            '--paper-tooltip-delay-in': timingDelay + 'ms'\n          });\n        } else if (type === 'exit') {\n          this.updateStyles({\n            '--paper-tooltip-delay-out': timingDelay + 'ms'\n          });\n        }\n      }\n      return this.animationConfig[type][0].name;\n    }\n  },\n  _removeListeners: function () {\n    if (this._target) {\n      this.unlisten(this._target, 'mouseenter', 'show');\n      this.unlisten(this._target, 'focus', 'show');\n      this.unlisten(this._target, 'mouseleave', 'hide');\n      this.unlisten(this._target, 'blur', 'hide');\n      this.unlisten(this._target, 'tap', 'hide');\n    }\n    this.unlisten(this.$.tooltip, 'animationend', '_onAnimationEnd');\n    this.unlisten(this, 'mouseenter', 'hide');\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@polymer/paper-tooltip/paper-tooltip.js\n");

/***/ })

}]);