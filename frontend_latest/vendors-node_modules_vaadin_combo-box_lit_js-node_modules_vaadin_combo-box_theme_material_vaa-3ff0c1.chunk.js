"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkinsteon_panel_frontend"] = self["webpackChunkinsteon_panel_frontend"] || []).push([["vendors-node_modules_vaadin_combo-box_lit_js-node_modules_vaadin_combo-box_theme_material_vaa-3ff0c1"],{

/***/ "./node_modules/@vaadin/combo-box/lit.js":
/*!***********************************************!*\
  !*** ./node_modules/@vaadin/combo-box/lit.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ComboBoxRendererDirective": () => (/* reexport safe */ _src_lit_renderer_directives_js__WEBPACK_IMPORTED_MODULE_0__.ComboBoxRendererDirective),
/* harmony export */   "comboBoxRenderer": () => (/* reexport safe */ _src_lit_renderer_directives_js__WEBPACK_IMPORTED_MODULE_0__.comboBoxRenderer)
/* harmony export */ });
/* harmony import */ var _src_lit_renderer_directives_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./src/lit/renderer-directives.js */ "./node_modules/@vaadin/combo-box/src/lit/renderer-directives.js");


/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/lit/renderer-directives.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/lit/renderer-directives.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ComboBoxRendererDirective\": () => (/* binding */ ComboBoxRendererDirective),\n/* harmony export */   \"comboBoxRenderer\": () => (/* binding */ comboBoxRenderer)\n/* harmony export */ });\n/* harmony import */ var lit_directive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit/directive.js */ \"./node_modules/lit/directive.js\");\n/* harmony import */ var _vaadin_lit_renderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/lit-renderer */ \"./node_modules/@vaadin/lit-renderer/src/lit-renderer.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\nclass ComboBoxRendererDirective extends _vaadin_lit_renderer__WEBPACK_IMPORTED_MODULE_1__.LitRendererDirective {\n  /**\n   * Adds the renderer callback to the combo-box.\n   */\n  addRenderer() {\n    this.element.renderer = (root, comboBox, model) => {\n      this.renderRenderer(root, model.item, model, comboBox);\n    };\n  }\n\n  /**\n   * Runs the renderer callback on the combo-box.\n   */\n  runRenderer() {\n    this.element.requestContentUpdate();\n  }\n\n  /**\n   * Removes the renderer callback from the combo-box.\n   */\n  removeRenderer() {\n    this.element.renderer = null;\n  }\n}\n\n/**\n * A Lit directive for rendering the content of the `<vaadin-combo-box-item>` elements.\n *\n * The directive accepts a renderer callback returning a Lit template and assigns it to the combo-box\n * via the `renderer` property. The renderer is called for each combo-box item when assigned\n * and whenever a single dependency or an array of dependencies changes.\n * It is not guaranteed that the renderer will be called immediately (synchronously) in both cases.\n *\n * Dependencies can be a single value or an array of values.\n * Values are checked against previous values with strict equality (`===`),\n * so the check won't detect nested property changes inside objects or arrays.\n * When dependencies are provided as an array, each item is checked against the previous value\n * at the same index with strict equality. Nested arrays are also checked only by strict\n * equality.\n *\n * Example of usage:\n * ```js\n * `<vaadin-combo-box\n *   ${comboBoxRenderer((item, model, comboBox) => html`...`)}\n * ></vaadin-combo-box>`\n * ```\n *\n * @param renderer the renderer callback that returns a Lit template.\n * @param dependencies a single dependency or an array of dependencies\n *                     which trigger a re-render when changed.\n */\nconst comboBoxRenderer = (0,lit_directive_js__WEBPACK_IMPORTED_MODULE_0__.directive)(ComboBoxRendererDirective);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL2xpdC9yZW5kZXJlci1kaXJlY3RpdmVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbWJvLWJveC9zcmMvbGl0L3JlbmRlcmVyLWRpcmVjdGl2ZXMuanM/YmU3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcgLSAyMDIyIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IGRpcmVjdGl2ZSB9IGZyb20gJ2xpdC9kaXJlY3RpdmUuanMnO1xuaW1wb3J0IHsgTGl0UmVuZGVyZXJEaXJlY3RpdmUgfSBmcm9tICdAdmFhZGluL2xpdC1yZW5kZXJlcic7XG5cbmV4cG9ydCBjbGFzcyBDb21ib0JveFJlbmRlcmVyRGlyZWN0aXZlIGV4dGVuZHMgTGl0UmVuZGVyZXJEaXJlY3RpdmUge1xuICAvKipcbiAgICogQWRkcyB0aGUgcmVuZGVyZXIgY2FsbGJhY2sgdG8gdGhlIGNvbWJvLWJveC5cbiAgICovXG4gIGFkZFJlbmRlcmVyKCkge1xuICAgIHRoaXMuZWxlbWVudC5yZW5kZXJlciA9IChyb290LCBjb21ib0JveCwgbW9kZWwpID0+IHtcbiAgICAgIHRoaXMucmVuZGVyUmVuZGVyZXIocm9vdCwgbW9kZWwuaXRlbSwgbW9kZWwsIGNvbWJvQm94KTtcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIFJ1bnMgdGhlIHJlbmRlcmVyIGNhbGxiYWNrIG9uIHRoZSBjb21iby1ib3guXG4gICAqL1xuICBydW5SZW5kZXJlcigpIHtcbiAgICB0aGlzLmVsZW1lbnQucmVxdWVzdENvbnRlbnRVcGRhdGUoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmVzIHRoZSByZW5kZXJlciBjYWxsYmFjayBmcm9tIHRoZSBjb21iby1ib3guXG4gICAqL1xuICByZW1vdmVSZW5kZXJlcigpIHtcbiAgICB0aGlzLmVsZW1lbnQucmVuZGVyZXIgPSBudWxsO1xuICB9XG59XG5cbi8qKlxuICogQSBMaXQgZGlyZWN0aXZlIGZvciByZW5kZXJpbmcgdGhlIGNvbnRlbnQgb2YgdGhlIGA8dmFhZGluLWNvbWJvLWJveC1pdGVtPmAgZWxlbWVudHMuXG4gKlxuICogVGhlIGRpcmVjdGl2ZSBhY2NlcHRzIGEgcmVuZGVyZXIgY2FsbGJhY2sgcmV0dXJuaW5nIGEgTGl0IHRlbXBsYXRlIGFuZCBhc3NpZ25zIGl0IHRvIHRoZSBjb21iby1ib3hcbiAqIHZpYSB0aGUgYHJlbmRlcmVyYCBwcm9wZXJ0eS4gVGhlIHJlbmRlcmVyIGlzIGNhbGxlZCBmb3IgZWFjaCBjb21iby1ib3ggaXRlbSB3aGVuIGFzc2lnbmVkXG4gKiBhbmQgd2hlbmV2ZXIgYSBzaW5nbGUgZGVwZW5kZW5jeSBvciBhbiBhcnJheSBvZiBkZXBlbmRlbmNpZXMgY2hhbmdlcy5cbiAqIEl0IGlzIG5vdCBndWFyYW50ZWVkIHRoYXQgdGhlIHJlbmRlcmVyIHdpbGwgYmUgY2FsbGVkIGltbWVkaWF0ZWx5IChzeW5jaHJvbm91c2x5KSBpbiBib3RoIGNhc2VzLlxuICpcbiAqIERlcGVuZGVuY2llcyBjYW4gYmUgYSBzaW5nbGUgdmFsdWUgb3IgYW4gYXJyYXkgb2YgdmFsdWVzLlxuICogVmFsdWVzIGFyZSBjaGVja2VkIGFnYWluc3QgcHJldmlvdXMgdmFsdWVzIHdpdGggc3RyaWN0IGVxdWFsaXR5IChgPT09YCksXG4gKiBzbyB0aGUgY2hlY2sgd29uJ3QgZGV0ZWN0IG5lc3RlZCBwcm9wZXJ0eSBjaGFuZ2VzIGluc2lkZSBvYmplY3RzIG9yIGFycmF5cy5cbiAqIFdoZW4gZGVwZW5kZW5jaWVzIGFyZSBwcm92aWRlZCBhcyBhbiBhcnJheSwgZWFjaCBpdGVtIGlzIGNoZWNrZWQgYWdhaW5zdCB0aGUgcHJldmlvdXMgdmFsdWVcbiAqIGF0IHRoZSBzYW1lIGluZGV4IHdpdGggc3RyaWN0IGVxdWFsaXR5LiBOZXN0ZWQgYXJyYXlzIGFyZSBhbHNvIGNoZWNrZWQgb25seSBieSBzdHJpY3RcbiAqIGVxdWFsaXR5LlxuICpcbiAqIEV4YW1wbGUgb2YgdXNhZ2U6XG4gKiBgYGBqc1xuICogYDx2YWFkaW4tY29tYm8tYm94XG4gKiAgICR7Y29tYm9Cb3hSZW5kZXJlcigoaXRlbSwgbW9kZWwsIGNvbWJvQm94KSA9PiBodG1sYC4uLmApfVxuICogPjwvdmFhZGluLWNvbWJvLWJveD5gXG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0gcmVuZGVyZXIgdGhlIHJlbmRlcmVyIGNhbGxiYWNrIHRoYXQgcmV0dXJucyBhIExpdCB0ZW1wbGF0ZS5cbiAqIEBwYXJhbSBkZXBlbmRlbmNpZXMgYSBzaW5nbGUgZGVwZW5kZW5jeSBvciBhbiBhcnJheSBvZiBkZXBlbmRlbmNpZXNcbiAqICAgICAgICAgICAgICAgICAgICAgd2hpY2ggdHJpZ2dlciBhIHJlLXJlbmRlciB3aGVuIGNoYW5nZWQuXG4gKi9cbmV4cG9ydCBjb25zdCBjb21ib0JveFJlbmRlcmVyID0gZGlyZWN0aXZlKENvbWJvQm94UmVuZGVyZXJEaXJlY3RpdmUpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/lit/renderer-directives.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-data-provider-mixin.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-data-provider-mixin.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ComboBoxDataProviderMixin\": () => (/* binding */ ComboBoxDataProviderMixin)\n/* harmony export */ });\n/* harmony import */ var _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vaadin-combo-box-placeholder.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * @polymerMixin\n */\nconst ComboBoxDataProviderMixin = superClass => class DataProviderMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * Number of items fetched at a time from the dataprovider.\n       * @attr {number} page-size\n       * @type {number}\n       */\n      pageSize: {\n        type: Number,\n        value: 50,\n        observer: '_pageSizeChanged'\n      },\n      /**\n       * Total number of items.\n       * @type {number | undefined}\n       */\n      size: {\n        type: Number,\n        observer: '_sizeChanged'\n      },\n      /**\n       * Function that provides items lazily. Receives arguments `params`, `callback`\n       *\n       * `params.page` Requested page index\n       *\n       * `params.pageSize` Current page size\n       *\n       * `params.filter` Currently applied filter\n       *\n       * `callback(items, size)` Callback function with arguments:\n       *   - `items` Current page of items\n       *   - `size` Total number of items.\n       * @type {ComboBoxDataProvider | undefined}\n       */\n      dataProvider: {\n        type: Object,\n        observer: '_dataProviderChanged'\n      },\n      /** @private */\n      _pendingRequests: {\n        value: () => {\n          return {};\n        }\n      },\n      /** @private */\n      __placeHolder: {\n        value: new _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_0__.ComboBoxPlaceholder()\n      },\n      /** @private */\n      __previousDataProviderFilter: {\n        type: String\n      }\n    };\n  }\n  static get observers() {\n    return ['_dataProviderFilterChanged(filter)', '_warnDataProviderValue(dataProvider, value)', '_ensureFirstPage(opened)'];\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._scroller.addEventListener('index-requested', e => {\n      const index = e.detail.index;\n      const currentScrollerPos = e.detail.currentScrollerPos;\n      const allowedIndexRange = Math.floor(this.pageSize * 1.5);\n\n      // Ignores the indexes, which are being re-sent during scrolling reset,\n      // if the corresponding page is around the current scroller position.\n      // Otherwise, there might be a last pages duplicates, which cause the\n      // loading indicator hanging and blank items\n      if (this._shouldSkipIndex(index, allowedIndexRange, currentScrollerPos)) {\n        return;\n      }\n      if (index !== undefined) {\n        const page = this._getPageForIndex(index);\n        if (this._shouldLoadPage(page)) {\n          this._loadPage(page);\n        }\n      }\n    });\n  }\n\n  /** @private */\n  _dataProviderFilterChanged(filter) {\n    if (this.__previousDataProviderFilter === undefined && filter === '') {\n      this.__previousDataProviderFilter = filter;\n      return;\n    }\n    if (this.__previousDataProviderFilter !== filter) {\n      this.__previousDataProviderFilter = filter;\n      this._pendingRequests = {};\n      // Immediately mark as loading if this refresh leads to re-fetching pages\n      // This prevents some issues with the properties below triggering\n      // observers that also rely on the loading state\n      this.loading = this._shouldFetchData();\n      // Reset size and internal loading state\n      this.size = undefined;\n      this.clearCache();\n    }\n  }\n\n  /** @private */\n  _shouldFetchData() {\n    if (!this.dataProvider) {\n      return false;\n    }\n    return this.opened || this.filter && this.filter.length;\n  }\n\n  /** @private */\n  _ensureFirstPage(opened) {\n    if (opened && this._shouldLoadPage(0)) {\n      this._loadPage(0);\n    }\n  }\n\n  /** @private */\n  _shouldSkipIndex(index, allowedIndexRange, currentScrollerPos) {\n    return currentScrollerPos !== 0 && index >= currentScrollerPos - allowedIndexRange && index <= currentScrollerPos + allowedIndexRange;\n  }\n\n  /** @private */\n  _shouldLoadPage(page) {\n    if (!this.filteredItems || this._forceNextRequest) {\n      this._forceNextRequest = false;\n      return true;\n    }\n    const loadedItem = this.filteredItems[page * this.pageSize];\n    if (loadedItem !== undefined) {\n      return loadedItem instanceof _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_0__.ComboBoxPlaceholder;\n    }\n    return this.size === undefined;\n  }\n\n  /** @private */\n  _loadPage(page) {\n    // Make sure same page isn't requested multiple times.\n    if (this._pendingRequests[page] || !this.dataProvider) {\n      return;\n    }\n    const params = {\n      page,\n      pageSize: this.pageSize,\n      filter: this.filter\n    };\n    const callback = (items, size) => {\n      if (this._pendingRequests[page] !== callback) {\n        return;\n      }\n      const filteredItems = this.filteredItems ? [...this.filteredItems] : [];\n      filteredItems.splice(params.page * params.pageSize, items.length, ...items);\n      this.filteredItems = filteredItems;\n      if (!this.opened && !this._isInputFocused()) {\n        this._commitValue();\n      }\n      if (size !== undefined) {\n        this.size = size;\n      }\n      delete this._pendingRequests[page];\n      if (Object.keys(this._pendingRequests).length === 0) {\n        this.loading = false;\n      }\n    };\n    this._pendingRequests[page] = callback;\n    // Set the `loading` flag only after marking the request as pending\n    // to prevent the same page from getting requested multiple times\n    // as a result of `__loadingChanged` in the scroller which requests\n    // a virtualizer update which in turn may trigger a data provider page request.\n    this.loading = true;\n    this.dataProvider(params, callback);\n  }\n\n  /** @private */\n  _getPageForIndex(index) {\n    return Math.floor(index / this.pageSize);\n  }\n\n  /**\n   * Clears the cached pages and reloads data from dataprovider when needed.\n   */\n  clearCache() {\n    if (!this.dataProvider) {\n      return;\n    }\n    this._pendingRequests = {};\n    const filteredItems = [];\n    for (let i = 0; i < (this.size || 0); i++) {\n      filteredItems.push(this.__placeHolder);\n    }\n    this.filteredItems = filteredItems;\n    if (this._shouldFetchData()) {\n      this._forceNextRequest = false;\n      this._loadPage(0);\n    } else {\n      this._forceNextRequest = true;\n    }\n  }\n\n  /** @private */\n  _sizeChanged(size = 0) {\n    const filteredItems = (this.filteredItems || []).slice(0, size);\n    for (let i = 0; i < size; i++) {\n      filteredItems[i] = filteredItems[i] !== undefined ? filteredItems[i] : this.__placeHolder;\n    }\n    this.filteredItems = filteredItems;\n\n    // Cleans up the redundant pending requests for pages > size\n    // Refers to https://github.com/vaadin/vaadin-flow-components/issues/229\n    this._flushPendingRequests(size);\n  }\n\n  /** @private */\n  _pageSizeChanged(pageSize, oldPageSize) {\n    if (Math.floor(pageSize) !== pageSize || pageSize < 1) {\n      this.pageSize = oldPageSize;\n      throw new Error('`pageSize` value must be an integer > 0');\n    }\n    this.clearCache();\n  }\n\n  /** @private */\n  _dataProviderChanged(dataProvider, oldDataProvider) {\n    this._ensureItemsOrDataProvider(() => {\n      this.dataProvider = oldDataProvider;\n    });\n    this.clearCache();\n  }\n\n  /** @private */\n  _ensureItemsOrDataProvider(restoreOldValueCallback) {\n    if (this.items !== undefined && this.dataProvider !== undefined) {\n      restoreOldValueCallback();\n      throw new Error('Using `items` and `dataProvider` together is not supported');\n    } else if (this.dataProvider && !this.filteredItems) {\n      this.filteredItems = [];\n    }\n  }\n\n  /** @private */\n  _warnDataProviderValue(dataProvider, value) {\n    if (dataProvider && value !== '' && (this.selectedItem === undefined || this.selectedItem === null)) {\n      const valueIndex = this.__getItemIndexByValue(this.filteredItems, value);\n      if (valueIndex < 0 || !this._getItemLabel(this.filteredItems[valueIndex])) {\n        console.warn('Warning: unable to determine the label for the provided `value`. ' + 'Nothing to display in the text field. This usually happens when ' + 'setting an initial `value` before any items are returned from ' + 'the `dataProvider` callback. Consider setting `selectedItem` ' + 'instead of `value`');\n      }\n    }\n  }\n\n  /**\n   * This method cleans up the page callbacks which refers to the\n   * non-existing pages, i.e. which item indexes are greater than the\n   * changed size.\n   * This case is basically happens when:\n   * 1. Users scroll fast to the bottom and combo box generates the\n   * redundant page request/callback\n   * 2. Server side uses undefined size lazy loading and suddenly reaches\n   * the exact size which is on the range edge\n   * (for default page size = 50, it will be 100, 200, 300, ...).\n   * @param size the new size of items\n   * @private\n   */\n  _flushPendingRequests(size) {\n    if (this._pendingRequests) {\n      const lastPage = Math.ceil(size / this.pageSize);\n      const pendingRequestsKeys = Object.keys(this._pendingRequests);\n      for (let reqIdx = 0; reqIdx < pendingRequestsKeys.length; reqIdx++) {\n        const page = parseInt(pendingRequestsKeys[reqIdx]);\n        if (page >= lastPage) {\n          this._pendingRequests[page]([], size);\n        }\n      }\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-data-provider-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ComboBoxItem\": () => (/* binding */ ComboBoxItem)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-element.js */ \"./node_modules/@polymer/polymer/polymer-element.js\");\n/* harmony import */ var _vaadin_component_base_src_dir_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/component-base/src/dir-mixin.js */ \"./node_modules/@vaadin/component-base/src/dir-mixin.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n/**\n * An item element used by the `<vaadin-combo-box>` dropdown.\n *\n * ### Styling\n *\n * The following shadow DOM parts are available for styling:\n *\n * Part name   | Description\n * ------------|--------------\n * `checkmark` | The graphical checkmark shown for a selected item\n * `content`   | The element that wraps the item content\n *\n * The following state attributes are exposed for styling:\n *\n * Attribute    | Description\n * -------------|-------------\n * `selected`   | Set when the item is selected\n * `focused`    | Set when the item is focused\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @mixes ThemableMixin\n * @mixes DirMixin\n * @private\n */\nclass ComboBoxItem extends (0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_2__.ThemableMixin)((0,_vaadin_component_base_src_dir_mixin_js__WEBPACK_IMPORTED_MODULE_1__.DirMixin)(_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__.PolymerElement)) {\n  static get template() {\n    return _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__.html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n      </style>\n      <span part=\"checkmark\" aria-hidden=\"true\"></span>\n      <div part=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n  static get is() {\n    return 'vaadin-combo-box-item';\n  }\n  static get properties() {\n    return {\n      /**\n       * The index of the item\n       */\n      index: Number,\n      /**\n       * The item to render\n       * @type {(String|Object)}\n       */\n      item: Object,\n      /**\n       * The text label corresponding to the item\n       */\n      label: String,\n      /**\n       * True when item is selected\n       */\n      selected: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * True when item is focused\n       */\n      focused: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Custom function for rendering the content of the `<vaadin-combo-box-item>` propagated from the combo box element.\n       */\n      renderer: Function,\n      /**\n       * Saved instance of a custom renderer function.\n       */\n      _oldRenderer: Function\n    };\n  }\n  static get observers() {\n    return ['__rendererOrItemChanged(renderer, index, item.*, selected, focused)', '__updateLabel(label, renderer)'];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    this._comboBox = this.parentNode.comboBox;\n    const hostDir = this._comboBox.getAttribute('dir');\n    if (hostDir) {\n      this.setAttribute('dir', hostDir);\n    }\n  }\n\n  /**\n   * Requests an update for the content of the item.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (!this.renderer) {\n      return;\n    }\n    const model = {\n      index: this.index,\n      item: this.item,\n      focused: this.focused,\n      selected: this.selected\n    };\n    this.renderer(this, this._comboBox, model);\n  }\n\n  /** @private */\n  __rendererOrItemChanged(renderer, index, item) {\n    if (item === undefined || index === undefined) {\n      return;\n    }\n    if (this._oldRenderer !== renderer) {\n      this.innerHTML = '';\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n      // When clearing the rendered content, this part needs to be manually disposed of.\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n      delete this._$litPart$;\n    }\n    if (renderer) {\n      this._oldRenderer = renderer;\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __updateLabel(label, renderer) {\n    if (renderer) {\n      return;\n    }\n    this.textContent = label;\n  }\n}\ncustomElements.define(ComboBoxItem.is, ComboBoxItem);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtaXRlbS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtaXRlbS5qcz82ZWJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNSAtIDIwMjIgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0IHsgaHRtbCwgUG9seW1lckVsZW1lbnQgfSBmcm9tICdAcG9seW1lci9wb2x5bWVyL3BvbHltZXItZWxlbWVudC5qcyc7XG5pbXBvcnQgeyBEaXJNaXhpbiB9IGZyb20gJ0B2YWFkaW4vY29tcG9uZW50LWJhc2Uvc3JjL2Rpci1taXhpbi5qcyc7XG5pbXBvcnQgeyBUaGVtYWJsZU1peGluIH0gZnJvbSAnQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vdmFhZGluLXRoZW1hYmxlLW1peGluLmpzJztcblxuLyoqXG4gKiBBbiBpdGVtIGVsZW1lbnQgdXNlZCBieSB0aGUgYDx2YWFkaW4tY29tYm8tYm94PmAgZHJvcGRvd24uXG4gKlxuICogIyMjIFN0eWxpbmdcbiAqXG4gKiBUaGUgZm9sbG93aW5nIHNoYWRvdyBET00gcGFydHMgYXJlIGF2YWlsYWJsZSBmb3Igc3R5bGluZzpcbiAqXG4gKiBQYXJ0IG5hbWUgICB8IERlc2NyaXB0aW9uXG4gKiAtLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLS1cbiAqIGBjaGVja21hcmtgIHwgVGhlIGdyYXBoaWNhbCBjaGVja21hcmsgc2hvd24gZm9yIGEgc2VsZWN0ZWQgaXRlbVxuICogYGNvbnRlbnRgICAgfCBUaGUgZWxlbWVudCB0aGF0IHdyYXBzIHRoZSBpdGVtIGNvbnRlbnRcbiAqXG4gKiBUaGUgZm9sbG93aW5nIHN0YXRlIGF0dHJpYnV0ZXMgYXJlIGV4cG9zZWQgZm9yIHN0eWxpbmc6XG4gKlxuICogQXR0cmlidXRlICAgIHwgRGVzY3JpcHRpb25cbiAqIC0tLS0tLS0tLS0tLS18LS0tLS0tLS0tLS0tLVxuICogYHNlbGVjdGVkYCAgIHwgU2V0IHdoZW4gdGhlIGl0ZW0gaXMgc2VsZWN0ZWRcbiAqIGBmb2N1c2VkYCAgICB8IFNldCB3aGVuIHRoZSBpdGVtIGlzIGZvY3VzZWRcbiAqXG4gKiBTZWUgW1N0eWxpbmcgQ29tcG9uZW50c10oaHR0cHM6Ly92YWFkaW4uY29tL2RvY3MvbGF0ZXN0L3N0eWxpbmcvY3VzdG9tLXRoZW1lL3N0eWxpbmctY29tcG9uZW50cykgZG9jdW1lbnRhdGlvbi5cbiAqXG4gKiBAbWl4ZXMgVGhlbWFibGVNaXhpblxuICogQG1peGVzIERpck1peGluXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgY2xhc3MgQ29tYm9Cb3hJdGVtIGV4dGVuZHMgVGhlbWFibGVNaXhpbihEaXJNaXhpbihQb2x5bWVyRWxlbWVudCkpIHtcbiAgc3RhdGljIGdldCB0ZW1wbGF0ZSgpIHtcbiAgICByZXR1cm4gaHRtbGBcbiAgICAgIDxzdHlsZT5cbiAgICAgICAgOmhvc3Qge1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB9XG5cbiAgICAgICAgOmhvc3QoW2hpZGRlbl0pIHtcbiAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICB9XG4gICAgICA8L3N0eWxlPlxuICAgICAgPHNwYW4gcGFydD1cImNoZWNrbWFya1wiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiPjwvc3Bhbj5cbiAgICAgIDxkaXYgcGFydD1cImNvbnRlbnRcIj5cbiAgICAgICAgPHNsb3Q+PC9zbG90PlxuICAgICAgPC9kaXY+XG4gICAgYDtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgaXMoKSB7XG4gICAgcmV0dXJuICd2YWFkaW4tY29tYm8tYm94LWl0ZW0nO1xuICB9XG5cbiAgc3RhdGljIGdldCBwcm9wZXJ0aWVzKCkge1xuICAgIHJldHVybiB7XG4gICAgICAvKipcbiAgICAgICAqIFRoZSBpbmRleCBvZiB0aGUgaXRlbVxuICAgICAgICovXG4gICAgICBpbmRleDogTnVtYmVyLFxuXG4gICAgICAvKipcbiAgICAgICAqIFRoZSBpdGVtIHRvIHJlbmRlclxuICAgICAgICogQHR5cGUgeyhTdHJpbmd8T2JqZWN0KX1cbiAgICAgICAqL1xuICAgICAgaXRlbTogT2JqZWN0LFxuXG4gICAgICAvKipcbiAgICAgICAqIFRoZSB0ZXh0IGxhYmVsIGNvcnJlc3BvbmRpbmcgdG8gdGhlIGl0ZW1cbiAgICAgICAqL1xuICAgICAgbGFiZWw6IFN0cmluZyxcblxuICAgICAgLyoqXG4gICAgICAgKiBUcnVlIHdoZW4gaXRlbSBpcyBzZWxlY3RlZFxuICAgICAgICovXG4gICAgICBzZWxlY3RlZDoge1xuICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICB2YWx1ZTogZmFsc2UsXG4gICAgICAgIHJlZmxlY3RUb0F0dHJpYnV0ZTogdHJ1ZSxcbiAgICAgIH0sXG5cbiAgICAgIC8qKlxuICAgICAgICogVHJ1ZSB3aGVuIGl0ZW0gaXMgZm9jdXNlZFxuICAgICAgICovXG4gICAgICBmb2N1c2VkOiB7XG4gICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgIHZhbHVlOiBmYWxzZSxcbiAgICAgICAgcmVmbGVjdFRvQXR0cmlidXRlOiB0cnVlLFxuICAgICAgfSxcblxuICAgICAgLyoqXG4gICAgICAgKiBDdXN0b20gZnVuY3Rpb24gZm9yIHJlbmRlcmluZyB0aGUgY29udGVudCBvZiB0aGUgYDx2YWFkaW4tY29tYm8tYm94LWl0ZW0+YCBwcm9wYWdhdGVkIGZyb20gdGhlIGNvbWJvIGJveCBlbGVtZW50LlxuICAgICAgICovXG4gICAgICByZW5kZXJlcjogRnVuY3Rpb24sXG5cbiAgICAgIC8qKlxuICAgICAgICogU2F2ZWQgaW5zdGFuY2Ugb2YgYSBjdXN0b20gcmVuZGVyZXIgZnVuY3Rpb24uXG4gICAgICAgKi9cbiAgICAgIF9vbGRSZW5kZXJlcjogRnVuY3Rpb24sXG4gICAgfTtcbiAgfVxuXG4gIHN0YXRpYyBnZXQgb2JzZXJ2ZXJzKCkge1xuICAgIHJldHVybiBbJ19fcmVuZGVyZXJPckl0ZW1DaGFuZ2VkKHJlbmRlcmVyLCBpbmRleCwgaXRlbS4qLCBzZWxlY3RlZCwgZm9jdXNlZCknLCAnX191cGRhdGVMYWJlbChsYWJlbCwgcmVuZGVyZXIpJ107XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBzdXBlci5jb25uZWN0ZWRDYWxsYmFjaygpO1xuXG4gICAgdGhpcy5fY29tYm9Cb3ggPSB0aGlzLnBhcmVudE5vZGUuY29tYm9Cb3g7XG5cbiAgICBjb25zdCBob3N0RGlyID0gdGhpcy5fY29tYm9Cb3guZ2V0QXR0cmlidXRlKCdkaXInKTtcbiAgICBpZiAoaG9zdERpcikge1xuICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ2RpcicsIGhvc3REaXIpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZXF1ZXN0cyBhbiB1cGRhdGUgZm9yIHRoZSBjb250ZW50IG9mIHRoZSBpdGVtLlxuICAgKiBXaGlsZSBwZXJmb3JtaW5nIHRoZSB1cGRhdGUsIGl0IGludm9rZXMgdGhlIHJlbmRlcmVyIHBhc3NlZCBpbiB0aGUgYHJlbmRlcmVyYCBwcm9wZXJ0eS5cbiAgICpcbiAgICogSXQgaXMgbm90IGd1YXJhbnRlZWQgdGhhdCB0aGUgdXBkYXRlIGhhcHBlbnMgaW1tZWRpYXRlbHkgKHN5bmNocm9ub3VzbHkpIGFmdGVyIGl0IGlzIHJlcXVlc3RlZC5cbiAgICovXG4gIHJlcXVlc3RDb250ZW50VXBkYXRlKCkge1xuICAgIGlmICghdGhpcy5yZW5kZXJlcikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IG1vZGVsID0ge1xuICAgICAgaW5kZXg6IHRoaXMuaW5kZXgsXG4gICAgICBpdGVtOiB0aGlzLml0ZW0sXG4gICAgICBmb2N1c2VkOiB0aGlzLmZvY3VzZWQsXG4gICAgICBzZWxlY3RlZDogdGhpcy5zZWxlY3RlZCxcbiAgICB9O1xuXG4gICAgdGhpcy5yZW5kZXJlcih0aGlzLCB0aGlzLl9jb21ib0JveCwgbW9kZWwpO1xuICB9XG5cbiAgLyoqIEBwcml2YXRlICovXG4gIF9fcmVuZGVyZXJPckl0ZW1DaGFuZ2VkKHJlbmRlcmVyLCBpbmRleCwgaXRlbSkge1xuICAgIGlmIChpdGVtID09PSB1bmRlZmluZWQgfHwgaW5kZXggPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICh0aGlzLl9vbGRSZW5kZXJlciAhPT0gcmVuZGVyZXIpIHtcbiAgICAgIHRoaXMuaW5uZXJIVE1MID0gJyc7XG4gICAgICAvLyBXaGVuZXZlciBhIExpdC1iYXNlZCByZW5kZXJlciBpcyB1c2VkLCBpdCBhc3NpZ25zIGEgTGl0IHBhcnQgdG8gdGhlIG5vZGUgaXQgd2FzIHJlbmRlcmVkIGludG8uXG4gICAgICAvLyBXaGVuIGNsZWFyaW5nIHRoZSByZW5kZXJlZCBjb250ZW50LCB0aGlzIHBhcnQgbmVlZHMgdG8gYmUgbWFudWFsbHkgZGlzcG9zZWQgb2YuXG4gICAgICAvLyBPdGhlcndpc2UsIHVzaW5nIGEgTGl0LWJhc2VkIHJlbmRlcmVyIG9uIHRoZSBzYW1lIG5vZGUgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gb3IgcmVuZGVyIG5vdGhpbmcgYWZ0ZXJ3YXJkLlxuICAgICAgZGVsZXRlIHRoaXMuXyRsaXRQYXJ0JDtcbiAgICB9XG5cbiAgICBpZiAocmVuZGVyZXIpIHtcbiAgICAgIHRoaXMuX29sZFJlbmRlcmVyID0gcmVuZGVyZXI7XG4gICAgICB0aGlzLnJlcXVlc3RDb250ZW50VXBkYXRlKCk7XG4gICAgfVxuICB9XG5cbiAgLyoqIEBwcml2YXRlICovXG4gIF9fdXBkYXRlTGFiZWwobGFiZWwsIHJlbmRlcmVyKSB7XG4gICAgaWYgKHJlbmRlcmVyKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy50ZXh0Q29udGVudCA9IGxhYmVsO1xuICB9XG59XG5cbmN1c3RvbUVsZW1lbnRzLmRlZmluZShDb21ib0JveEl0ZW0uaXMsIENvbWJvQm94SXRlbSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-light.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-light.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ComboBoxLight\": () => (/* binding */ ComboBoxLight)\n/* harmony export */ });\n/* harmony import */ var _vaadin_combo_box_item_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vaadin-combo-box-item.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-item.js\");\n/* harmony import */ var _vaadin_combo_box_overlay_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vaadin-combo-box-overlay.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay.js\");\n/* harmony import */ var _vaadin_combo_box_scroller_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vaadin-combo-box-scroller.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_case_map_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/polymer/lib/utils/case-map.js */ \"./node_modules/@polymer/polymer/lib/utils/case-map.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polymer/polymer/lib/utils/render-status.js */ \"./node_modules/@polymer/polymer/lib/utils/render-status.js\");\n/* harmony import */ var _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @polymer/polymer/polymer-element.js */ \"./node_modules/@polymer/polymer/polymer-element.js\");\n/* harmony import */ var _vaadin_field_base_src_validate_mixin_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @vaadin/field-base/src/validate-mixin.js */ \"./node_modules/@vaadin/field-base/src/validate-mixin.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/* harmony import */ var _vaadin_combo_box_data_provider_mixin_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./vaadin-combo-box-data-provider-mixin.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-data-provider-mixin.js\");\n/* harmony import */ var _vaadin_combo_box_mixin_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./vaadin-combo-box-mixin.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-mixin.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n\n\n\n\n\n\n/**\n * `<vaadin-combo-box-light>` is a customizable version of the `<vaadin-combo-box>` providing\n * only the dropdown functionality and leaving the input field definition to the user.\n *\n * The element has the same API as `<vaadin-combo-box>`.\n *\n * To create a custom input field, you need to add a child element which has a two-way\n * data-bindable property representing the input value. The property name is expected\n * to be `value` by default. For example, you can use `<vaadin-text-field>` element:\n *\n * ```html\n * <vaadin-combo-box-light>\n *   <vaadin-text-field></vaadin-text-field>\n * </vaadin-combo-box-light>\n * ```\n *\n * If you are using custom input field that has other property for value,\n * set `class=\"input\"` to enable corresponding logic, and use `attr-for-value`\n * attribute to specify which property to use:\n *\n * ```html\n * <vaadin-combo-box-light attr-for-value=\"input-value\">\n *   <custom-input class=\"input\"></custom-input>\n * </vaadin-combo-box-light>\n * ```\n *\n * You can also pass custom toggle and clear buttons with corresponding classes:\n *\n * ```html\n * <vaadin-combo-box-light>\n *   <custom-input class=\"input\" attr-for-value=\"input-value\">\n *     <button slot=\"suffix\" class=\"clear-button\">Clear</button>\n *     <button slot=\"suffix\" class=\"toggle-button\">Toggle</button>\n *   </custom-input>\n * </vaadin-combo-box-light>\n * ```\n *\n * @fires {Event} change - Fired when the user commits a value change.\n * @fires {CustomEvent} custom-value-set - Fired when the user sets a custom value.\n * @fires {CustomEvent} filter-changed - Fired when the `filter` property changes.\n * @fires {CustomEvent} invalid-changed - Fired when the `invalid` property changes.\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} selected-item-changed - Fired when the `selectedItem` property changes.\n * @fires {CustomEvent} value-changed - Fired when the `value` property changes.\n * @fires {CustomEvent} validated - Fired whenever the field is validated.\n *\n * @extends HTMLElement\n * @mixes ComboBoxDataProviderMixin\n * @mixes ComboBoxMixin\n * @mixes ThemableMixin\n * @mixes ValidateMixin\n */\nclass ComboBoxLight extends (0,_vaadin_combo_box_data_provider_mixin_js__WEBPACK_IMPORTED_MODULE_8__.ComboBoxDataProviderMixin)((0,_vaadin_combo_box_mixin_js__WEBPACK_IMPORTED_MODULE_9__.ComboBoxMixin)((0,_vaadin_field_base_src_validate_mixin_js__WEBPACK_IMPORTED_MODULE_6__.ValidateMixin)((0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_7__.ThemableMixin)(_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__.PolymerElement)))) {\n  static get is() {\n    return 'vaadin-combo-box-light';\n  }\n  static get template() {\n    return _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_5__.html`\n      <style>\n        :host([opened]) {\n          pointer-events: auto;\n        }\n      </style>\n\n      <slot></slot>\n\n      <vaadin-combo-box-overlay\n        id=\"overlay\"\n        opened=\"[[_overlayOpened]]\"\n        loading$=\"[[loading]]\"\n        theme$=\"[[_theme]]\"\n        position-target=\"[[inputElement]]\"\n        no-vertical-overlap\n        restore-focus-node=\"[[inputElement]]\"\n      ></vaadin-combo-box-overlay>\n    `;\n  }\n  static get properties() {\n    return {\n      /**\n       * Name of the two-way data-bindable property representing the\n       * value of the custom input field.\n       * @attr {string} attr-for-value\n       * @type {string}\n       */\n      attrForValue: {\n        type: String,\n        value: 'value'\n      }\n    };\n  }\n\n  /**\n   * Used by `InputControlMixin` as a reference to the clear button element.\n   * @protected\n   * @return {!HTMLElement}\n   */\n  get clearElement() {\n    return this.querySelector('.clear-button');\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._toggleElement = this.querySelector('.toggle-button');\n\n    // Wait until the slotted input DOM is ready\n    (0,_polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_4__.afterNextRender)(this, () => {\n      this._setInputElement(this.querySelector('vaadin-text-field,.input'));\n      this._revertInputValue();\n    });\n  }\n\n  /**\n   * Returns true if the current input value satisfies all constraints (if any).\n   * @return {boolean}\n   */\n  checkValidity() {\n    if (this.inputElement.validate) {\n      return this.inputElement.validate();\n    }\n    return super.checkValidity();\n  }\n\n  /**\n   * @return {string}\n   * @protected\n   */\n  get _propertyForValue() {\n    return (0,_polymer_polymer_lib_utils_case_map_js__WEBPACK_IMPORTED_MODULE_3__.dashToCamelCase)(this.attrForValue);\n  }\n\n  /**\n   * @protected\n   * @override\n   * @return {HTMLInputElement | undefined}\n   */\n  get _nativeInput() {\n    const input = this.inputElement;\n    if (input) {\n      // Support `<input class=\"input\">`\n      if (input instanceof HTMLInputElement) {\n        return input;\n      }\n\n      // Support `<input>` in light DOM (e.g. `vaadin-text-field`)\n      const slottedInput = input.querySelector('input');\n      if (slottedInput) {\n        return slottedInput;\n      }\n      if (input.shadowRoot) {\n        // Support `<input>` in Shadow DOM (e.g. `mwc-textfield`)\n        const shadowInput = input.shadowRoot.querySelector('input');\n        if (shadowInput) {\n          return shadowInput;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /** @protected */\n  _isClearButton(event) {\n    return super._isClearButton(event) || event.type === 'input' && !event.isTrusted ||\n    // Fake input event dispatched by clear button\n    event.composedPath()[0].getAttribute('part') === 'clear-button';\n  }\n\n  /**\n   * @param {!Event} event\n   * @protected\n   */\n  _onChange(event) {\n    super._onChange(event);\n    if (this._isClearButton(event)) {\n      this._clear();\n    }\n  }\n}\ncustomElements.define(ComboBoxLight.is, ComboBoxLight);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-light.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-mixin.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-mixin.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ComboBoxMixin\": () => (/* binding */ ComboBoxMixin)\n/* harmony export */ });\n/* harmony import */ var _vaadin_component_base_src_browser_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/component-base/src/browser-utils.js */ \"./node_modules/@vaadin/component-base/src/browser-utils.js\");\n/* harmony import */ var _vaadin_component_base_src_controller_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/component-base/src/controller-mixin.js */ \"./node_modules/@vaadin/component-base/src/controller-mixin.js\");\n/* harmony import */ var _vaadin_component_base_src_disabled_mixin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/component-base/src/disabled-mixin.js */ \"./node_modules/@vaadin/component-base/src/disabled-mixin.js\");\n/* harmony import */ var _vaadin_component_base_src_focus_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/component-base/src/focus-utils.js */ \"./node_modules/@vaadin/component-base/src/focus-utils.js\");\n/* harmony import */ var _vaadin_component_base_src_keyboard_mixin_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @vaadin/component-base/src/keyboard-mixin.js */ \"./node_modules/@vaadin/component-base/src/keyboard-mixin.js\");\n/* harmony import */ var _vaadin_component_base_src_templates_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @vaadin/component-base/src/templates.js */ \"./node_modules/@vaadin/component-base/src/templates.js\");\n/* harmony import */ var _vaadin_field_base_src_input_mixin_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @vaadin/field-base/src/input-mixin.js */ \"./node_modules/@vaadin/field-base/src/input-mixin.js\");\n/* harmony import */ var _vaadin_field_base_src_virtual_keyboard_controller_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @vaadin/field-base/src/virtual-keyboard-controller.js */ \"./node_modules/@vaadin/field-base/src/virtual-keyboard-controller.js\");\n/* harmony import */ var _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./vaadin-combo-box-placeholder.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n\n\n\n\n\n/**\n * Checks if the value is supported as an item value in this control.\n *\n * @param {unknown} value\n * @return {boolean}\n */\nfunction isValidValue(value) {\n  return value !== undefined && value !== null;\n}\n\n/**\n * Returns the index of the first item that satisfies the provided testing function\n * ignoring placeholder items.\n *\n * @param {Array<ComboBoxItem | string>} items\n * @param {Function} callback\n * @return {number}\n */\nfunction findItemIndex(items, callback) {\n  return items.findIndex(item => {\n    if (item instanceof _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_8__.ComboBoxPlaceholder) {\n      return false;\n    }\n    return callback(item);\n  });\n}\n\n/**\n * @polymerMixin\n * @param {function(new:HTMLElement)} subclass\n */\nconst ComboBoxMixin = subclass => class VaadinComboBoxMixinElement extends (0,_vaadin_component_base_src_controller_mixin_js__WEBPACK_IMPORTED_MODULE_1__.ControllerMixin)((0,_vaadin_component_base_src_keyboard_mixin_js__WEBPACK_IMPORTED_MODULE_4__.KeyboardMixin)((0,_vaadin_field_base_src_input_mixin_js__WEBPACK_IMPORTED_MODULE_6__.InputMixin)((0,_vaadin_component_base_src_disabled_mixin_js__WEBPACK_IMPORTED_MODULE_2__.DisabledMixin)(subclass)))) {\n  static get properties() {\n    return {\n      /**\n       * True if the dropdown is open, false otherwise.\n       * @type {boolean}\n       */\n      opened: {\n        type: Boolean,\n        notify: true,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_openedChanged'\n      },\n      /**\n       * Set true to prevent the overlay from opening automatically.\n       * @attr {boolean} auto-open-disabled\n       */\n      autoOpenDisabled: {\n        type: Boolean\n      },\n      /**\n       * When present, it specifies that the field is read-only.\n       * @type {boolean}\n       */\n      readonly: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Custom function for rendering the content of every item.\n       * Receives three arguments:\n       *\n       * - `root` The `<vaadin-combo-box-item>` internal container DOM element.\n       * - `comboBox` The reference to the `<vaadin-combo-box>` element.\n       * - `model` The object with the properties related with the rendered\n       *   item, contains:\n       *   - `model.index` The index of the rendered item.\n       *   - `model.item` The item.\n       * @type {ComboBoxRenderer | undefined}\n       */\n      renderer: Function,\n      /**\n       * A full set of items to filter the visible options from.\n       * The items can be of either `String` or `Object` type.\n       * @type {!Array<!ComboBoxItem | string> | undefined}\n       */\n      items: {\n        type: Array,\n        observer: '_itemsChanged'\n      },\n      /**\n       * If `true`, the user can input a value that is not present in the items list.\n       * `value` property will be set to the input value in this case.\n       * Also, when `value` is set programmatically, the input value will be set\n       * to reflect that value.\n       * @attr {boolean} allow-custom-value\n       * @type {boolean}\n       */\n      allowCustomValue: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * A subset of items, filtered based on the user input. Filtered items\n       * can be assigned directly to omit the internal filtering functionality.\n       * The items can be of either `String` or `Object` type.\n       * @type {!Array<!ComboBoxItem | string> | undefined}\n       */\n      filteredItems: {\n        type: Array,\n        observer: '_filteredItemsChanged'\n      },\n      /**\n       * Used to detect user value changes and fire `change` events.\n       * @private\n       */\n      _lastCommittedValue: String,\n      /**\n       * When set to `true`, \"loading\" attribute is added to host and the overlay element.\n       * @type {boolean}\n       */\n      loading: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * @type {number}\n       * @protected\n       */\n      _focusedIndex: {\n        type: Number,\n        observer: '_focusedIndexChanged',\n        value: -1\n      },\n      /**\n       * Filtering string the user has typed into the input field.\n       * @type {string}\n       */\n      filter: {\n        type: String,\n        value: '',\n        notify: true\n      },\n      /**\n       * The selected item from the `items` array.\n       * @type {ComboBoxItem | string | undefined}\n       */\n      selectedItem: {\n        type: Object,\n        notify: true\n      },\n      /**\n       * Path for label of the item. If `items` is an array of objects, the\n       * `itemLabelPath` is used to fetch the displayed string label for each\n       * item.\n       *\n       * The item label is also used for matching items when processing user\n       * input, i.e., for filtering and selecting items.\n       * @attr {string} item-label-path\n       * @type {string}\n       */\n      itemLabelPath: {\n        type: String,\n        value: 'label',\n        observer: '_itemLabelPathChanged'\n      },\n      /**\n       * Path for the value of the item. If `items` is an array of objects, the\n       * `itemValuePath:` is used to fetch the string value for the selected\n       * item.\n       *\n       * The item value is used in the `value` property of the combo box,\n       * to provide the form value.\n       * @attr {string} item-value-path\n       * @type {string}\n       */\n      itemValuePath: {\n        type: String,\n        value: 'value'\n      },\n      /**\n       * Path for the id of the item. If `items` is an array of objects,\n       * the `itemIdPath` is used to compare and identify the same item\n       * in `selectedItem` and `filteredItems` (items given by the\n       * `dataProvider` callback).\n       * @attr {string} item-id-path\n       */\n      itemIdPath: String,\n      /**\n       * @type {!HTMLElement | undefined}\n       * @protected\n       */\n      _toggleElement: {\n        type: Object,\n        observer: '_toggleElementChanged'\n      },\n      /** @private */\n      _closeOnBlurIsPrevented: Boolean,\n      /** @private */\n      _scroller: Object,\n      /** @private */\n      _overlayOpened: {\n        type: Boolean,\n        observer: '_overlayOpenedChanged'\n      }\n    };\n  }\n  static get observers() {\n    return ['_selectedItemChanged(selectedItem, itemValuePath, itemLabelPath)', '_openedOrItemsChanged(opened, filteredItems, loading)', '_updateScroller(_scroller, filteredItems, opened, loading, selectedItem, itemIdPath, _focusedIndex, renderer, theme)'];\n  }\n  constructor() {\n    super();\n    this._boundOnFocusout = this._onFocusout.bind(this);\n    this._boundOverlaySelectedItemChanged = this._overlaySelectedItemChanged.bind(this);\n    this._boundOnClearButtonMouseDown = this.__onClearButtonMouseDown.bind(this);\n    this._boundOnClick = this._onClick.bind(this);\n    this._boundOnOverlayTouchAction = this._onOverlayTouchAction.bind(this);\n    this._boundOnTouchend = this._onTouchend.bind(this);\n  }\n\n  /**\n   * Tag name prefix used by scroller and items.\n   * @protected\n   * @return {string}\n   */\n  get _tagNamePrefix() {\n    return 'vaadin-combo-box';\n  }\n\n  /**\n   * @return {string | undefined}\n   * @protected\n   */\n  get _inputElementValue() {\n    return this.inputElement ? this.inputElement[this._propertyForValue] : undefined;\n  }\n\n  /**\n   * @param {string} value\n   * @protected\n   */\n  set _inputElementValue(value) {\n    if (this.inputElement) {\n      this.inputElement[this._propertyForValue] = value;\n    }\n  }\n\n  /**\n   * Get a reference to the native `<input>` element.\n   * Override to provide a custom input.\n   * @protected\n   * @return {HTMLInputElement | undefined}\n   */\n  get _nativeInput() {\n    return this.inputElement;\n  }\n\n  /**\n   * Override method inherited from `InputMixin`\n   * to customize the input element.\n   * @protected\n   * @override\n   */\n  _inputElementChanged(inputElement) {\n    super._inputElementChanged(inputElement);\n    const input = this._nativeInput;\n    if (input) {\n      input.autocomplete = 'off';\n      input.autocapitalize = 'off';\n      input.setAttribute('role', 'combobox');\n      input.setAttribute('aria-autocomplete', 'list');\n      input.setAttribute('aria-expanded', !!this.opened);\n\n      // Disable the macOS Safari spell check auto corrections.\n      input.setAttribute('spellcheck', 'false');\n\n      // Disable iOS autocorrect suggestions.\n      input.setAttribute('autocorrect', 'off');\n      this._revertInputValueToValue();\n      if (this.clearElement) {\n        this.clearElement.addEventListener('mousedown', this._boundOnClearButtonMouseDown);\n      }\n    }\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._initOverlay();\n    this._initScroller();\n    this.addEventListener('focusout', this._boundOnFocusout);\n    this._lastCommittedValue = this.value;\n    this.addEventListener('click', this._boundOnClick);\n    this.addEventListener('touchend', this._boundOnTouchend);\n    const bringToFrontListener = () => {\n      requestAnimationFrame(() => {\n        this.$.overlay.bringToFront();\n      });\n    };\n    this.addEventListener('mousedown', bringToFrontListener);\n    this.addEventListener('touchstart', bringToFrontListener);\n    (0,_vaadin_component_base_src_templates_js__WEBPACK_IMPORTED_MODULE_5__.processTemplates)(this);\n    this.addController(new _vaadin_field_base_src_virtual_keyboard_controller_js__WEBPACK_IMPORTED_MODULE_7__.VirtualKeyboardController(this));\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    // Close the overlay on detach\n    this.close();\n  }\n\n  /**\n   * Requests an update for the content of items.\n   * While performing the update, it invokes the renderer (passed in the `renderer` property) once an item.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (!this._scroller) {\n      return;\n    }\n    this._scroller.requestContentUpdate();\n    this._getItemElements().forEach(item => {\n      item.requestContentUpdate();\n    });\n  }\n\n  /**\n   * Opens the dropdown list.\n   */\n  open() {\n    // Prevent _open() being called when input is disabled or read-only\n    if (!this.disabled && !this.readonly) {\n      this.opened = true;\n    }\n  }\n\n  /**\n   * Closes the dropdown list.\n   */\n  close() {\n    this.opened = false;\n  }\n\n  /**\n   * Override Polymer lifecycle callback to handle `filter` property change after\n   * the observer for `opened` property is triggered. This is needed when opening\n   * combo-box on user input to ensure the focused index is set correctly.\n   *\n   * @param {!Object} currentProps Current accessor values\n   * @param {?Object} changedProps Properties changed since the last call\n   * @param {?Object} oldProps Previous values for each changed property\n   * @protected\n   * @override\n   */\n  _propertiesChanged(currentProps, changedProps, oldProps) {\n    super._propertiesChanged(currentProps, changedProps, oldProps);\n    if (changedProps.filter !== undefined) {\n      this._filterChanged(changedProps.filter);\n    }\n  }\n\n  /** @private */\n  _initOverlay() {\n    const overlay = this.$.overlay;\n\n    // Store instance for detecting \"dir\" attribute on opening\n    overlay._comboBox = this;\n    overlay.addEventListener('touchend', this._boundOnOverlayTouchAction);\n    overlay.addEventListener('touchmove', this._boundOnOverlayTouchAction);\n\n    // Prevent blurring the input when clicking inside the overlay\n    overlay.addEventListener('mousedown', e => e.preventDefault());\n\n    // Manual two-way binding for the overlay \"opened\" property\n    overlay.addEventListener('opened-changed', e => {\n      this._overlayOpened = e.detail.value;\n    });\n  }\n\n  /**\n   * Create and initialize the scroller element.\n   * Override to provide custom host reference.\n   *\n   * @protected\n   */\n  _initScroller(host) {\n    const scrollerTag = `${this._tagNamePrefix}-scroller`;\n    const overlay = this.$.overlay;\n    overlay.renderer = root => {\n      if (!root.firstChild) {\n        root.appendChild(document.createElement(scrollerTag));\n      }\n    };\n\n    // Ensure the scroller is rendered\n    overlay.requestContentUpdate();\n    const scroller = overlay.querySelector(scrollerTag);\n    scroller.comboBox = host || this;\n    scroller.getItemLabel = this._getItemLabel.bind(this);\n    scroller.addEventListener('selection-changed', this._boundOverlaySelectedItemChanged);\n\n    // Trigger the observer to set properties\n    this._scroller = scroller;\n  }\n\n  /** @private */\n  // eslint-disable-next-line max-params\n  _updateScroller(scroller, items, opened, loading, selectedItem, itemIdPath, focusedIndex, renderer, theme) {\n    if (scroller) {\n      if (opened) {\n        scroller.style.maxHeight = getComputedStyle(this).getPropertyValue(`--${this._tagNamePrefix}-overlay-max-height`) || '65vh';\n      }\n      scroller.setProperties({\n        items: opened ? items : [],\n        opened,\n        loading,\n        selectedItem,\n        itemIdPath,\n        focusedIndex,\n        renderer,\n        theme\n      });\n    }\n  }\n\n  /** @private */\n  _openedOrItemsChanged(opened, items, loading) {\n    // Close the overlay if there are no items to display.\n    // See https://github.com/vaadin/vaadin-combo-box/pull/964\n    this._overlayOpened = !!(opened && (loading || items && items.length));\n  }\n\n  /** @private */\n  _overlayOpenedChanged(opened, wasOpened) {\n    if (opened) {\n      this.dispatchEvent(new CustomEvent('vaadin-combo-box-dropdown-opened', {\n        bubbles: true,\n        composed: true\n      }));\n      this._onOpened();\n    } else if (wasOpened && this.filteredItems && this.filteredItems.length) {\n      this.close();\n      this.dispatchEvent(new CustomEvent('vaadin-combo-box-dropdown-closed', {\n        bubbles: true,\n        composed: true\n      }));\n    }\n  }\n\n  /** @private */\n  _focusedIndexChanged(index, oldIndex) {\n    if (oldIndex === undefined) {\n      return;\n    }\n    this._updateActiveDescendant(index);\n  }\n\n  /** @protected */\n  _isInputFocused() {\n    return this.inputElement && (0,_vaadin_component_base_src_focus_utils_js__WEBPACK_IMPORTED_MODULE_3__.isElementFocused)(this.inputElement);\n  }\n\n  /** @private */\n  _updateActiveDescendant(index) {\n    const input = this._nativeInput;\n    if (!input) {\n      return;\n    }\n    const item = this._getItemElements().find(el => el.index === index);\n    if (item) {\n      input.setAttribute('aria-activedescendant', item.id);\n    } else {\n      input.removeAttribute('aria-activedescendant');\n    }\n  }\n\n  /** @private */\n  _openedChanged(opened, wasOpened) {\n    // Prevent _close() being called when opened is set to its default value (false).\n    if (wasOpened === undefined) {\n      return;\n    }\n    if (opened) {\n      this._openedWithFocusRing = this.hasAttribute('focus-ring');\n      // For touch devices, we don't want to popup virtual keyboard\n      // unless input element is explicitly focused by the user.\n      if (!this._isInputFocused() && !_vaadin_component_base_src_browser_utils_js__WEBPACK_IMPORTED_MODULE_0__.isTouch) {\n        this.focus();\n      }\n      this.$.overlay.restoreFocusOnClose = true;\n    } else {\n      this._onClosed();\n      if (this._openedWithFocusRing && this._isInputFocused()) {\n        this.setAttribute('focus-ring', '');\n      }\n    }\n    const input = this._nativeInput;\n    if (input) {\n      input.setAttribute('aria-expanded', !!opened);\n      if (opened) {\n        input.setAttribute('aria-controls', this._scroller.id);\n      } else {\n        input.removeAttribute('aria-controls');\n      }\n    }\n  }\n\n  /** @private */\n  _onOverlayTouchAction() {\n    // On touch devices, blur the input on touch start inside the overlay, in order to hide\n    // the virtual keyboard. But don't close the overlay on this blur.\n    this._closeOnBlurIsPrevented = true;\n    this.inputElement.blur();\n    this._closeOnBlurIsPrevented = false;\n  }\n\n  /** @protected */\n  _isClearButton(event) {\n    return event.composedPath()[0] === this.clearElement;\n  }\n\n  /**\n   * @param {Event} event\n   * @protected\n   */\n  _handleClearButtonClick(event) {\n    event.preventDefault();\n    this._clear();\n\n    // De-select dropdown item\n    if (this.opened) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /**\n   * @param {Event} event\n   * @private\n   */\n  _onToggleButtonClick(event) {\n    // Prevent parent components such as `vaadin-grid`\n    // from handling the click event after it bubbles.\n    event.preventDefault();\n    if (this.opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * @param {Event} event\n   * @protected\n   */\n  _onHostClick(event) {\n    if (!this.autoOpenDisabled) {\n      event.preventDefault();\n      this.open();\n    }\n  }\n\n  /** @private */\n  _onClick(e) {\n    const path = e.composedPath();\n    if (this._isClearButton(e)) {\n      this._handleClearButtonClick(e);\n    } else if (path.indexOf(this._toggleElement) > -1) {\n      this._onToggleButtonClick(e);\n    } else {\n      this._onHostClick(e);\n    }\n  }\n\n  /**\n   * Override an event listener from `KeyboardMixin`.\n   *\n   * @param {KeyboardEvent} e\n   * @protected\n   * @override\n   */\n  _onKeyDown(e) {\n    super._onKeyDown(e);\n    if (e.key === 'Tab') {\n      this.$.overlay.restoreFocusOnClose = false;\n    } else if (e.key === 'ArrowDown') {\n      this._onArrowDown();\n\n      // Prevent caret from moving\n      e.preventDefault();\n    } else if (e.key === 'ArrowUp') {\n      this._onArrowUp();\n\n      // Prevent caret from moving\n      e.preventDefault();\n    }\n  }\n\n  /** @private */\n  _getItemLabel(item) {\n    let label = item && this.itemLabelPath ? this.get(this.itemLabelPath, item) : undefined;\n    if (label === undefined || label === null) {\n      label = item ? item.toString() : '';\n    }\n    return label;\n  }\n\n  /** @private */\n  _getItemValue(item) {\n    let value = item && this.itemValuePath ? this.get(this.itemValuePath, item) : undefined;\n    if (value === undefined) {\n      value = item ? item.toString() : '';\n    }\n    return value;\n  }\n\n  /** @private */\n  _onArrowDown() {\n    if (this.opened) {\n      const items = this.filteredItems;\n      if (items) {\n        this._focusedIndex = Math.min(items.length - 1, this._focusedIndex + 1);\n        this._prefillFocusedItemLabel();\n      }\n    } else {\n      this.open();\n    }\n  }\n\n  /** @private */\n  _onArrowUp() {\n    if (this.opened) {\n      if (this._focusedIndex > -1) {\n        this._focusedIndex = Math.max(0, this._focusedIndex - 1);\n      } else {\n        const items = this.filteredItems;\n        if (items) {\n          this._focusedIndex = items.length - 1;\n        }\n      }\n      this._prefillFocusedItemLabel();\n    } else {\n      this.open();\n    }\n  }\n\n  /** @private */\n  _prefillFocusedItemLabel() {\n    if (this._focusedIndex > -1) {\n      const focusedItem = this.filteredItems[this._focusedIndex];\n      this._inputElementValue = this._getItemLabel(focusedItem);\n      this._markAllSelectionRange();\n    }\n  }\n\n  /** @private */\n  _setSelectionRange(start, end) {\n    // Setting selection range focuses and/or moves the caret in some browsers,\n    // and there's no need to modify the selection range if the input isn't focused anyway.\n    // This affects Safari. When the overlay is open, and then hitting tab, browser should focus\n    // the next focusable element instead of the combo-box itself.\n    if (this._isInputFocused() && this.inputElement.setSelectionRange) {\n      this.inputElement.setSelectionRange(start, end);\n    }\n  }\n\n  /** @private */\n  _markAllSelectionRange() {\n    if (this._inputElementValue !== undefined) {\n      this._setSelectionRange(0, this._inputElementValue.length);\n    }\n  }\n\n  /** @private */\n  _clearSelectionRange() {\n    if (this._inputElementValue !== undefined) {\n      const pos = this._inputElementValue ? this._inputElementValue.length : 0;\n      this._setSelectionRange(pos, pos);\n    }\n  }\n\n  /** @private */\n  _closeOrCommit() {\n    if (!this.opened && !this.loading) {\n      this._commitValue();\n    } else {\n      this.close();\n    }\n  }\n\n  /**\n   * Override an event listener from `KeyboardMixin`.\n   *\n   * @param {KeyboardEvent} e\n   * @protected\n   * @override\n   */\n  _onEnter(e) {\n    // Do not commit value when custom values are disallowed and input value is not a valid option\n    // also stop propagation of the event, otherwise the user could submit a form while the input\n    // still contains an invalid value\n    const hasInvalidOption = this._focusedIndex < 0 && this._inputElementValue !== '' && this._getItemLabel(this.selectedItem) !== this._inputElementValue;\n    if (!this.allowCustomValue && hasInvalidOption) {\n      // Do not submit the surrounding form.\n      e.preventDefault();\n      // Do not trigger global listeners\n      e.stopPropagation();\n      return;\n    }\n\n    // Stop propagation of the enter event only if the dropdown is opened, this\n    // \"consumes\" the enter event for the action of closing the dropdown\n    if (this.opened) {\n      // Do not submit the surrounding form.\n      e.preventDefault();\n      // Do not trigger global listeners\n      e.stopPropagation();\n    }\n    this._closeOrCommit();\n  }\n\n  /**\n   * Override an event listener from `KeyboardMixin`.\n   * Do not call `super` in order to override clear\n   * button logic defined in `InputControlMixin`.\n   *\n   * @param {!KeyboardEvent} e\n   * @protected\n   * @override\n   */\n  _onEscape(e) {\n    if (this.autoOpenDisabled) {\n      // Auto-open is disabled\n      if (this.opened || this.value !== this._inputElementValue && this._inputElementValue.length > 0) {\n        // The overlay is open or\n        // The input value has changed but the change hasn't been committed, so cancel it.\n        e.stopPropagation();\n        this._focusedIndex = -1;\n        this.cancel();\n      } else if (this.clearButtonVisible && !this.opened && !!this.value) {\n        e.stopPropagation();\n        // The clear button is visible and the overlay is closed, so clear the value.\n        this._clear();\n      }\n    } else if (this.opened) {\n      // Auto-open is enabled\n      // The overlay is open\n      e.stopPropagation();\n      if (this._focusedIndex > -1) {\n        // An item is focused, revert the input to the filtered value\n        this._focusedIndex = -1;\n        this._revertInputValue();\n      } else {\n        // No item is focused, cancel the change and close the overlay\n        this.cancel();\n      }\n    } else if (this.clearButtonVisible && !!this.value) {\n      e.stopPropagation();\n      // The clear button is visible and the overlay is closed, so clear the value.\n      this._clear();\n    }\n  }\n\n  /** @private */\n  _toggleElementChanged(toggleElement) {\n    if (toggleElement) {\n      // Don't blur the input on toggle mousedown\n      toggleElement.addEventListener('mousedown', e => e.preventDefault());\n      // Unfocus previously focused element if focus is not inside combo box (on touch devices)\n      toggleElement.addEventListener('click', () => {\n        if (_vaadin_component_base_src_browser_utils_js__WEBPACK_IMPORTED_MODULE_0__.isTouch && !this._isInputFocused()) {\n          document.activeElement.blur();\n        }\n      });\n    }\n  }\n\n  /**\n   * Clears the current value.\n   * @protected\n   */\n  _clear() {\n    this.selectedItem = null;\n    if (this.allowCustomValue) {\n      this.value = '';\n    }\n    this._detectAndDispatchChange();\n  }\n\n  /**\n   * Reverts back to original value.\n   */\n  cancel() {\n    this._revertInputValueToValue();\n    // In the next _detectAndDispatchChange() call, the change detection should not pass\n    this._lastCommittedValue = this.value;\n    this._closeOrCommit();\n  }\n\n  /** @private */\n  _onOpened() {\n    // Defer scroll position adjustment to improve performance.\n    requestAnimationFrame(() => {\n      this._scrollIntoView(this._focusedIndex);\n\n      // Set attribute after the items are rendered when overlay is opened for the first time.\n      this._updateActiveDescendant(this._focusedIndex);\n    });\n\n    // _detectAndDispatchChange() should not consider value changes done before opening\n    this._lastCommittedValue = this.value;\n  }\n\n  /** @private */\n  _onClosed() {\n    if (!this.loading || this.allowCustomValue) {\n      this._commitValue();\n    }\n  }\n\n  /** @private */\n  _commitValue() {\n    if (this._focusedIndex > -1) {\n      const focusedItem = this.filteredItems[this._focusedIndex];\n      if (this.selectedItem !== focusedItem) {\n        this.selectedItem = focusedItem;\n      }\n      // Make sure input field is updated in case value doesn't change (i.e. FOO -> foo)\n      this._inputElementValue = this._getItemLabel(this.selectedItem);\n    } else if (this._inputElementValue === '' || this._inputElementValue === undefined) {\n      this.selectedItem = null;\n      if (this.allowCustomValue) {\n        this.value = '';\n      }\n    } else {\n      // Try to find an item which label matches the input value.\n      const items = [...(this.filteredItems || []), this.selectedItem];\n      const itemMatchingInputValue = items[this.__getItemIndexByLabel(items, this._inputElementValue)];\n      if (this.allowCustomValue &&\n      // To prevent a repetitive input value being saved after pressing ESC and Tab.\n      !itemMatchingInputValue) {\n        const customValue = this._inputElementValue;\n\n        // Store reference to the last custom value for checking it on focusout.\n        this._lastCustomValue = customValue;\n\n        // An item matching by label was not found, but custom values are allowed.\n        // Dispatch a custom-value-set event with the input value.\n        const e = new CustomEvent('custom-value-set', {\n          detail: customValue,\n          composed: true,\n          cancelable: true,\n          bubbles: true\n        });\n        this.dispatchEvent(e);\n        if (!e.defaultPrevented) {\n          this.value = customValue;\n        }\n      } else if (!this.allowCustomValue && !this.opened && itemMatchingInputValue) {\n        // An item matching by label was found, select it.\n        this.value = this._getItemValue(itemMatchingInputValue);\n      } else {\n        // Revert the input value\n        this._inputElementValue = this.selectedItem ? this._getItemLabel(this.selectedItem) : this.value || '';\n      }\n    }\n    this._detectAndDispatchChange();\n    this._clearSelectionRange();\n    this.filter = '';\n  }\n\n  /**\n   * @return {string}\n   * @protected\n   */\n  get _propertyForValue() {\n    return 'value';\n  }\n\n  /**\n   * Override an event listener from `InputMixin`.\n   * @param {!Event} event\n   * @protected\n   * @override\n   */\n  _onInput(event) {\n    const filter = this._inputElementValue;\n\n    // When opening dropdown on user input, both `opened` and `filter` properties are set.\n    // Perform a batched property update instead of relying on sync property observers.\n    // This is necessary to avoid an extra data-provider request for loading first page.\n    const props = {};\n    if (this.filter === filter) {\n      // Filter and input value might get out of sync, while keyboard navigating for example.\n      // Afterwards, input value might be changed to the same value as used in filtering.\n      // In situation like these, we need to make sure all the filter changes handlers are run.\n      this._filterChanged(this.filter);\n    } else {\n      props.filter = filter;\n    }\n    if (!this.opened && !this._isClearButton(event) && !this.autoOpenDisabled) {\n      props.opened = true;\n    }\n    this.setProperties(props);\n  }\n\n  /**\n   * Override an event listener from `InputMixin`.\n   * @param {!Event} event\n   * @protected\n   * @override\n   */\n  _onChange(event) {\n    // Suppress the native change event fired on the native input.\n    // We use `_detectAndDispatchChange` to fire a custom event.\n    event.stopPropagation();\n  }\n\n  /** @private */\n  _itemLabelPathChanged(itemLabelPath) {\n    if (typeof itemLabelPath !== 'string') {\n      console.error('You should set itemLabelPath to a valid string');\n    }\n  }\n\n  /** @private */\n  _filterChanged(filter) {\n    // Scroll to the top of the list whenever the filter changes.\n    this._scrollIntoView(0);\n    this._focusedIndex = -1;\n    if (this.items) {\n      this.filteredItems = this._filterItems(this.items, filter);\n    } else {\n      // With certain use cases (e. g., external filtering), `items` are\n      // undefined. Filtering is unnecessary per se, but the filteredItems\n      // observer should still be invoked to update focused item.\n      this._filteredItemsChanged(this.filteredItems);\n    }\n  }\n\n  /** @protected */\n  _revertInputValue() {\n    if (this.filter !== '') {\n      this._inputElementValue = this.filter;\n    } else {\n      this._revertInputValueToValue();\n    }\n    this._clearSelectionRange();\n  }\n\n  /** @private */\n  _revertInputValueToValue() {\n    if (this.allowCustomValue && !this.selectedItem) {\n      this._inputElementValue = this.value;\n    } else {\n      this._inputElementValue = this._getItemLabel(this.selectedItem);\n    }\n  }\n\n  /** @private */\n  _selectedItemChanged(selectedItem) {\n    if (selectedItem === null || selectedItem === undefined) {\n      if (this.filteredItems) {\n        if (!this.allowCustomValue) {\n          this.value = '';\n        }\n        this._toggleHasValue(this._hasValue);\n        this._inputElementValue = this.value;\n      }\n    } else {\n      const value = this._getItemValue(selectedItem);\n      if (this.value !== value) {\n        this.value = value;\n        if (this.value !== value) {\n          // The value was changed to something else in value-changed listener,\n          // so prevent from resetting it to the previous value.\n          return;\n        }\n      }\n      this._toggleHasValue(true);\n      this._inputElementValue = this._getItemLabel(selectedItem);\n    }\n    if (this.filteredItems) {\n      this._focusedIndex = this.filteredItems.indexOf(selectedItem);\n    }\n  }\n\n  /**\n   * Override an observer from `InputMixin`.\n   * @protected\n   * @override\n   */\n  _valueChanged(value, oldVal) {\n    if (value === '' && oldVal === undefined) {\n      // Initializing, no need to do anything\n      // See https://github.com/vaadin/vaadin-combo-box/issues/554\n      return;\n    }\n    if (isValidValue(value)) {\n      if (this._getItemValue(this.selectedItem) !== value) {\n        this._selectItemForValue(value);\n      }\n      if (!this.selectedItem && this.allowCustomValue) {\n        this._inputElementValue = value;\n      }\n      this._toggleHasValue(this._hasValue);\n    } else {\n      this.selectedItem = null;\n    }\n    this.filter = '';\n\n    // In the next _detectAndDispatchChange() call, the change detection should pass\n    this._lastCommittedValue = undefined;\n  }\n\n  /** @private */\n  _detectAndDispatchChange() {\n    if (this.value !== this._lastCommittedValue) {\n      this.dispatchEvent(new CustomEvent('change', {\n        bubbles: true\n      }));\n      this._lastCommittedValue = this.value;\n    }\n  }\n\n  /** @private */\n  _itemsChanged(items, oldItems) {\n    this._ensureItemsOrDataProvider(() => {\n      this.items = oldItems;\n    });\n    if (items) {\n      this.filteredItems = items.slice(0);\n    } else if (oldItems) {\n      // Only clear filteredItems if the component had items previously but got cleared\n      this.filteredItems = null;\n    }\n  }\n\n  /** @private */\n  _filteredItemsChanged(filteredItems, oldFilteredItems) {\n    // Store the currently focused item if any. The focused index preserves\n    // in the case when more filtered items are loading but it is reset\n    // when the user types in a filter query.\n    const focusedItem = oldFilteredItems ? oldFilteredItems[this._focusedIndex] : null;\n\n    // Try to sync `selectedItem` based on `value` once a new set of `filteredItems` is available\n    // (as a result of external filtering or when they have been loaded by the data provider).\n    // When `value` is specified but `selectedItem` is not, it means that there was no item\n    // matching `value` at the moment `value` was set, so `selectedItem` has remained unsynced.\n    const valueIndex = this.__getItemIndexByValue(filteredItems, this.value);\n    if ((this.selectedItem === null || this.selectedItem === undefined) && valueIndex >= 0) {\n      this.selectedItem = filteredItems[valueIndex];\n    }\n\n    // Try to first set focus on the item that had been focused before `filteredItems` were updated\n    // if it is still present in the `filteredItems` array. Otherwise, set the focused index\n    // depending on the selected item or the filter query.\n    const focusedItemIndex = this.__getItemIndexByValue(filteredItems, this._getItemValue(focusedItem));\n    if (focusedItemIndex > -1) {\n      this._focusedIndex = focusedItemIndex;\n    } else {\n      this.__setInitialFocusedIndex();\n    }\n  }\n\n  /** @private */\n  __setInitialFocusedIndex() {\n    const inputValue = this._inputElementValue;\n    if (inputValue === undefined || inputValue === this._getItemLabel(this.selectedItem)) {\n      // When the input element value is the same as the current value or not defined,\n      // set the focused index to the item that matches the value.\n      this._focusedIndex = this.__getItemIndexByLabel(this.filteredItems, this._getItemLabel(this.selectedItem));\n    } else {\n      // When the user filled in something that is different from the current value = filtering is enabled,\n      // set the focused index to the item that matches the filter query.\n      this._focusedIndex = this.__getItemIndexByLabel(this.filteredItems, this.filter);\n    }\n  }\n\n  /** @private */\n  _filterItems(arr, filter) {\n    if (!arr) {\n      return arr;\n    }\n    const filteredItems = arr.filter(item => {\n      filter = filter ? filter.toString().toLowerCase() : '';\n      // Check if item contains input value.\n      return this._getItemLabel(item).toString().toLowerCase().indexOf(filter) > -1;\n    });\n    return filteredItems;\n  }\n\n  /** @private */\n  _selectItemForValue(value) {\n    const valueIndex = this.__getItemIndexByValue(this.filteredItems, value);\n    const previouslySelectedItem = this.selectedItem;\n    if (valueIndex >= 0) {\n      this.selectedItem = this.filteredItems[valueIndex];\n    } else if (this.dataProvider && this.selectedItem === undefined) {\n      this.selectedItem = undefined;\n    } else {\n      this.selectedItem = null;\n    }\n    if (this.selectedItem === null && previouslySelectedItem === null) {\n      this._selectedItemChanged(this.selectedItem);\n    }\n  }\n\n  /** @private */\n  _getItemElements() {\n    return Array.from(this._scroller.querySelectorAll(`${this._tagNamePrefix}-item`));\n  }\n\n  /** @private */\n  _scrollIntoView(index) {\n    if (!this._scroller) {\n      return;\n    }\n    this._scroller.scrollIntoView(index);\n  }\n\n  /**\n   * Returns the first item that matches the provided value.\n   *\n   * @private\n   */\n  __getItemIndexByValue(items, value) {\n    if (!items || !isValidValue(value)) {\n      return -1;\n    }\n    return findItemIndex(items, item => {\n      return this._getItemValue(item) === value;\n    });\n  }\n\n  /**\n   * Returns the first item that matches the provided label.\n   * Labels are matched against each other case insensitively.\n   *\n   * @private\n   */\n  __getItemIndexByLabel(items, label) {\n    if (!items || !label) {\n      return -1;\n    }\n    return findItemIndex(items, item => {\n      return this._getItemLabel(item).toString().toLowerCase() === label.toString().toLowerCase();\n    });\n  }\n\n  /** @private */\n  _overlaySelectedItemChanged(e) {\n    // Stop this private event from leaking outside.\n    e.stopPropagation();\n    if (e.detail.item instanceof _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_8__.ComboBoxPlaceholder) {\n      // Placeholder items should not be selectable.\n      return;\n    }\n    if (this.opened) {\n      this._focusedIndex = this.filteredItems.indexOf(e.detail.item);\n      this.close();\n    }\n  }\n\n  /** @private */\n  __onClearButtonMouseDown(event) {\n    event.preventDefault(); // Prevent native focusout event\n    this.inputElement.focus();\n  }\n\n  /** @private */\n  _onFocusout(event) {\n    // VoiceOver on iOS fires `focusout` event when moving focus to the item in the dropdown.\n    // Do not focus the input in this case, because it would break announcement for the item.\n    if (event.relatedTarget && event.relatedTarget.localName === `${this._tagNamePrefix}-item`) {\n      return;\n    }\n\n    // Fixes the problem with `focusout` happening when clicking on the scroll bar on Edge\n    if (event.relatedTarget === this.$.overlay) {\n      event.composedPath()[0].focus();\n      return;\n    }\n    if (!this.readonly && !this._closeOnBlurIsPrevented) {\n      // User's logic in `custom-value-set` event listener might cause input to blur,\n      // which will result in attempting to commit the same custom value once again.\n      if (!this.opened && this.allowCustomValue && this._inputElementValue === this._lastCustomValue) {\n        delete this._lastCustomValue;\n        return;\n      }\n      this._closeOrCommit();\n    }\n  }\n\n  /** @private */\n  _onTouchend(event) {\n    if (!this.clearElement || event.composedPath()[0] !== this.clearElement) {\n      return;\n    }\n    event.preventDefault();\n    this._clear();\n  }\n\n  /**\n   * Fired when the value changes.\n   *\n   * @event value-changed\n   * @param {Object} detail\n   * @param {String} detail.value the combobox value\n   */\n\n  /**\n   * Fired when selected item changes.\n   *\n   * @event selected-item-changed\n   * @param {Object} detail\n   * @param {Object|String} detail.value the selected item. Type is the same as the type of `items`.\n   */\n\n  /**\n   * Fired when the user sets a custom value.\n   * @event custom-value-set\n   * @param {String} detail the custom value\n   */\n\n  /**\n   * Fired when value changes.\n   * To comply with https://developer.mozilla.org/en-US/docs/Web/Events/change\n   * @event change\n   */\n\n  /**\n   * Fired after the `vaadin-combo-box-overlay` opens.\n   *\n   * @event vaadin-combo-box-dropdown-opened\n   */\n\n  /**\n   * Fired after the `vaadin-combo-box-overlay` closes.\n   *\n   * @event vaadin-combo-box-dropdown-closed\n   */\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay.js":
/*!************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ComboBoxOverlay\": () => (/* binding */ ComboBoxOverlay)\n/* harmony export */ });\n/* harmony import */ var _vaadin_overlay_src_vaadin_overlay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/overlay/src/vaadin-overlay.js */ \"./node_modules/@vaadin/overlay/src/vaadin-overlay.js\");\n/* harmony import */ var _vaadin_overlay_src_vaadin_overlay_position_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/overlay/src/vaadin-overlay-position-mixin.js */ \"./node_modules/@vaadin/overlay/src/vaadin-overlay-position-mixin.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_2__.registerStyles)('vaadin-combo-box-overlay', _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_2__.css`\n    #overlay {\n      width: var(--vaadin-combo-box-overlay-width, var(--_vaadin-combo-box-overlay-default-width, auto));\n    }\n\n    [part='content'] {\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n    }\n  `, {\n  moduleId: 'vaadin-combo-box-overlay-styles'\n});\nlet memoizedTemplate;\n\n/**\n * An element used internally by `<vaadin-combo-box>`. Not intended to be used separately.\n *\n * @extends Overlay\n * @private\n */\nclass ComboBoxOverlay extends (0,_vaadin_overlay_src_vaadin_overlay_position_mixin_js__WEBPACK_IMPORTED_MODULE_1__.PositionMixin)(_vaadin_overlay_src_vaadin_overlay_js__WEBPACK_IMPORTED_MODULE_0__.Overlay) {\n  static get is() {\n    return 'vaadin-combo-box-overlay';\n  }\n  static get template() {\n    if (!memoizedTemplate) {\n      memoizedTemplate = super.template.cloneNode(true);\n      memoizedTemplate.content.querySelector('[part~=\"overlay\"]').removeAttribute('tabindex');\n    }\n    return memoizedTemplate;\n  }\n  static get observers() {\n    return ['_setOverlayWidth(positionTarget, opened)'];\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    const comboBox = this._comboBox;\n    const hostDir = comboBox && comboBox.getAttribute('dir');\n    if (hostDir) {\n      this.setAttribute('dir', hostDir);\n    }\n  }\n  ready() {\n    super.ready();\n    const loader = document.createElement('div');\n    loader.setAttribute('part', 'loader');\n    const content = this.shadowRoot.querySelector('[part~=\"content\"]');\n    content.parentNode.insertBefore(loader, content);\n    this.requiredVerticalSpace = 200;\n  }\n  _outsideClickListener(event) {\n    const eventPath = event.composedPath();\n    if (!eventPath.includes(this.positionTarget) && !eventPath.includes(this)) {\n      this.close();\n    }\n  }\n  _setOverlayWidth(positionTarget, opened) {\n    if (positionTarget && opened) {\n      const propPrefix = this.localName;\n      this.style.setProperty(`--_${propPrefix}-default-width`, `${positionTarget.clientWidth}px`);\n      const customWidth = getComputedStyle(this._comboBox).getPropertyValue(`--${propPrefix}-width`);\n      if (customWidth === '') {\n        this.style.removeProperty(`--${propPrefix}-width`);\n      } else {\n        this.style.setProperty(`--${propPrefix}-width`, customWidth);\n      }\n      this._updatePosition();\n    }\n  }\n}\ncustomElements.define(ComboBoxOverlay.is, ComboBoxOverlay);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtb3ZlcmxheS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbWJvLWJveC9zcmMvdmFhZGluLWNvbWJvLWJveC1vdmVybGF5LmpzPzMzZjciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE1IC0gMjAyMiBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgeyBPdmVybGF5IH0gZnJvbSAnQHZhYWRpbi9vdmVybGF5L3NyYy92YWFkaW4tb3ZlcmxheS5qcyc7XG5pbXBvcnQgeyBQb3NpdGlvbk1peGluIH0gZnJvbSAnQHZhYWRpbi9vdmVybGF5L3NyYy92YWFkaW4tb3ZlcmxheS1wb3NpdGlvbi1taXhpbi5qcyc7XG5pbXBvcnQgeyBjc3MsIHJlZ2lzdGVyU3R5bGVzIH0gZnJvbSAnQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vdmFhZGluLXRoZW1hYmxlLW1peGluLmpzJztcblxucmVnaXN0ZXJTdHlsZXMoXG4gICd2YWFkaW4tY29tYm8tYm94LW92ZXJsYXknLFxuICBjc3NgXG4gICAgI292ZXJsYXkge1xuICAgICAgd2lkdGg6IHZhcigtLXZhYWRpbi1jb21iby1ib3gtb3ZlcmxheS13aWR0aCwgdmFyKC0tX3ZhYWRpbi1jb21iby1ib3gtb3ZlcmxheS1kZWZhdWx0LXdpZHRoLCBhdXRvKSk7XG4gICAgfVxuXG4gICAgW3BhcnQ9J2NvbnRlbnQnXSB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgIGhlaWdodDogMTAwJTtcbiAgICB9XG4gIGAsXG4gIHsgbW9kdWxlSWQ6ICd2YWFkaW4tY29tYm8tYm94LW92ZXJsYXktc3R5bGVzJyB9LFxuKTtcblxubGV0IG1lbW9pemVkVGVtcGxhdGU7XG5cbi8qKlxuICogQW4gZWxlbWVudCB1c2VkIGludGVybmFsbHkgYnkgYDx2YWFkaW4tY29tYm8tYm94PmAuIE5vdCBpbnRlbmRlZCB0byBiZSB1c2VkIHNlcGFyYXRlbHkuXG4gKlxuICogQGV4dGVuZHMgT3ZlcmxheVxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGNsYXNzIENvbWJvQm94T3ZlcmxheSBleHRlbmRzIFBvc2l0aW9uTWl4aW4oT3ZlcmxheSkge1xuICBzdGF0aWMgZ2V0IGlzKCkge1xuICAgIHJldHVybiAndmFhZGluLWNvbWJvLWJveC1vdmVybGF5JztcbiAgfVxuXG4gIHN0YXRpYyBnZXQgdGVtcGxhdGUoKSB7XG4gICAgaWYgKCFtZW1vaXplZFRlbXBsYXRlKSB7XG4gICAgICBtZW1vaXplZFRlbXBsYXRlID0gc3VwZXIudGVtcGxhdGUuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgbWVtb2l6ZWRUZW1wbGF0ZS5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoJ1twYXJ0fj1cIm92ZXJsYXlcIl0nKS5yZW1vdmVBdHRyaWJ1dGUoJ3RhYmluZGV4Jyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW9pemVkVGVtcGxhdGU7XG4gIH1cblxuICBzdGF0aWMgZ2V0IG9ic2VydmVycygpIHtcbiAgICByZXR1cm4gWydfc2V0T3ZlcmxheVdpZHRoKHBvc2l0aW9uVGFyZ2V0LCBvcGVuZWQpJ107XG4gIH1cblxuICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBzdXBlci5jb25uZWN0ZWRDYWxsYmFjaygpO1xuXG4gICAgY29uc3QgY29tYm9Cb3ggPSB0aGlzLl9jb21ib0JveDtcblxuICAgIGNvbnN0IGhvc3REaXIgPSBjb21ib0JveCAmJiBjb21ib0JveC5nZXRBdHRyaWJ1dGUoJ2RpcicpO1xuICAgIGlmIChob3N0RGlyKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZSgnZGlyJywgaG9zdERpcik7XG4gICAgfVxuICB9XG5cbiAgcmVhZHkoKSB7XG4gICAgc3VwZXIucmVhZHkoKTtcbiAgICBjb25zdCBsb2FkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBsb2FkZXIuc2V0QXR0cmlidXRlKCdwYXJ0JywgJ2xvYWRlcicpO1xuICAgIGNvbnN0IGNvbnRlbnQgPSB0aGlzLnNoYWRvd1Jvb3QucXVlcnlTZWxlY3RvcignW3BhcnR+PVwiY29udGVudFwiXScpO1xuICAgIGNvbnRlbnQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobG9hZGVyLCBjb250ZW50KTtcbiAgICB0aGlzLnJlcXVpcmVkVmVydGljYWxTcGFjZSA9IDIwMDtcbiAgfVxuXG4gIF9vdXRzaWRlQ2xpY2tMaXN0ZW5lcihldmVudCkge1xuICAgIGNvbnN0IGV2ZW50UGF0aCA9IGV2ZW50LmNvbXBvc2VkUGF0aCgpO1xuICAgIGlmICghZXZlbnRQYXRoLmluY2x1ZGVzKHRoaXMucG9zaXRpb25UYXJnZXQpICYmICFldmVudFBhdGguaW5jbHVkZXModGhpcykpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICBfc2V0T3ZlcmxheVdpZHRoKHBvc2l0aW9uVGFyZ2V0LCBvcGVuZWQpIHtcbiAgICBpZiAocG9zaXRpb25UYXJnZXQgJiYgb3BlbmVkKSB7XG4gICAgICBjb25zdCBwcm9wUHJlZml4ID0gdGhpcy5sb2NhbE5hbWU7XG4gICAgICB0aGlzLnN0eWxlLnNldFByb3BlcnR5KGAtLV8ke3Byb3BQcmVmaXh9LWRlZmF1bHQtd2lkdGhgLCBgJHtwb3NpdGlvblRhcmdldC5jbGllbnRXaWR0aH1weGApO1xuXG4gICAgICBjb25zdCBjdXN0b21XaWR0aCA9IGdldENvbXB1dGVkU3R5bGUodGhpcy5fY29tYm9Cb3gpLmdldFByb3BlcnR5VmFsdWUoYC0tJHtwcm9wUHJlZml4fS13aWR0aGApO1xuXG4gICAgICBpZiAoY3VzdG9tV2lkdGggPT09ICcnKSB7XG4gICAgICAgIHRoaXMuc3R5bGUucmVtb3ZlUHJvcGVydHkoYC0tJHtwcm9wUHJlZml4fS13aWR0aGApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zdHlsZS5zZXRQcm9wZXJ0eShgLS0ke3Byb3BQcmVmaXh9LXdpZHRoYCwgY3VzdG9tV2lkdGgpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl91cGRhdGVQb3NpdGlvbigpO1xuICAgIH1cbiAgfVxufVxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoQ29tYm9Cb3hPdmVybGF5LmlzLCBDb21ib0JveE92ZXJsYXkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-overlay.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ComboBoxPlaceholder\": () => (/* binding */ ComboBoxPlaceholder)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/*\n * Placeholder object class representing items being loaded.\n *\n * @private\n */\nconst ComboBoxPlaceholder = class ComboBoxPlaceholder {\n  toString() {\n    return '';\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvc3JjL3ZhYWRpbi1jb21iby1ib3gtcGxhY2Vob2xkZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnN0ZW9uLXBhbmVsLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tYm8tYm94L3NyYy92YWFkaW4tY29tYm8tYm94LXBsYWNlaG9sZGVyLmpzPzg2NGEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE1IC0gMjAyMiBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5cbi8qXG4gKiBQbGFjZWhvbGRlciBvYmplY3QgY2xhc3MgcmVwcmVzZW50aW5nIGl0ZW1zIGJlaW5nIGxvYWRlZC5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgY29uc3QgQ29tYm9Cb3hQbGFjZWhvbGRlciA9IGNsYXNzIENvbWJvQm94UGxhY2Vob2xkZXIge1xuICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gJyc7XG4gIH1cbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ComboBoxScroller\": () => (/* binding */ ComboBoxScroller)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-element.js */ \"./node_modules/@polymer/polymer/polymer-element.js\");\n/* harmony import */ var _vaadin_component_base_src_unique_id_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/component-base/src/unique-id-utils.js */ \"./node_modules/@vaadin/component-base/src/unique-id-utils.js\");\n/* harmony import */ var _vaadin_component_base_src_virtualizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/component-base/src/virtualizer.js */ \"./node_modules/@vaadin/component-base/src/virtualizer.js\");\n/* harmony import */ var _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./vaadin-combo-box-placeholder.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-placeholder.js\");\n/**\n * @license\n * Copyright (c) 2015 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n/**\n * Element for internal use only.\n *\n * @extends HTMLElement\n * @private\n */\nclass ComboBoxScroller extends _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__.PolymerElement {\n  static get is() {\n    return 'vaadin-combo-box-scroller';\n  }\n  static get template() {\n    return _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__.html`\n      <style>\n        :host {\n          display: block;\n          min-height: 1px;\n          overflow: auto;\n\n          /* Fixes item background from getting on top of scrollbars on Safari */\n          transform: translate3d(0, 0, 0);\n\n          /* Enable momentum scrolling on iOS */\n          -webkit-overflow-scrolling: touch;\n\n          /* Fixes scrollbar disappearing when 'Show scroll bars: Always' enabled in Safari */\n          box-shadow: 0 0 0 white;\n        }\n\n        #selector {\n          border-width: var(--_vaadin-combo-box-items-container-border-width);\n          border-style: var(--_vaadin-combo-box-items-container-border-style);\n          border-color: var(--_vaadin-combo-box-items-container-border-color);\n        }\n      </style>\n      <div id=\"selector\">\n        <slot></slot>\n      </div>\n    `;\n  }\n  static get properties() {\n    return {\n      /**\n       * A full set of items to filter the visible options from.\n       * Set to an empty array when combo-box is not opened.\n       */\n      items: {\n        type: Array,\n        observer: '__itemsChanged'\n      },\n      /**\n       * Index of an item that has focus outline and is scrolled into view.\n       * The actual focus still remains in the input field.\n       */\n      focusedIndex: {\n        type: Number,\n        observer: '__focusedIndexChanged'\n      },\n      /**\n       * Set to true while combo-box fetches new page from the data provider.\n       */\n      loading: {\n        type: Boolean,\n        observer: '__loadingChanged'\n      },\n      /**\n       * Whether the combo-box is currently opened or not. If set to false,\n       * calling `scrollIntoView` does not have any effect.\n       */\n      opened: {\n        type: Boolean,\n        observer: '__openedChanged'\n      },\n      /**\n       * The selected item from the `items` array.\n       */\n      selectedItem: {\n        type: Object,\n        observer: '__selectedItemChanged'\n      },\n      /**\n       * Path for the id of the item, used to detect whether the item is selected.\n       */\n      itemIdPath: {\n        type: String\n      },\n      /**\n       * Reference to the combo-box, used by the item elements.\n       */\n      comboBox: {\n        type: Object\n      },\n      /**\n       * Function used to set a label for every combo-box item.\n       */\n      getItemLabel: {\n        type: Object\n      },\n      /**\n       * Function used to render the content of every combo-box item.\n       */\n      renderer: {\n        type: Object,\n        observer: '__rendererChanged'\n      },\n      /**\n       * Used to propagate the `theme` attribute from the host element.\n       */\n      theme: {\n        type: String\n      }\n    };\n  }\n  constructor() {\n    super();\n    this.__boundOnItemClick = this.__onItemClick.bind(this);\n  }\n  __openedChanged(opened) {\n    if (opened) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n\n    // Ensure every instance has unique ID\n    this.id = `${this.localName}-${(0,_vaadin_component_base_src_unique_id_utils_js__WEBPACK_IMPORTED_MODULE_1__.generateUniqueId)()}`;\n\n    // Allow extensions to customize tag name for the items\n    this.__hostTagName = this.constructor.is.replace('-scroller', '');\n    this.setAttribute('role', 'listbox');\n    this.addEventListener('click', e => e.stopPropagation());\n    this.__patchWheelOverScrolling();\n    this.__virtualizer = new _vaadin_component_base_src_virtualizer_js__WEBPACK_IMPORTED_MODULE_2__.Virtualizer({\n      createElements: this.__createElements.bind(this),\n      updateElement: this.__updateElement.bind(this),\n      elementsContainer: this,\n      scrollTarget: this,\n      scrollContainer: this.$.selector\n    });\n  }\n  requestContentUpdate() {\n    if (this.__virtualizer) {\n      this.__virtualizer.update();\n    }\n  }\n  scrollIntoView(index) {\n    if (!(this.opened && index >= 0)) {\n      return;\n    }\n    const visibleItemsCount = this._visibleItemsCount();\n    let targetIndex = index;\n    if (index > this.__virtualizer.lastVisibleIndex - 1) {\n      // Index is below the bottom, scrolling down. Make the item appear at the bottom.\n      // First scroll to target (will be at the top of the scroller) to make sure it's rendered.\n      this.__virtualizer.scrollToIndex(index);\n      // Then calculate the index for the following scroll (to get the target to bottom of the scroller).\n      targetIndex = index - visibleItemsCount + 1;\n    } else if (index > this.__virtualizer.firstVisibleIndex) {\n      // The item is already visible, scrolling is unnecessary per se. But we need to trigger iron-list to set\n      // the correct scrollTop on the scrollTarget. Scrolling to firstVisibleIndex.\n      targetIndex = this.__virtualizer.firstVisibleIndex;\n    }\n    this.__virtualizer.scrollToIndex(Math.max(0, targetIndex));\n\n    // Sometimes the item is partly below the bottom edge, detect and adjust.\n    const lastPhysicalItem = [...this.children].find(el => !el.hidden && el.index === this.__virtualizer.lastVisibleIndex);\n    if (!lastPhysicalItem || index !== lastPhysicalItem.index) {\n      return;\n    }\n    const lastPhysicalItemRect = lastPhysicalItem.getBoundingClientRect();\n    const scrollerRect = this.getBoundingClientRect();\n    const scrollTopAdjust = lastPhysicalItemRect.bottom - scrollerRect.bottom + this._viewportTotalPaddingBottom;\n    if (scrollTopAdjust > 0) {\n      this.scrollTop += scrollTopAdjust;\n    }\n  }\n\n  /** @private */\n  __getAriaRole(itemIndex) {\n    return itemIndex !== undefined ? 'option' : false;\n  }\n\n  /** @private */\n  __isItemFocused(focusedIndex, itemIndex) {\n    return !this.loading && focusedIndex === itemIndex;\n  }\n\n  /** @protected */\n  _isItemSelected(item, selectedItem, itemIdPath) {\n    if (item instanceof _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_3__.ComboBoxPlaceholder) {\n      return false;\n    } else if (itemIdPath && item !== undefined && selectedItem !== undefined) {\n      return this.get(itemIdPath, item) === this.get(itemIdPath, selectedItem);\n    }\n    return item === selectedItem;\n  }\n\n  /** @private */\n  __itemsChanged(items) {\n    if (this.__virtualizer && items) {\n      this.__virtualizer.size = items.length;\n      this.__virtualizer.flush();\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __loadingChanged() {\n    this.requestContentUpdate();\n  }\n\n  /** @private */\n  __selectedItemChanged() {\n    this.requestContentUpdate();\n  }\n\n  /** @private */\n  __focusedIndexChanged(index, oldIndex) {\n    if (index !== oldIndex) {\n      this.requestContentUpdate();\n    }\n\n    // Do not jump back to the previously focused item while loading\n    // when requesting next page from the data provider on scroll.\n    if (index >= 0 && !this.loading) {\n      this.scrollIntoView(index);\n    }\n  }\n\n  /** @private */\n  __rendererChanged(renderer, oldRenderer) {\n    if (renderer || oldRenderer) {\n      this.requestContentUpdate();\n    }\n  }\n\n  /** @private */\n  __createElements(count) {\n    return [...Array(count)].map(() => {\n      const item = document.createElement(`${this.__hostTagName}-item`);\n      item.addEventListener('click', this.__boundOnItemClick);\n      // Negative tabindex prevents the item content from being focused.\n      item.tabIndex = '-1';\n      item.style.width = '100%';\n      return item;\n    });\n  }\n\n  /** @private */\n  __updateElement(el, index) {\n    const item = this.items[index];\n    const focusedIndex = this.focusedIndex;\n    const selected = this._isItemSelected(item, this.selectedItem, this.itemIdPath);\n    el.setProperties({\n      item,\n      index,\n      label: this.getItemLabel(item),\n      selected,\n      renderer: this.renderer,\n      focused: this.__isItemFocused(focusedIndex, index)\n    });\n    el.id = `${this.__hostTagName}-item-${index}`;\n    el.setAttribute('role', this.__getAriaRole(index));\n    el.setAttribute('aria-selected', selected.toString());\n    el.setAttribute('aria-posinset', index + 1);\n    el.setAttribute('aria-setsize', this.items.length);\n    if (this.theme) {\n      el.setAttribute('theme', this.theme);\n    } else {\n      el.removeAttribute('theme');\n    }\n    if (item instanceof _vaadin_combo_box_placeholder_js__WEBPACK_IMPORTED_MODULE_3__.ComboBoxPlaceholder) {\n      this.__requestItemByIndex(index);\n    }\n  }\n\n  /** @private */\n  __onItemClick(e) {\n    this.dispatchEvent(new CustomEvent('selection-changed', {\n      detail: {\n        item: e.currentTarget.item\n      }\n    }));\n  }\n\n  /**\n   * We want to prevent the kinetic scrolling energy from being transferred from the overlay contents over to the parent.\n   * Further improvement ideas: after the contents have been scrolled to the top or bottom and scrolling has stopped, it could allow\n   * scrolling the parent similarly to touch scrolling.\n   */\n  __patchWheelOverScrolling() {\n    this.$.selector.addEventListener('wheel', e => {\n      const scrolledToTop = this.scrollTop === 0;\n      const scrolledToBottom = this.scrollHeight - this.scrollTop - this.clientHeight <= 1;\n      if (scrolledToTop && e.deltaY < 0) {\n        e.preventDefault();\n      } else if (scrolledToBottom && e.deltaY > 0) {\n        e.preventDefault();\n      }\n    });\n  }\n  get _viewportTotalPaddingBottom() {\n    if (this._cachedViewportTotalPaddingBottom === undefined) {\n      const itemsStyle = window.getComputedStyle(this.$.selector);\n      this._cachedViewportTotalPaddingBottom = [itemsStyle.paddingBottom, itemsStyle.borderBottomWidth].map(v => {\n        return parseInt(v, 10);\n      }).reduce((sum, v) => {\n        return sum + v;\n      });\n    }\n    return this._cachedViewportTotalPaddingBottom;\n  }\n\n  /**\n   * Dispatches an `index-requested` event for the given index to notify\n   * the data provider that it should start loading the page containing the requested index.\n   *\n   * The event is dispatched asynchronously to prevent an immediate page request and therefore\n   * a possible infinite recursion in case the data provider implements page request cancelation logic\n   * by invoking data provider page callbacks with an empty array.\n   * The infinite recursion may occur otherwise since invoking a data provider page callback with an empty array\n   * triggers a synchronous scroller update and, if the callback corresponds to the currently visible page,\n   * the scroller will synchronously request the page again which may lead to looping in the end.\n   * That was the case for the Flow counterpart:\n   * https://github.com/vaadin/flow-components/issues/3553#issuecomment-1239344828\n   */\n  __requestItemByIndex(index) {\n    requestAnimationFrame(() => {\n      this.dispatchEvent(new CustomEvent('index-requested', {\n        detail: {\n          index,\n          currentScrollerPos: this._oldScrollerPosition\n        }\n      }));\n    });\n  }\n\n  /** @private */\n  _visibleItemsCount() {\n    // Ensure items are positioned\n    this.__virtualizer.scrollToIndex(this.__virtualizer.firstVisibleIndex);\n    const hasItems = this.__virtualizer.size > 0;\n    return hasItems ? this.__virtualizer.lastVisibleIndex - this.__virtualizer.firstVisibleIndex + 1 : 0;\n  }\n}\ncustomElements.define(ComboBoxScroller.is, ComboBoxScroller);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/src/vaadin-combo-box-scroller.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-dropdown-styles.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-dropdown-styles.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _vaadin_vaadin_material_styles_color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _vaadin_overlay_theme_material_vaadin_overlay_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/overlay/theme/material/vaadin-overlay.js */ \"./node_modules/@vaadin/overlay/theme/material/vaadin-overlay.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_mixins_loader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/mixins/loader.js */ \"./node_modules/@vaadin/vaadin-material-styles/mixins/loader.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_mixins_menu_overlay_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/mixins/menu-overlay.js */ \"./node_modules/@vaadin/vaadin-material-styles/mixins/menu-overlay.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n\n\n\n\n\nconst comboBoxOverlay = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__.css`\n  :host {\n    --_vaadin-combo-box-items-container-border-width: 8px 0;\n    --_vaadin-combo-box-items-container-border-style: solid;\n    --_vaadin-combo-box-items-container-border-color: transparent;\n  }\n\n  [part='overlay'] {\n    position: relative;\n    overflow: visible;\n    border-top-left-radius: 0;\n    border-top-right-radius: 0;\n  }\n\n  [part='content'] {\n    padding: 0;\n  }\n\n  [part~='loader'] {\n    position: absolute;\n    z-index: 1;\n    top: -2px;\n    left: 0;\n    right: 0;\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__.registerStyles)('vaadin-combo-box-overlay', [_vaadin_vaadin_material_styles_mixins_menu_overlay_js__WEBPACK_IMPORTED_MODULE_3__.menuOverlay, comboBoxOverlay, _vaadin_vaadin_material_styles_mixins_loader_js__WEBPACK_IMPORTED_MODULE_2__.loader], {\n  moduleId: 'material-combo-box-overlay'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvdGhlbWUvbWF0ZXJpYWwvdmFhZGluLWNvbWJvLWJveC1kcm9wZG93bi1zdHlsZXMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnN0ZW9uLXBhbmVsLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tYm8tYm94L3RoZW1lL21hdGVyaWFsL3ZhYWRpbi1jb21iby1ib3gtZHJvcGRvd24tc3R5bGVzLmpzPzNlODUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdAdmFhZGluL3ZhYWRpbi1tYXRlcmlhbC1zdHlsZXMvY29sb3IuanMnO1xuaW1wb3J0ICdAdmFhZGluL292ZXJsYXkvdGhlbWUvbWF0ZXJpYWwvdmFhZGluLW92ZXJsYXkuanMnO1xuaW1wb3J0IHsgbG9hZGVyIH0gZnJvbSAnQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL21peGlucy9sb2FkZXIuanMnO1xuaW1wb3J0IHsgbWVudU92ZXJsYXkgfSBmcm9tICdAdmFhZGluL3ZhYWRpbi1tYXRlcmlhbC1zdHlsZXMvbWl4aW5zL21lbnUtb3ZlcmxheS5qcyc7XG5pbXBvcnQgeyBjc3MsIHJlZ2lzdGVyU3R5bGVzIH0gZnJvbSAnQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vdmFhZGluLXRoZW1hYmxlLW1peGluLmpzJztcblxuY29uc3QgY29tYm9Cb3hPdmVybGF5ID0gY3NzYFxuICA6aG9zdCB7XG4gICAgLS1fdmFhZGluLWNvbWJvLWJveC1pdGVtcy1jb250YWluZXItYm9yZGVyLXdpZHRoOiA4cHggMDtcbiAgICAtLV92YWFkaW4tY29tYm8tYm94LWl0ZW1zLWNvbnRhaW5lci1ib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIC0tX3ZhYWRpbi1jb21iby1ib3gtaXRlbXMtY29udGFpbmVyLWJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIH1cblxuICBbcGFydD0nb3ZlcmxheSddIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDtcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMDtcbiAgfVxuXG4gIFtwYXJ0PSdjb250ZW50J10ge1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cblxuICBbcGFydH49J2xvYWRlciddIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgei1pbmRleDogMTtcbiAgICB0b3A6IC0ycHg7XG4gICAgbGVmdDogMDtcbiAgICByaWdodDogMDtcbiAgfVxuYDtcblxucmVnaXN0ZXJTdHlsZXMoJ3ZhYWRpbi1jb21iby1ib3gtb3ZlcmxheScsIFttZW51T3ZlcmxheSwgY29tYm9Cb3hPdmVybGF5LCBsb2FkZXJdLCB7XG4gIG1vZHVsZUlkOiAnbWF0ZXJpYWwtY29tYm8tYm94LW92ZXJsYXknLFxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-dropdown-styles.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-item-styles.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-item-styles.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _vaadin_vaadin_material_styles_color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_font_icons_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/font-icons.js */ \"./node_modules/@vaadin/vaadin-material-styles/font-icons.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_typography_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/typography.js */ \"./node_modules/@vaadin/vaadin-material-styles/typography.js\");\n/* harmony import */ var _vaadin_item_theme_material_vaadin_item_styles_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/item/theme/material/vaadin-item-styles.js */ \"./node_modules/@vaadin/item/theme/material/vaadin-item-styles.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n\n\n\n\n\nconst comboBoxItem = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__.css`\n  :host {\n    cursor: pointer;\n    -webkit-tap-highlight-color: transparent;\n    padding: 4px 10px;\n    --_material-item-selected-icon-display: block;\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_4__.registerStyles)('vaadin-combo-box-item', [_vaadin_item_theme_material_vaadin_item_styles_js__WEBPACK_IMPORTED_MODULE_3__.item, comboBoxItem], {\n  moduleId: 'material-combo-box-item'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvdGhlbWUvbWF0ZXJpYWwvdmFhZGluLWNvbWJvLWJveC1pdGVtLXN0eWxlcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvdGhlbWUvbWF0ZXJpYWwvdmFhZGluLWNvbWJvLWJveC1pdGVtLXN0eWxlcy5qcz9kNTA1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL2NvbG9yLmpzJztcbmltcG9ydCAnQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL2ZvbnQtaWNvbnMuanMnO1xuaW1wb3J0ICdAdmFhZGluL3ZhYWRpbi1tYXRlcmlhbC1zdHlsZXMvdHlwb2dyYXBoeS5qcyc7XG5pbXBvcnQgeyBpdGVtIH0gZnJvbSAnQHZhYWRpbi9pdGVtL3RoZW1lL21hdGVyaWFsL3ZhYWRpbi1pdGVtLXN0eWxlcy5qcyc7XG5pbXBvcnQgeyBjc3MsIHJlZ2lzdGVyU3R5bGVzIH0gZnJvbSAnQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vdmFhZGluLXRoZW1hYmxlLW1peGluLmpzJztcblxuY29uc3QgY29tYm9Cb3hJdGVtID0gY3NzYFxuICA6aG9zdCB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgcGFkZGluZzogNHB4IDEwcHg7XG4gICAgLS1fbWF0ZXJpYWwtaXRlbS1zZWxlY3RlZC1pY29uLWRpc3BsYXk6IGJsb2NrO1xuICB9XG5gO1xuXG5yZWdpc3RlclN0eWxlcygndmFhZGluLWNvbWJvLWJveC1pdGVtJywgW2l0ZW0sIGNvbWJvQm94SXRlbV0sIHtcbiAgbW9kdWxlSWQ6ICdtYXRlcmlhbC1jb21iby1ib3gtaXRlbScsXG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-item-styles.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-light.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-light.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _vaadin_combo_box_dropdown_styles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vaadin-combo-box-dropdown-styles.js */ \"./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-dropdown-styles.js\");\n/* harmony import */ var _vaadin_combo_box_item_styles_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vaadin-combo-box-item-styles.js */ \"./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-item-styles.js\");\n/* harmony import */ var _src_vaadin_combo_box_light_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../src/vaadin-combo-box-light.js */ \"./node_modules/@vaadin/combo-box/src/vaadin-combo-box-light.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvdGhlbWUvbWF0ZXJpYWwvdmFhZGluLWNvbWJvLWJveC1saWdodC5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21iby1ib3gvdGhlbWUvbWF0ZXJpYWwvdmFhZGluLWNvbWJvLWJveC1saWdodC5qcz81MTRhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi92YWFkaW4tY29tYm8tYm94LWRyb3Bkb3duLXN0eWxlcy5qcyc7XG5pbXBvcnQgJy4vdmFhZGluLWNvbWJvLWJveC1pdGVtLXN0eWxlcy5qcyc7XG5pbXBvcnQgJy4uLy4uL3NyYy92YWFkaW4tY29tYm8tYm94LWxpZ2h0LmpzJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/combo-box/theme/material/vaadin-combo-box-light.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/async.js":
/*!**********************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/async.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"animationFrame\": () => (/* binding */ animationFrame),\n/* harmony export */   \"idlePeriod\": () => (/* binding */ idlePeriod),\n/* harmony export */   \"microTask\": () => (/* binding */ microTask),\n/* harmony export */   \"timeOut\": () => (/* binding */ timeOut)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * @fileoverview\n *\n * This module provides a number of strategies for enqueuing asynchronous\n * tasks. Each sub-module provides a standard `run(fn)` interface that returns a\n * handle, and a `cancel(handle)` interface for canceling async tasks before\n * they run.\n *\n * @summary Module that provides a number of strategies for enqueuing\n * asynchronous tasks.\n */\n\n// Microtask implemented using Mutation Observer\nlet microtaskCurrHandle = 0;\nlet microtaskLastHandle = 0;\nconst microtaskCallbacks = [];\nlet microtaskNodeContent = 0;\nlet microtaskScheduled = false;\nconst microtaskNode = document.createTextNode('');\nnew window.MutationObserver(microtaskFlush).observe(microtaskNode, {\n  characterData: true\n});\nfunction microtaskFlush() {\n  microtaskScheduled = false;\n  const len = microtaskCallbacks.length;\n  for (let i = 0; i < len; i++) {\n    const cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(() => {\n          throw e;\n        });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\n\n/**\n * Async interface wrapper around `setTimeout`.\n *\n * @namespace\n * @summary Async interface wrapper around `setTimeout`.\n */\nconst timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof timeOut\n   * @param {number=} delay Time to wait before calling callbacks in ms\n   * @return {!AsyncInterface} An async timeout interface\n   */\n  after(delay) {\n    return {\n      run(fn) {\n        return window.setTimeout(fn, delay);\n      },\n      cancel(handle) {\n        window.clearTimeout(handle);\n      }\n    };\n  },\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof timeOut\n   * @param {!Function} fn Callback to run\n   * @param {number=} delay Delay in milliseconds\n   * @return {number} Handle used for canceling task\n   */\n  run(fn, delay) {\n    return window.setTimeout(fn, delay);\n  },\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.clearTimeout(handle);\n  }\n};\n\n\n/**\n * Async interface wrapper around `requestAnimationFrame`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestAnimationFrame`.\n */\nconst animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof animationFrame\n   * @param {function(number):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestAnimationFrame(fn);\n  },\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof animationFrame\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    window.cancelAnimationFrame(handle);\n  }\n};\n\n\n/**\n * Async interface wrapper around `requestIdleCallback`.  Falls back to\n * `setTimeout` on browsers that do not support `requestIdleCallback`.\n *\n * @namespace\n * @summary Async interface wrapper around `requestIdleCallback`.\n */\nconst idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof idlePeriod\n   * @param {function(!IdleDeadline):void} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestIdleCallback ? window.requestIdleCallback(fn) : window.setTimeout(fn, 16);\n  },\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    if (window.cancelIdleCallback) {\n      window.cancelIdleCallback(handle);\n    } else {\n      window.clearTimeout(handle);\n    }\n  }\n};\n\n\n/**\n * Async interface for enqueuing callbacks that run at microtask timing.\n *\n * Note that microtask timing is achieved via a single `MutationObserver`,\n * and thus callbacks enqueued with this API will all run in a single\n * batch, and not interleaved with other microtasks such as promises.\n * Promises are avoided as an implementation choice for the time being\n * due to Safari bugs that cause Promises to lack microtask guarantees.\n *\n * @namespace\n * @summary Async interface for enqueuing callbacks that run at microtask\n *   timing.\n */\nconst microTask = {\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof microTask\n   * @param {!Function=} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(callback) {\n    if (!microtaskScheduled) {\n      microtaskScheduled = true;\n      microtaskNode.textContent = microtaskNodeContent;\n      microtaskNodeContent += 1;\n    }\n    microtaskCallbacks.push(callback);\n    const result = microtaskCurrHandle;\n    microtaskCurrHandle += 1;\n    return result;\n  },\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   * @return {void}\n   */\n  cancel(handle) {\n    const idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error(`invalid async handle: ${handle}`);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/async.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/browser-utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/browser-utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"isAndroid\": () => (/* binding */ isAndroid),\n/* harmony export */   \"isChrome\": () => (/* binding */ isChrome),\n/* harmony export */   \"isFirefox\": () => (/* binding */ isFirefox),\n/* harmony export */   \"isIOS\": () => (/* binding */ isIOS),\n/* harmony export */   \"isIPad\": () => (/* binding */ isIPad),\n/* harmony export */   \"isIPhone\": () => (/* binding */ isIPhone),\n/* harmony export */   \"isSafari\": () => (/* binding */ isSafari),\n/* harmony export */   \"isTouch\": () => (/* binding */ isTouch)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst testUserAgent = regexp => regexp.test(navigator.userAgent);\nconst testPlatform = regexp => regexp.test(navigator.platform);\nconst testVendor = regexp => regexp.test(navigator.vendor);\nconst isAndroid = testUserAgent(/Android/);\nconst isChrome = testUserAgent(/Chrome/) && testVendor(/Google Inc/);\nconst isFirefox = testUserAgent(/Firefox/);\n\n// IPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\nconst isIPad = testPlatform(/^iPad/) || testPlatform(/^Mac/) && navigator.maxTouchPoints > 1;\nconst isIPhone = testPlatform(/^iPhone/);\nconst isIOS = isIPhone || isIPad;\nconst isSafari = testUserAgent(/^((?!chrome|android).)*safari/i);\nconst isTouch = (() => {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvYnJvd3Nlci11dGlscy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUVBOztBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbXBvbmVudC1iYXNlL3NyYy9icm93c2VyLXV0aWxzLmpzP2Q3NDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gMjAyMiBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5cbmNvbnN0IHRlc3RVc2VyQWdlbnQgPSAocmVnZXhwKSA9PiByZWdleHAudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcblxuY29uc3QgdGVzdFBsYXRmb3JtID0gKHJlZ2V4cCkgPT4gcmVnZXhwLnRlc3QobmF2aWdhdG9yLnBsYXRmb3JtKTtcblxuY29uc3QgdGVzdFZlbmRvciA9IChyZWdleHApID0+IHJlZ2V4cC50ZXN0KG5hdmlnYXRvci52ZW5kb3IpO1xuXG5leHBvcnQgY29uc3QgaXNBbmRyb2lkID0gdGVzdFVzZXJBZ2VudCgvQW5kcm9pZC8pO1xuXG5leHBvcnQgY29uc3QgaXNDaHJvbWUgPSB0ZXN0VXNlckFnZW50KC9DaHJvbWUvKSAmJiB0ZXN0VmVuZG9yKC9Hb29nbGUgSW5jLyk7XG5cbmV4cG9ydCBjb25zdCBpc0ZpcmVmb3ggPSB0ZXN0VXNlckFnZW50KC9GaXJlZm94Lyk7XG5cbi8vIElQYWRPUyAxMyBsaWVzIGFuZCBzYXlzIGl0J3MgYSBNYWMsIGJ1dCB3ZSBjYW4gZGlzdGluZ3Vpc2ggYnkgZGV0ZWN0aW5nIHRvdWNoIHN1cHBvcnQuXG5leHBvcnQgY29uc3QgaXNJUGFkID0gdGVzdFBsYXRmb3JtKC9eaVBhZC8pIHx8ICh0ZXN0UGxhdGZvcm0oL15NYWMvKSAmJiBuYXZpZ2F0b3IubWF4VG91Y2hQb2ludHMgPiAxKTtcblxuZXhwb3J0IGNvbnN0IGlzSVBob25lID0gdGVzdFBsYXRmb3JtKC9eaVBob25lLyk7XG5cbmV4cG9ydCBjb25zdCBpc0lPUyA9IGlzSVBob25lIHx8IGlzSVBhZDtcblxuZXhwb3J0IGNvbnN0IGlzU2FmYXJpID0gdGVzdFVzZXJBZ2VudCgvXigoPyFjaHJvbWV8YW5kcm9pZCkuKSpzYWZhcmkvaSk7XG5cbmV4cG9ydCBjb25zdCBpc1RvdWNoID0gKCgpID0+IHtcbiAgdHJ5IHtcbiAgICBkb2N1bWVudC5jcmVhdGVFdmVudCgnVG91Y2hFdmVudCcpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59KSgpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/browser-utils.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/controller-mixin.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/controller-mixin.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ControllerMixin\": () => (/* binding */ ControllerMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * @typedef ReactiveController\n * @type {import('lit').ReactiveController}\n */\n\n/**\n * A mixin for connecting controllers to the element.\n *\n * @polymerMixin\n */\nconst ControllerMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superClass => class ControllerMixinClass extends superClass {\n  constructor() {\n    super();\n\n    /**\n     * @type {Set<ReactiveController>}\n     */\n    this.__controllers = new Set();\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    this.__controllers.forEach(c => {\n      if (c.hostConnected) {\n        c.hostConnected();\n      }\n    });\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__controllers.forEach(c => {\n      if (c.hostDisconnected) {\n        c.hostDisconnected();\n      }\n    });\n  }\n\n  /**\n   * Registers a controller to participate in the element update cycle.\n   *\n   * @param {ReactiveController} controller\n   * @protected\n   */\n  addController(controller) {\n    this.__controllers.add(controller);\n    // Call hostConnected if a controller is added after the element is attached.\n    if (this.$ !== undefined && this.isConnected && controller.hostConnected) {\n      controller.hostConnected();\n    }\n  }\n\n  /**\n   * Removes a controller from the element.\n   *\n   * @param {ReactiveController} controller\n   * @protected\n   */\n  removeController(controller) {\n    this.__controllers.delete(controller);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvY29udHJvbGxlci1taXhpbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvY29udHJvbGxlci1taXhpbi5qcz84NzliIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjIgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0IHsgZGVkdXBpbmdNaXhpbiB9IGZyb20gJ0Bwb2x5bWVyL3BvbHltZXIvbGliL3V0aWxzL21peGluLmpzJztcblxuLyoqXG4gKiBAdHlwZWRlZiBSZWFjdGl2ZUNvbnRyb2xsZXJcbiAqIEB0eXBlIHtpbXBvcnQoJ2xpdCcpLlJlYWN0aXZlQ29udHJvbGxlcn1cbiAqL1xuXG4vKipcbiAqIEEgbWl4aW4gZm9yIGNvbm5lY3RpbmcgY29udHJvbGxlcnMgdG8gdGhlIGVsZW1lbnQuXG4gKlxuICogQHBvbHltZXJNaXhpblxuICovXG5leHBvcnQgY29uc3QgQ29udHJvbGxlck1peGluID0gZGVkdXBpbmdNaXhpbihcbiAgKHN1cGVyQ2xhc3MpID0+XG4gICAgY2xhc3MgQ29udHJvbGxlck1peGluQ2xhc3MgZXh0ZW5kcyBzdXBlckNsYXNzIHtcbiAgICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAdHlwZSB7U2V0PFJlYWN0aXZlQ29udHJvbGxlcj59XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLl9fY29udHJvbGxlcnMgPSBuZXcgU2V0KCk7XG4gICAgICB9XG5cbiAgICAgIC8qKiBAcHJvdGVjdGVkICovXG4gICAgICBjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICAgICAgc3VwZXIuY29ubmVjdGVkQ2FsbGJhY2soKTtcblxuICAgICAgICB0aGlzLl9fY29udHJvbGxlcnMuZm9yRWFjaCgoYykgPT4ge1xuICAgICAgICAgIGlmIChjLmhvc3RDb25uZWN0ZWQpIHtcbiAgICAgICAgICAgIGMuaG9zdENvbm5lY3RlZCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIC8qKiBAcHJvdGVjdGVkICovXG4gICAgICBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICAgICAgc3VwZXIuZGlzY29ubmVjdGVkQ2FsbGJhY2soKTtcblxuICAgICAgICB0aGlzLl9fY29udHJvbGxlcnMuZm9yRWFjaCgoYykgPT4ge1xuICAgICAgICAgIGlmIChjLmhvc3REaXNjb25uZWN0ZWQpIHtcbiAgICAgICAgICAgIGMuaG9zdERpc2Nvbm5lY3RlZCgpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogUmVnaXN0ZXJzIGEgY29udHJvbGxlciB0byBwYXJ0aWNpcGF0ZSBpbiB0aGUgZWxlbWVudCB1cGRhdGUgY3ljbGUuXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtSZWFjdGl2ZUNvbnRyb2xsZXJ9IGNvbnRyb2xsZXJcbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgYWRkQ29udHJvbGxlcihjb250cm9sbGVyKSB7XG4gICAgICAgIHRoaXMuX19jb250cm9sbGVycy5hZGQoY29udHJvbGxlcik7XG4gICAgICAgIC8vIENhbGwgaG9zdENvbm5lY3RlZCBpZiBhIGNvbnRyb2xsZXIgaXMgYWRkZWQgYWZ0ZXIgdGhlIGVsZW1lbnQgaXMgYXR0YWNoZWQuXG4gICAgICAgIGlmICh0aGlzLiQgIT09IHVuZGVmaW5lZCAmJiB0aGlzLmlzQ29ubmVjdGVkICYmIGNvbnRyb2xsZXIuaG9zdENvbm5lY3RlZCkge1xuICAgICAgICAgIGNvbnRyb2xsZXIuaG9zdENvbm5lY3RlZCgpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogUmVtb3ZlcyBhIGNvbnRyb2xsZXIgZnJvbSB0aGUgZWxlbWVudC5cbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0ge1JlYWN0aXZlQ29udHJvbGxlcn0gY29udHJvbGxlclxuICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICovXG4gICAgICByZW1vdmVDb250cm9sbGVyKGNvbnRyb2xsZXIpIHtcbiAgICAgICAgdGhpcy5fX2NvbnRyb2xsZXJzLmRlbGV0ZShjb250cm9sbGVyKTtcbiAgICAgIH1cbiAgICB9LFxuKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/controller-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/debounce.js":
/*!*************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/debounce.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Debouncer\": () => (/* binding */ Debouncer),\n/* harmony export */   \"enqueueDebouncer\": () => (/* binding */ enqueueDebouncer),\n/* harmony export */   \"flush\": () => (/* binding */ flush),\n/* harmony export */   \"flushDebouncers\": () => (/* binding */ flushDebouncers)\n/* harmony export */ });\n/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * @summary Collapse multiple callbacks into one invocation after a timer.\n */\nclass Debouncer {\n  /**\n   * Creates a debouncer if no debouncer is passed as a parameter\n   * or it cancels an active debouncer otherwise. The following\n   * example shows how a debouncer can be called multiple times within a\n   * microtask and \"debounced\" such that the provided callback function is\n   * called once. Add this method to a custom element:\n   *\n   * ```js\n   * import {microTask} from '@vaadin/component-base/src/async.js';\n   * import {Debouncer} from '@vaadin/component-base/src/debounce.js';\n   * // ...\n   *\n   * _debounceWork() {\n   *   this._debounceJob = Debouncer.debounce(this._debounceJob,\n   *       microTask, () => this._doWork());\n   * }\n   * ```\n   *\n   * If the `_debounceWork` method is called multiple times within the same\n   * microtask, the `_doWork` function will be called only once at the next\n   * microtask checkpoint.\n   *\n   * Note: In testing it is often convenient to avoid asynchrony. To accomplish\n   * this with a debouncer, you can use `enqueueDebouncer` and\n   * `flush`. For example, extend the above example by adding\n   * `enqueueDebouncer(this._debounceJob)` at the end of the\n   * `_debounceWork` method. Then in a test, call `flush` to ensure\n   * the debouncer has completed.\n   *\n   * @param {Debouncer?} debouncer Debouncer object.\n   * @param {!AsyncInterface} asyncModule Object with Async interface\n   * @param {function()} callback Callback to run.\n   * @return {!Debouncer} Returns a debouncer object.\n   */\n  static debounce(debouncer, asyncModule, callback) {\n    if (debouncer instanceof Debouncer) {\n      // Cancel the async callback, but leave in debouncerQueue if it was\n      // enqueued, to maintain 1.x flush order\n      debouncer._cancelAsync();\n    } else {\n      debouncer = new Debouncer();\n    }\n    debouncer.setConfig(asyncModule, callback);\n    return debouncer;\n  }\n  constructor() {\n    this._asyncModule = null;\n    this._callback = null;\n    this._timer = null;\n  }\n\n  /**\n   * Sets the scheduler; that is, a module with the Async interface,\n   * a callback and optional arguments to be passed to the run function\n   * from the async module.\n   *\n   * @param {!AsyncInterface} asyncModule Object with Async interface.\n   * @param {function()} callback Callback to run.\n   * @return {void}\n   */\n  setConfig(asyncModule, callback) {\n    this._asyncModule = asyncModule;\n    this._callback = callback;\n    this._timer = this._asyncModule.run(() => {\n      this._timer = null;\n      debouncerQueue.delete(this);\n      this._callback();\n    });\n  }\n\n  /**\n   * Cancels an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  cancel() {\n    if (this.isActive()) {\n      this._cancelAsync();\n      // Canceling a debouncer removes its spot from the flush queue,\n      // so if a debouncer is manually canceled and re-debounced, it\n      // will reset its flush order (this is a very minor difference from 1.x)\n      // Re-debouncing via the `debounce` API retains the 1.x FIFO flush order\n      debouncerQueue.delete(this);\n    }\n  }\n\n  /**\n   * Cancels a debouncer's async callback.\n   *\n   * @return {void}\n   */\n  _cancelAsync() {\n    if (this.isActive()) {\n      this._asyncModule.cancel( /** @type {number} */this._timer);\n      this._timer = null;\n    }\n  }\n\n  /**\n   * Flushes an active debouncer and returns a reference to itself.\n   *\n   * @return {void}\n   */\n  flush() {\n    if (this.isActive()) {\n      this.cancel();\n      this._callback();\n    }\n  }\n\n  /**\n   * Returns true if the debouncer is active.\n   *\n   * @return {boolean} True if active.\n   */\n  isActive() {\n    return this._timer != null;\n  }\n}\nlet debouncerQueue = new Set();\n\n/**\n * Adds a `Debouncer` to a list of globally flushable tasks.\n *\n * @param {!Debouncer} debouncer Debouncer to enqueue\n * @return {void}\n */\nfunction enqueueDebouncer(debouncer) {\n  debouncerQueue.add(debouncer);\n}\n\n/**\n * Flushes any enqueued debouncers\n *\n * @return {boolean} Returns whether any debouncers were flushed\n */\nfunction flushDebouncers() {\n  const didFlush = Boolean(debouncerQueue.size);\n  // If new debouncers are added while flushing, Set.forEach will ensure\n  // newly added ones are also flushed\n  debouncerQueue.forEach(debouncer => {\n    try {\n      debouncer.flush();\n    } catch (e) {\n      setTimeout(() => {\n        throw e;\n      });\n    }\n  });\n  return didFlush;\n}\nconst flush = () => {\n  let debouncers;\n  do {\n    debouncers = flushDebouncers();\n  } while (debouncers);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/debounce.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/dir-helper.js":
/*!***************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/dir-helper.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DirHelper\": () => (/* binding */ DirHelper)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Helper that provides a set of functions for RTL.\n */\nclass DirHelper {\n  /**\n   * Get the scroll type in the current browser view.\n   *\n   * @return {string} the scroll type. Possible values are `default|reverse|negative`\n   */\n  static detectScrollType() {\n    const dummy = document.createElement('div');\n    dummy.textContent = 'ABCD';\n    dummy.dir = 'rtl';\n    dummy.style.fontSize = '14px';\n    dummy.style.width = '4px';\n    dummy.style.height = '1px';\n    dummy.style.position = 'absolute';\n    dummy.style.top = '-1000px';\n    dummy.style.overflow = 'scroll';\n    document.body.appendChild(dummy);\n    let cachedType = 'reverse';\n    if (dummy.scrollLeft > 0) {\n      cachedType = 'default';\n    } else {\n      dummy.scrollLeft = 2;\n      if (dummy.scrollLeft < 2) {\n        cachedType = 'negative';\n      }\n    }\n    document.body.removeChild(dummy);\n    return cachedType;\n  }\n\n  /**\n   * Get the scrollLeft value of the element relative to the direction\n   *\n   * @param {string} scrollType type of the scroll detected with `detectScrollType`\n   * @param {string} direction current direction of the element\n   * @param {Element} element\n   * @return {number} the scrollLeft value.\n   */\n  static getNormalizedScrollLeft(scrollType, direction, element) {\n    const {\n      scrollLeft\n    } = element;\n    if (direction !== 'rtl' || !scrollType) {\n      return scrollLeft;\n    }\n    switch (scrollType) {\n      case 'negative':\n        return element.scrollWidth - element.clientWidth + scrollLeft;\n      case 'reverse':\n        return element.scrollWidth - element.clientWidth - scrollLeft;\n      default:\n        return scrollLeft;\n    }\n  }\n\n  /**\n   * Set the scrollLeft value of the element relative to the direction\n   *\n   * @param {string} scrollType type of the scroll detected with `detectScrollType`\n   * @param {string} direction current direction of the element\n   * @param {Element} element\n   * @param {number} scrollLeft the scrollLeft value to be set\n   */\n  static setNormalizedScrollLeft(scrollType, direction, element, scrollLeft) {\n    if (direction !== 'rtl' || !scrollType) {\n      element.scrollLeft = scrollLeft;\n      return;\n    }\n    switch (scrollType) {\n      case 'negative':\n        element.scrollLeft = element.clientWidth - element.scrollWidth + scrollLeft;\n        break;\n      case 'reverse':\n        element.scrollLeft = element.scrollWidth - element.clientWidth - scrollLeft;\n        break;\n      default:\n        element.scrollLeft = scrollLeft;\n        break;\n    }\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvZGlyLWhlbHBlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbXBvbmVudC1iYXNlL3NyYy9kaXItaGVscGVyLmpzP2ExOTciXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gMjAyMiBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5cbi8qKlxuICogSGVscGVyIHRoYXQgcHJvdmlkZXMgYSBzZXQgb2YgZnVuY3Rpb25zIGZvciBSVEwuXG4gKi9cbmNsYXNzIERpckhlbHBlciB7XG4gIC8qKlxuICAgKiBHZXQgdGhlIHNjcm9sbCB0eXBlIGluIHRoZSBjdXJyZW50IGJyb3dzZXIgdmlldy5cbiAgICpcbiAgICogQHJldHVybiB7c3RyaW5nfSB0aGUgc2Nyb2xsIHR5cGUuIFBvc3NpYmxlIHZhbHVlcyBhcmUgYGRlZmF1bHR8cmV2ZXJzZXxuZWdhdGl2ZWBcbiAgICovXG4gIHN0YXRpYyBkZXRlY3RTY3JvbGxUeXBlKCkge1xuICAgIGNvbnN0IGR1bW15ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgZHVtbXkudGV4dENvbnRlbnQgPSAnQUJDRCc7XG4gICAgZHVtbXkuZGlyID0gJ3J0bCc7XG4gICAgZHVtbXkuc3R5bGUuZm9udFNpemUgPSAnMTRweCc7XG4gICAgZHVtbXkuc3R5bGUud2lkdGggPSAnNHB4JztcbiAgICBkdW1teS5zdHlsZS5oZWlnaHQgPSAnMXB4JztcbiAgICBkdW1teS5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG4gICAgZHVtbXkuc3R5bGUudG9wID0gJy0xMDAwcHgnO1xuICAgIGR1bW15LnN0eWxlLm92ZXJmbG93ID0gJ3Njcm9sbCc7XG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkdW1teSk7XG5cbiAgICBsZXQgY2FjaGVkVHlwZSA9ICdyZXZlcnNlJztcbiAgICBpZiAoZHVtbXkuc2Nyb2xsTGVmdCA+IDApIHtcbiAgICAgIGNhY2hlZFR5cGUgPSAnZGVmYXVsdCc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGR1bW15LnNjcm9sbExlZnQgPSAyO1xuICAgICAgaWYgKGR1bW15LnNjcm9sbExlZnQgPCAyKSB7XG4gICAgICAgIGNhY2hlZFR5cGUgPSAnbmVnYXRpdmUnO1xuICAgICAgfVxuICAgIH1cbiAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGR1bW15KTtcbiAgICByZXR1cm4gY2FjaGVkVHlwZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIHNjcm9sbExlZnQgdmFsdWUgb2YgdGhlIGVsZW1lbnQgcmVsYXRpdmUgdG8gdGhlIGRpcmVjdGlvblxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gc2Nyb2xsVHlwZSB0eXBlIG9mIHRoZSBzY3JvbGwgZGV0ZWN0ZWQgd2l0aCBgZGV0ZWN0U2Nyb2xsVHlwZWBcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRpcmVjdGlvbiBjdXJyZW50IGRpcmVjdGlvbiBvZiB0aGUgZWxlbWVudFxuICAgKiBAcGFyYW0ge0VsZW1lbnR9IGVsZW1lbnRcbiAgICogQHJldHVybiB7bnVtYmVyfSB0aGUgc2Nyb2xsTGVmdCB2YWx1ZS5cbiAgICovXG4gIHN0YXRpYyBnZXROb3JtYWxpemVkU2Nyb2xsTGVmdChzY3JvbGxUeXBlLCBkaXJlY3Rpb24sIGVsZW1lbnQpIHtcbiAgICBjb25zdCB7IHNjcm9sbExlZnQgfSA9IGVsZW1lbnQ7XG4gICAgaWYgKGRpcmVjdGlvbiAhPT0gJ3J0bCcgfHwgIXNjcm9sbFR5cGUpIHtcbiAgICAgIHJldHVybiBzY3JvbGxMZWZ0O1xuICAgIH1cblxuICAgIHN3aXRjaCAoc2Nyb2xsVHlwZSkge1xuICAgICAgY2FzZSAnbmVnYXRpdmUnOlxuICAgICAgICByZXR1cm4gZWxlbWVudC5zY3JvbGxXaWR0aCAtIGVsZW1lbnQuY2xpZW50V2lkdGggKyBzY3JvbGxMZWZ0O1xuICAgICAgY2FzZSAncmV2ZXJzZSc6XG4gICAgICAgIHJldHVybiBlbGVtZW50LnNjcm9sbFdpZHRoIC0gZWxlbWVudC5jbGllbnRXaWR0aCAtIHNjcm9sbExlZnQ7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICByZXR1cm4gc2Nyb2xsTGVmdDtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogU2V0IHRoZSBzY3JvbGxMZWZ0IHZhbHVlIG9mIHRoZSBlbGVtZW50IHJlbGF0aXZlIHRvIHRoZSBkaXJlY3Rpb25cbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IHNjcm9sbFR5cGUgdHlwZSBvZiB0aGUgc2Nyb2xsIGRldGVjdGVkIHdpdGggYGRldGVjdFNjcm9sbFR5cGVgXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkaXJlY3Rpb24gY3VycmVudCBkaXJlY3Rpb24gb2YgdGhlIGVsZW1lbnRcbiAgICogQHBhcmFtIHtFbGVtZW50fSBlbGVtZW50XG4gICAqIEBwYXJhbSB7bnVtYmVyfSBzY3JvbGxMZWZ0IHRoZSBzY3JvbGxMZWZ0IHZhbHVlIHRvIGJlIHNldFxuICAgKi9cbiAgc3RhdGljIHNldE5vcm1hbGl6ZWRTY3JvbGxMZWZ0KHNjcm9sbFR5cGUsIGRpcmVjdGlvbiwgZWxlbWVudCwgc2Nyb2xsTGVmdCkge1xuICAgIGlmIChkaXJlY3Rpb24gIT09ICdydGwnIHx8ICFzY3JvbGxUeXBlKSB7XG4gICAgICBlbGVtZW50LnNjcm9sbExlZnQgPSBzY3JvbGxMZWZ0O1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHN3aXRjaCAoc2Nyb2xsVHlwZSkge1xuICAgICAgY2FzZSAnbmVnYXRpdmUnOlxuICAgICAgICBlbGVtZW50LnNjcm9sbExlZnQgPSBlbGVtZW50LmNsaWVudFdpZHRoIC0gZWxlbWVudC5zY3JvbGxXaWR0aCArIHNjcm9sbExlZnQ7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAncmV2ZXJzZSc6XG4gICAgICAgIGVsZW1lbnQuc2Nyb2xsTGVmdCA9IGVsZW1lbnQuc2Nyb2xsV2lkdGggLSBlbGVtZW50LmNsaWVudFdpZHRoIC0gc2Nyb2xsTGVmdDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBlbGVtZW50LnNjcm9sbExlZnQgPSBzY3JvbGxMZWZ0O1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IHsgRGlySGVscGVyIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/dir-helper.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/dir-mixin.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/dir-mixin.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DirMixin\": () => (/* binding */ DirMixin)\n/* harmony export */ });\n/* harmony import */ var _dir_helper_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dir-helper.js */ \"./node_modules/@vaadin/component-base/src/dir-helper.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * Array of Vaadin custom element classes that have been subscribed to the dir changes.\n */\nconst directionSubscribers = [];\nfunction directionUpdater() {\n  const documentDir = getDocumentDir();\n  directionSubscribers.forEach(element => {\n    alignDirs(element, documentDir);\n  });\n}\nlet scrollType;\nconst directionObserver = new MutationObserver(directionUpdater);\ndirectionObserver.observe(document.documentElement, {\n  attributes: true,\n  attributeFilter: ['dir']\n});\nfunction alignDirs(element, documentDir, elementDir = element.getAttribute('dir')) {\n  if (documentDir) {\n    element.setAttribute('dir', documentDir);\n  } else if (elementDir != null) {\n    element.removeAttribute('dir');\n  }\n}\nfunction getDocumentDir() {\n  return document.documentElement.getAttribute('dir');\n}\n\n/**\n * A mixin to handle `dir` attribute based on the one set on the `<html>` element.\n *\n * @polymerMixin\n */\nconst DirMixin = superClass => class VaadinDirMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * @protected\n       */\n      dir: {\n        type: String,\n        value: '',\n        reflectToAttribute: true,\n        converter: {\n          fromAttribute: attr => {\n            return !attr ? '' : attr;\n          },\n          toAttribute: prop => {\n            return prop === '' ? null : prop;\n          }\n        }\n      }\n    };\n  }\n\n  /** @protected */\n  static finalize() {\n    super.finalize();\n    if (!scrollType) {\n      scrollType = _dir_helper_js__WEBPACK_IMPORTED_MODULE_0__.DirHelper.detectScrollType();\n    }\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    if (!this.hasAttribute('dir') || this.__restoreSubscription) {\n      this.__subscribe();\n      alignDirs(this, getDocumentDir(), null);\n    }\n  }\n\n  /** @protected */\n  attributeChangedCallback(name, oldValue, newValue) {\n    super.attributeChangedCallback(name, oldValue, newValue);\n    if (name !== 'dir') {\n      return;\n    }\n    const documentDir = getDocumentDir();\n\n    // New value equals to the document direction and the element is not subscribed to the changes\n    const newValueEqlDocDir = newValue === documentDir && directionSubscribers.indexOf(this) === -1;\n    // Value was emptied and the element is not subscribed to the changes\n    const newValueEmptied = !newValue && oldValue && directionSubscribers.indexOf(this) === -1;\n    // New value is different and the old equals to document direction and the element is not subscribed to the changes\n    const newDiffValue = newValue !== documentDir && oldValue === documentDir;\n    if (newValueEqlDocDir || newValueEmptied) {\n      this.__subscribe();\n      alignDirs(this, documentDir, newValue);\n    } else if (newDiffValue) {\n      this.__unsubscribe();\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__restoreSubscription = directionSubscribers.includes(this);\n    this.__unsubscribe();\n  }\n\n  /** @protected */\n  _valueToNodeAttribute(node, value, attribute) {\n    // Override default Polymer attribute reflection to match native behavior of HTMLElement.dir property\n    // If the property contains an empty string then it should not create an empty attribute\n    if (attribute === 'dir' && value === '' && !node.hasAttribute('dir')) {\n      return;\n    }\n    super._valueToNodeAttribute(node, value, attribute);\n  }\n\n  /** @protected */\n  _attributeToProperty(attribute, value, type) {\n    // Override default Polymer attribute reflection to match native behavior of HTMLElement.dir property\n    // If the attribute is removed, then the dir property should contain an empty string instead of null\n    if (attribute === 'dir' && !value) {\n      this.dir = '';\n    } else {\n      super._attributeToProperty(attribute, value, type);\n    }\n  }\n\n  /** @private */\n  __subscribe() {\n    if (!directionSubscribers.includes(this)) {\n      directionSubscribers.push(this);\n    }\n  }\n\n  /** @private */\n  __unsubscribe() {\n    if (directionSubscribers.includes(this)) {\n      directionSubscribers.splice(directionSubscribers.indexOf(this), 1);\n    }\n  }\n\n  /**\n   * @param {Element} element\n   * @return {number}\n   * @protected\n   */\n  __getNormalizedScrollLeft(element) {\n    return _dir_helper_js__WEBPACK_IMPORTED_MODULE_0__.DirHelper.getNormalizedScrollLeft(scrollType, this.getAttribute('dir') || 'ltr', element);\n  }\n\n  /**\n   * @param {Element} element\n   * @param {number} scrollLeft\n   * @protected\n   */\n  __setNormalizedScrollLeft(element, scrollLeft) {\n    return _dir_helper_js__WEBPACK_IMPORTED_MODULE_0__.DirHelper.setNormalizedScrollLeft(scrollType, this.getAttribute('dir') || 'ltr', element, scrollLeft);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/dir-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/disabled-mixin.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/disabled-mixin.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DisabledMixin\": () => (/* binding */ DisabledMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * A mixin to provide disabled property for field components.\n *\n * @polymerMixin\n */\nconst DisabledMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superclass => class DisabledMixinClass extends superclass {\n  static get properties() {\n    return {\n      /**\n       * If true, the user cannot interact with this element.\n       */\n      disabled: {\n        type: Boolean,\n        value: false,\n        observer: '_disabledChanged',\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * @param {boolean} disabled\n   * @protected\n   */\n  _disabledChanged(disabled) {\n    this._setAriaDisabled(disabled);\n  }\n\n  /**\n   * @param {boolean} disabled\n   * @protected\n   */\n  _setAriaDisabled(disabled) {\n    if (disabled) {\n      this.setAttribute('aria-disabled', 'true');\n    } else {\n      this.removeAttribute('aria-disabled');\n    }\n  }\n\n  /**\n   * Overrides the default element `click` method in order to prevent\n   * firing the `click` event when the element is disabled.\n   * @protected\n   * @override\n   */\n  click() {\n    if (!this.disabled) {\n      super.click();\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvZGlzYWJsZWQtbWl4aW4uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnN0ZW9uLXBhbmVsLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tcG9uZW50LWJhc2Uvc3JjL2Rpc2FibGVkLW1peGluLmpzPzY2MWUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gMjAyMiBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgeyBkZWR1cGluZ01peGluIH0gZnJvbSAnQHBvbHltZXIvcG9seW1lci9saWIvdXRpbHMvbWl4aW4uanMnO1xuXG4vKipcbiAqIEEgbWl4aW4gdG8gcHJvdmlkZSBkaXNhYmxlZCBwcm9wZXJ0eSBmb3IgZmllbGQgY29tcG9uZW50cy5cbiAqXG4gKiBAcG9seW1lck1peGluXG4gKi9cbmV4cG9ydCBjb25zdCBEaXNhYmxlZE1peGluID0gZGVkdXBpbmdNaXhpbihcbiAgKHN1cGVyY2xhc3MpID0+XG4gICAgY2xhc3MgRGlzYWJsZWRNaXhpbkNsYXNzIGV4dGVuZHMgc3VwZXJjbGFzcyB7XG4gICAgICBzdGF0aWMgZ2V0IHByb3BlcnRpZXMoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgLyoqXG4gICAgICAgICAgICogSWYgdHJ1ZSwgdGhlIHVzZXIgY2Fubm90IGludGVyYWN0IHdpdGggdGhpcyBlbGVtZW50LlxuICAgICAgICAgICAqL1xuICAgICAgICAgIGRpc2FibGVkOiB7XG4gICAgICAgICAgICB0eXBlOiBCb29sZWFuLFxuICAgICAgICAgICAgdmFsdWU6IGZhbHNlLFxuICAgICAgICAgICAgb2JzZXJ2ZXI6ICdfZGlzYWJsZWRDaGFuZ2VkJyxcbiAgICAgICAgICAgIHJlZmxlY3RUb0F0dHJpYnV0ZTogdHJ1ZSxcbiAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gZGlzYWJsZWRcbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgX2Rpc2FibGVkQ2hhbmdlZChkaXNhYmxlZCkge1xuICAgICAgICB0aGlzLl9zZXRBcmlhRGlzYWJsZWQoZGlzYWJsZWQpO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gZGlzYWJsZWRcbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgX3NldEFyaWFEaXNhYmxlZChkaXNhYmxlZCkge1xuICAgICAgICBpZiAoZGlzYWJsZWQpIHtcbiAgICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZSgnYXJpYS1kaXNhYmxlZCcsICd0cnVlJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5yZW1vdmVBdHRyaWJ1dGUoJ2FyaWEtZGlzYWJsZWQnKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIE92ZXJyaWRlcyB0aGUgZGVmYXVsdCBlbGVtZW50IGBjbGlja2AgbWV0aG9kIGluIG9yZGVyIHRvIHByZXZlbnRcbiAgICAgICAqIGZpcmluZyB0aGUgYGNsaWNrYCBldmVudCB3aGVuIHRoZSBlbGVtZW50IGlzIGRpc2FibGVkLlxuICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICogQG92ZXJyaWRlXG4gICAgICAgKi9cbiAgICAgIGNsaWNrKCkge1xuICAgICAgICBpZiAoIXRoaXMuZGlzYWJsZWQpIHtcbiAgICAgICAgICBzdXBlci5jbGljaygpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/disabled-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/dom-utils.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/dom-utils.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addValueToAttribute\": () => (/* binding */ addValueToAttribute),\n/* harmony export */   \"getAncestorRootNodes\": () => (/* binding */ getAncestorRootNodes),\n/* harmony export */   \"isEmptyTextNode\": () => (/* binding */ isEmptyTextNode),\n/* harmony export */   \"removeValueFromAttribute\": () => (/* binding */ removeValueFromAttribute)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Returns an array of ancestor root nodes for the given node.\n *\n * A root node is either a document node or a document fragment node (Shadow Root).\n * The array is collected by a bottom-up DOM traversing that starts with the given node\n * and involves both the light DOM and ancestor shadow DOM trees.\n *\n * @param {Node} node\n * @return {Node[]}\n */\nfunction getAncestorRootNodes(node) {\n  const result = [];\n  while (node) {\n    if (node.nodeType === Node.DOCUMENT_NODE) {\n      result.push(node);\n      break;\n    }\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      result.push(node);\n      node = node.host;\n      continue;\n    }\n    if (node.assignedSlot) {\n      node = node.assignedSlot;\n      continue;\n    }\n    node = node.parentNode;\n  }\n  return result;\n}\n\n/**\n * @param {string} value\n * @return {Set<string>}\n */\nfunction deserializeAttributeValue(value) {\n  if (!value) {\n    return new Set();\n  }\n  return new Set(value.split(' '));\n}\n\n/**\n * @param {Set<string>} values\n * @return {string}\n */\nfunction serializeAttributeValue(values) {\n  return [...values].join(' ');\n}\n\n/**\n * Adds a value to an attribute containing space-delimited values.\n *\n * @param {HTMLElement} element\n * @param {string} attr\n * @param {string} value\n */\nfunction addValueToAttribute(element, attr, value) {\n  const values = deserializeAttributeValue(element.getAttribute(attr));\n  values.add(value);\n  element.setAttribute(attr, serializeAttributeValue(values));\n}\n\n/**\n * Removes a value from an attribute containing space-delimited values.\n * If the value is the last one, the whole attribute is removed.\n *\n * @param {HTMLElement} element\n * @param {string} attr\n * @param {string} value\n */\nfunction removeValueFromAttribute(element, attr, value) {\n  const values = deserializeAttributeValue(element.getAttribute(attr));\n  values.delete(value);\n  if (values.size === 0) {\n    element.removeAttribute(attr);\n    return;\n  }\n  element.setAttribute(attr, serializeAttributeValue(values));\n}\n\n/**\n * Returns true if the given node is an empty text node, false otherwise.\n *\n * @param {Node} node\n * @return {boolean}\n */\nfunction isEmptyTextNode(node) {\n  return node.nodeType === Node.TEXT_NODE && node.textContent.trim() === '';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvZG9tLXV0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnN0ZW9uLXBhbmVsLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tcG9uZW50LWJhc2Uvc3JjL2RvbS11dGlscy5qcz80NTU3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjIgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuXG4vKipcbiAqIFJldHVybnMgYW4gYXJyYXkgb2YgYW5jZXN0b3Igcm9vdCBub2RlcyBmb3IgdGhlIGdpdmVuIG5vZGUuXG4gKlxuICogQSByb290IG5vZGUgaXMgZWl0aGVyIGEgZG9jdW1lbnQgbm9kZSBvciBhIGRvY3VtZW50IGZyYWdtZW50IG5vZGUgKFNoYWRvdyBSb290KS5cbiAqIFRoZSBhcnJheSBpcyBjb2xsZWN0ZWQgYnkgYSBib3R0b20tdXAgRE9NIHRyYXZlcnNpbmcgdGhhdCBzdGFydHMgd2l0aCB0aGUgZ2l2ZW4gbm9kZVxuICogYW5kIGludm9sdmVzIGJvdGggdGhlIGxpZ2h0IERPTSBhbmQgYW5jZXN0b3Igc2hhZG93IERPTSB0cmVlcy5cbiAqXG4gKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAqIEByZXR1cm4ge05vZGVbXX1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEFuY2VzdG9yUm9vdE5vZGVzKG5vZGUpIHtcbiAgY29uc3QgcmVzdWx0ID0gW107XG5cbiAgd2hpbGUgKG5vZGUpIHtcbiAgICBpZiAobm9kZS5ub2RlVHlwZSA9PT0gTm9kZS5ET0NVTUVOVF9OT0RFKSB7XG4gICAgICByZXN1bHQucHVzaChub2RlKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIGlmIChub2RlLm5vZGVUeXBlID09PSBOb2RlLkRPQ1VNRU5UX0ZSQUdNRU5UX05PREUpIHtcbiAgICAgIHJlc3VsdC5wdXNoKG5vZGUpO1xuICAgICAgbm9kZSA9IG5vZGUuaG9zdDtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cblxuICAgIGlmIChub2RlLmFzc2lnbmVkU2xvdCkge1xuICAgICAgbm9kZSA9IG5vZGUuYXNzaWduZWRTbG90O1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAgbm9kZSA9IG5vZGUucGFyZW50Tm9kZTtcbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKiBAcmV0dXJuIHtTZXQ8c3RyaW5nPn1cbiAqL1xuZnVuY3Rpb24gZGVzZXJpYWxpemVBdHRyaWJ1dGVWYWx1ZSh2YWx1ZSkge1xuICBpZiAoIXZhbHVlKSB7XG4gICAgcmV0dXJuIG5ldyBTZXQoKTtcbiAgfVxuXG4gIHJldHVybiBuZXcgU2V0KHZhbHVlLnNwbGl0KCcgJykpO1xufVxuXG4vKipcbiAqIEBwYXJhbSB7U2V0PHN0cmluZz59IHZhbHVlc1xuICogQHJldHVybiB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBzZXJpYWxpemVBdHRyaWJ1dGVWYWx1ZSh2YWx1ZXMpIHtcbiAgcmV0dXJuIFsuLi52YWx1ZXNdLmpvaW4oJyAnKTtcbn1cblxuLyoqXG4gKiBBZGRzIGEgdmFsdWUgdG8gYW4gYXR0cmlidXRlIGNvbnRhaW5pbmcgc3BhY2UtZGVsaW1pdGVkIHZhbHVlcy5cbiAqXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gKiBAcGFyYW0ge3N0cmluZ30gYXR0clxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhZGRWYWx1ZVRvQXR0cmlidXRlKGVsZW1lbnQsIGF0dHIsIHZhbHVlKSB7XG4gIGNvbnN0IHZhbHVlcyA9IGRlc2VyaWFsaXplQXR0cmlidXRlVmFsdWUoZWxlbWVudC5nZXRBdHRyaWJ1dGUoYXR0cikpO1xuICB2YWx1ZXMuYWRkKHZhbHVlKTtcbiAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoYXR0ciwgc2VyaWFsaXplQXR0cmlidXRlVmFsdWUodmFsdWVzKSk7XG59XG5cbi8qKlxuICogUmVtb3ZlcyBhIHZhbHVlIGZyb20gYW4gYXR0cmlidXRlIGNvbnRhaW5pbmcgc3BhY2UtZGVsaW1pdGVkIHZhbHVlcy5cbiAqIElmIHRoZSB2YWx1ZSBpcyB0aGUgbGFzdCBvbmUsIHRoZSB3aG9sZSBhdHRyaWJ1dGUgaXMgcmVtb3ZlZC5cbiAqXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50XG4gKiBAcGFyYW0ge3N0cmluZ30gYXR0clxuICogQHBhcmFtIHtzdHJpbmd9IHZhbHVlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVWYWx1ZUZyb21BdHRyaWJ1dGUoZWxlbWVudCwgYXR0ciwgdmFsdWUpIHtcbiAgY29uc3QgdmFsdWVzID0gZGVzZXJpYWxpemVBdHRyaWJ1dGVWYWx1ZShlbGVtZW50LmdldEF0dHJpYnV0ZShhdHRyKSk7XG4gIHZhbHVlcy5kZWxldGUodmFsdWUpO1xuICBpZiAodmFsdWVzLnNpemUgPT09IDApIHtcbiAgICBlbGVtZW50LnJlbW92ZUF0dHJpYnV0ZShhdHRyKTtcbiAgICByZXR1cm47XG4gIH1cbiAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoYXR0ciwgc2VyaWFsaXplQXR0cmlidXRlVmFsdWUodmFsdWVzKSk7XG59XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIGlmIHRoZSBnaXZlbiBub2RlIGlzIGFuIGVtcHR5IHRleHQgbm9kZSwgZmFsc2Ugb3RoZXJ3aXNlLlxuICpcbiAqIEBwYXJhbSB7Tm9kZX0gbm9kZVxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzRW1wdHlUZXh0Tm9kZShub2RlKSB7XG4gIHJldHVybiBub2RlLm5vZGVUeXBlID09PSBOb2RlLlRFWFRfTk9ERSAmJiBub2RlLnRleHRDb250ZW50LnRyaW0oKSA9PT0gJyc7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/dom-utils.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/focus-trap-controller.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/focus-trap-controller.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"FocusTrapController\": () => (/* binding */ FocusTrapController)\n/* harmony export */ });\n/* harmony import */ var _focus_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./focus-utils.js */ \"./node_modules/@vaadin/component-base/src/focus-utils.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst instances = [];\n\n/**\n * A controller for trapping focus within a DOM node.\n */\nclass FocusTrapController {\n  /**\n   * @param {HTMLElement} host\n   */\n  constructor(host) {\n    /**\n     * The controller host element.\n     *\n     * @type {HTMLElement}\n     */\n    this.host = host;\n\n    /**\n     * A node for trapping focus in.\n     *\n     * @type {HTMLElement | null}\n     * @private\n     */\n    this.__trapNode = null;\n    this.__onKeyDown = this.__onKeyDown.bind(this);\n  }\n  hostConnected() {\n    document.addEventListener('keydown', this.__onKeyDown);\n  }\n  hostDisconnected() {\n    document.removeEventListener('keydown', this.__onKeyDown);\n  }\n\n  /**\n   * Activates a focus trap for a DOM node that will prevent focus from escaping the node.\n   * The trap can be deactivated with the `.releaseFocus()` method.\n   *\n   * If focus is initially outside the trap, the method will move focus inside,\n   * on the first focusable element of the trap in the tab order.\n   * The first focusable element can be the trap node itself if it is focusable\n   * and comes first in the tab order.\n   *\n   * If there are no focusable elements, the method will throw an exception\n   * and the trap will not be set.\n   *\n   * @param {HTMLElement} trapNode\n   */\n  trapFocus(trapNode) {\n    this.__trapNode = trapNode;\n    if (this.__focusableElements.length === 0) {\n      this.__trapNode = null;\n      throw new Error('The trap node should have at least one focusable descendant or be focusable itself.');\n    }\n    instances.push(this);\n    if (this.__focusedElementIndex === -1) {\n      this.__focusableElements[0].focus();\n    }\n  }\n\n  /**\n   * Deactivates the focus trap set with the `.trapFocus()` method\n   * so that it becomes possible to tab outside the trap node.\n   */\n  releaseFocus() {\n    this.__trapNode = null;\n    instances.pop();\n  }\n\n  /**\n   * A `keydown` event handler that manages tabbing navigation when the trap is enabled.\n   *\n   * - Moves focus to the next focusable element of the trap on `Tab` press.\n   * When no next element to focus, the method moves focus to the first focusable element.\n   * - Moves focus to the prev focusable element of the trap on `Shift+Tab` press.\n   * When no prev element to focus, the method moves focus to the last focusable element.\n   *\n   * @param {KeyboardEvent} event\n   * @private\n   */\n  __onKeyDown(event) {\n    if (!this.__trapNode) {\n      return;\n    }\n\n    // Only handle events for the last instance\n    if (this !== Array.from(instances).pop()) {\n      return;\n    }\n    if (event.key === 'Tab') {\n      event.preventDefault();\n      const backward = event.shiftKey;\n      this.__focusNextElement(backward);\n    }\n  }\n\n  /**\n   * - Moves focus to the next focusable element if `backward === false`.\n   * When no next element to focus, the method moves focus to the first focusable element.\n   * - Moves focus to the prev focusable element if `backward === true`.\n   * When no prev element to focus the method moves focus to the last focusable element.\n   *\n   * If no focusable elements, the method returns immediately.\n   *\n   * @param {boolean} backward\n   * @private\n   */\n  __focusNextElement(backward = false) {\n    const focusableElements = this.__focusableElements;\n    const step = backward ? -1 : 1;\n    const currentIndex = this.__focusedElementIndex;\n    const nextIndex = (focusableElements.length + currentIndex + step) % focusableElements.length;\n    const element = focusableElements[nextIndex];\n    element.focus();\n    if (element.localName === 'input') {\n      element.select();\n    }\n  }\n\n  /**\n   * An array of tab-ordered focusable elements inside the trap node.\n   *\n   * @return {HTMLElement[]}\n   * @private\n   */\n  get __focusableElements() {\n    return (0,_focus_utils_js__WEBPACK_IMPORTED_MODULE_0__.getFocusableElements)(this.__trapNode);\n  }\n\n  /**\n   * The index of the element inside the trap node that currently has focus.\n   *\n   * @return {HTMLElement | undefined}\n   * @private\n   */\n  get __focusedElementIndex() {\n    const focusableElements = this.__focusableElements;\n    return focusableElements.indexOf(focusableElements.filter(_focus_utils_js__WEBPACK_IMPORTED_MODULE_0__.isElementFocused).pop());\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvZm9jdXMtdHJhcC1jb250cm9sbGVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnN0ZW9uLXBhbmVsLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vY29tcG9uZW50LWJhc2Uvc3JjL2ZvY3VzLXRyYXAtY29udHJvbGxlci5qcz83M2VjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjIgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0IHsgZ2V0Rm9jdXNhYmxlRWxlbWVudHMsIGlzRWxlbWVudEZvY3VzZWQgfSBmcm9tICcuL2ZvY3VzLXV0aWxzLmpzJztcblxuY29uc3QgaW5zdGFuY2VzID0gW107XG5cbi8qKlxuICogQSBjb250cm9sbGVyIGZvciB0cmFwcGluZyBmb2N1cyB3aXRoaW4gYSBET00gbm9kZS5cbiAqL1xuZXhwb3J0IGNsYXNzIEZvY3VzVHJhcENvbnRyb2xsZXIge1xuICAvKipcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gaG9zdFxuICAgKi9cbiAgY29uc3RydWN0b3IoaG9zdCkge1xuICAgIC8qKlxuICAgICAqIFRoZSBjb250cm9sbGVyIGhvc3QgZWxlbWVudC5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtIVE1MRWxlbWVudH1cbiAgICAgKi9cbiAgICB0aGlzLmhvc3QgPSBob3N0O1xuXG4gICAgLyoqXG4gICAgICogQSBub2RlIGZvciB0cmFwcGluZyBmb2N1cyBpbi5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtIVE1MRWxlbWVudCB8IG51bGx9XG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICB0aGlzLl9fdHJhcE5vZGUgPSBudWxsO1xuXG4gICAgdGhpcy5fX29uS2V5RG93biA9IHRoaXMuX19vbktleURvd24uYmluZCh0aGlzKTtcbiAgfVxuXG4gIGhvc3RDb25uZWN0ZWQoKSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX19vbktleURvd24pO1xuICB9XG5cbiAgaG9zdERpc2Nvbm5lY3RlZCgpIHtcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5fX29uS2V5RG93bik7XG4gIH1cblxuICAvKipcbiAgICogQWN0aXZhdGVzIGEgZm9jdXMgdHJhcCBmb3IgYSBET00gbm9kZSB0aGF0IHdpbGwgcHJldmVudCBmb2N1cyBmcm9tIGVzY2FwaW5nIHRoZSBub2RlLlxuICAgKiBUaGUgdHJhcCBjYW4gYmUgZGVhY3RpdmF0ZWQgd2l0aCB0aGUgYC5yZWxlYXNlRm9jdXMoKWAgbWV0aG9kLlxuICAgKlxuICAgKiBJZiBmb2N1cyBpcyBpbml0aWFsbHkgb3V0c2lkZSB0aGUgdHJhcCwgdGhlIG1ldGhvZCB3aWxsIG1vdmUgZm9jdXMgaW5zaWRlLFxuICAgKiBvbiB0aGUgZmlyc3QgZm9jdXNhYmxlIGVsZW1lbnQgb2YgdGhlIHRyYXAgaW4gdGhlIHRhYiBvcmRlci5cbiAgICogVGhlIGZpcnN0IGZvY3VzYWJsZSBlbGVtZW50IGNhbiBiZSB0aGUgdHJhcCBub2RlIGl0c2VsZiBpZiBpdCBpcyBmb2N1c2FibGVcbiAgICogYW5kIGNvbWVzIGZpcnN0IGluIHRoZSB0YWIgb3JkZXIuXG4gICAqXG4gICAqIElmIHRoZXJlIGFyZSBubyBmb2N1c2FibGUgZWxlbWVudHMsIHRoZSBtZXRob2Qgd2lsbCB0aHJvdyBhbiBleGNlcHRpb25cbiAgICogYW5kIHRoZSB0cmFwIHdpbGwgbm90IGJlIHNldC5cbiAgICpcbiAgICogQHBhcmFtIHtIVE1MRWxlbWVudH0gdHJhcE5vZGVcbiAgICovXG4gIHRyYXBGb2N1cyh0cmFwTm9kZSkge1xuICAgIHRoaXMuX190cmFwTm9kZSA9IHRyYXBOb2RlO1xuXG4gICAgaWYgKHRoaXMuX19mb2N1c2FibGVFbGVtZW50cy5sZW5ndGggPT09IDApIHtcbiAgICAgIHRoaXMuX190cmFwTm9kZSA9IG51bGw7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RoZSB0cmFwIG5vZGUgc2hvdWxkIGhhdmUgYXQgbGVhc3Qgb25lIGZvY3VzYWJsZSBkZXNjZW5kYW50IG9yIGJlIGZvY3VzYWJsZSBpdHNlbGYuJyk7XG4gICAgfVxuXG4gICAgaW5zdGFuY2VzLnB1c2godGhpcyk7XG5cbiAgICBpZiAodGhpcy5fX2ZvY3VzZWRFbGVtZW50SW5kZXggPT09IC0xKSB7XG4gICAgICB0aGlzLl9fZm9jdXNhYmxlRWxlbWVudHNbMF0uZm9jdXMoKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogRGVhY3RpdmF0ZXMgdGhlIGZvY3VzIHRyYXAgc2V0IHdpdGggdGhlIGAudHJhcEZvY3VzKClgIG1ldGhvZFxuICAgKiBzbyB0aGF0IGl0IGJlY29tZXMgcG9zc2libGUgdG8gdGFiIG91dHNpZGUgdGhlIHRyYXAgbm9kZS5cbiAgICovXG4gIHJlbGVhc2VGb2N1cygpIHtcbiAgICB0aGlzLl9fdHJhcE5vZGUgPSBudWxsO1xuXG4gICAgaW5zdGFuY2VzLnBvcCgpO1xuICB9XG5cbiAgLyoqXG4gICAqIEEgYGtleWRvd25gIGV2ZW50IGhhbmRsZXIgdGhhdCBtYW5hZ2VzIHRhYmJpbmcgbmF2aWdhdGlvbiB3aGVuIHRoZSB0cmFwIGlzIGVuYWJsZWQuXG4gICAqXG4gICAqIC0gTW92ZXMgZm9jdXMgdG8gdGhlIG5leHQgZm9jdXNhYmxlIGVsZW1lbnQgb2YgdGhlIHRyYXAgb24gYFRhYmAgcHJlc3MuXG4gICAqIFdoZW4gbm8gbmV4dCBlbGVtZW50IHRvIGZvY3VzLCB0aGUgbWV0aG9kIG1vdmVzIGZvY3VzIHRvIHRoZSBmaXJzdCBmb2N1c2FibGUgZWxlbWVudC5cbiAgICogLSBNb3ZlcyBmb2N1cyB0byB0aGUgcHJldiBmb2N1c2FibGUgZWxlbWVudCBvZiB0aGUgdHJhcCBvbiBgU2hpZnQrVGFiYCBwcmVzcy5cbiAgICogV2hlbiBubyBwcmV2IGVsZW1lbnQgdG8gZm9jdXMsIHRoZSBtZXRob2QgbW92ZXMgZm9jdXMgdG8gdGhlIGxhc3QgZm9jdXNhYmxlIGVsZW1lbnQuXG4gICAqXG4gICAqIEBwYXJhbSB7S2V5Ym9hcmRFdmVudH0gZXZlbnRcbiAgICogQHByaXZhdGVcbiAgICovXG4gIF9fb25LZXlEb3duKGV2ZW50KSB7XG4gICAgaWYgKCF0aGlzLl9fdHJhcE5vZGUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBPbmx5IGhhbmRsZSBldmVudHMgZm9yIHRoZSBsYXN0IGluc3RhbmNlXG4gICAgaWYgKHRoaXMgIT09IEFycmF5LmZyb20oaW5zdGFuY2VzKS5wb3AoKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChldmVudC5rZXkgPT09ICdUYWInKSB7XG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICBjb25zdCBiYWNrd2FyZCA9IGV2ZW50LnNoaWZ0S2V5O1xuICAgICAgdGhpcy5fX2ZvY3VzTmV4dEVsZW1lbnQoYmFja3dhcmQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiAtIE1vdmVzIGZvY3VzIHRvIHRoZSBuZXh0IGZvY3VzYWJsZSBlbGVtZW50IGlmIGBiYWNrd2FyZCA9PT0gZmFsc2VgLlxuICAgKiBXaGVuIG5vIG5leHQgZWxlbWVudCB0byBmb2N1cywgdGhlIG1ldGhvZCBtb3ZlcyBmb2N1cyB0byB0aGUgZmlyc3QgZm9jdXNhYmxlIGVsZW1lbnQuXG4gICAqIC0gTW92ZXMgZm9jdXMgdG8gdGhlIHByZXYgZm9jdXNhYmxlIGVsZW1lbnQgaWYgYGJhY2t3YXJkID09PSB0cnVlYC5cbiAgICogV2hlbiBubyBwcmV2IGVsZW1lbnQgdG8gZm9jdXMgdGhlIG1ldGhvZCBtb3ZlcyBmb2N1cyB0byB0aGUgbGFzdCBmb2N1c2FibGUgZWxlbWVudC5cbiAgICpcbiAgICogSWYgbm8gZm9jdXNhYmxlIGVsZW1lbnRzLCB0aGUgbWV0aG9kIHJldHVybnMgaW1tZWRpYXRlbHkuXG4gICAqXG4gICAqIEBwYXJhbSB7Ym9vbGVhbn0gYmFja3dhcmRcbiAgICogQHByaXZhdGVcbiAgICovXG4gIF9fZm9jdXNOZXh0RWxlbWVudChiYWNrd2FyZCA9IGZhbHNlKSB7XG4gICAgY29uc3QgZm9jdXNhYmxlRWxlbWVudHMgPSB0aGlzLl9fZm9jdXNhYmxlRWxlbWVudHM7XG4gICAgY29uc3Qgc3RlcCA9IGJhY2t3YXJkID8gLTEgOiAxO1xuICAgIGNvbnN0IGN1cnJlbnRJbmRleCA9IHRoaXMuX19mb2N1c2VkRWxlbWVudEluZGV4O1xuICAgIGNvbnN0IG5leHRJbmRleCA9IChmb2N1c2FibGVFbGVtZW50cy5sZW5ndGggKyBjdXJyZW50SW5kZXggKyBzdGVwKSAlIGZvY3VzYWJsZUVsZW1lbnRzLmxlbmd0aDtcbiAgICBjb25zdCBlbGVtZW50ID0gZm9jdXNhYmxlRWxlbWVudHNbbmV4dEluZGV4XTtcbiAgICBlbGVtZW50LmZvY3VzKCk7XG4gICAgaWYgKGVsZW1lbnQubG9jYWxOYW1lID09PSAnaW5wdXQnKSB7XG4gICAgICBlbGVtZW50LnNlbGVjdCgpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBBbiBhcnJheSBvZiB0YWItb3JkZXJlZCBmb2N1c2FibGUgZWxlbWVudHMgaW5zaWRlIHRoZSB0cmFwIG5vZGUuXG4gICAqXG4gICAqIEByZXR1cm4ge0hUTUxFbGVtZW50W119XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBnZXQgX19mb2N1c2FibGVFbGVtZW50cygpIHtcbiAgICByZXR1cm4gZ2V0Rm9jdXNhYmxlRWxlbWVudHModGhpcy5fX3RyYXBOb2RlKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgaW5kZXggb2YgdGhlIGVsZW1lbnQgaW5zaWRlIHRoZSB0cmFwIG5vZGUgdGhhdCBjdXJyZW50bHkgaGFzIGZvY3VzLlxuICAgKlxuICAgKiBAcmV0dXJuIHtIVE1MRWxlbWVudCB8IHVuZGVmaW5lZH1cbiAgICogQHByaXZhdGVcbiAgICovXG4gIGdldCBfX2ZvY3VzZWRFbGVtZW50SW5kZXgoKSB7XG4gICAgY29uc3QgZm9jdXNhYmxlRWxlbWVudHMgPSB0aGlzLl9fZm9jdXNhYmxlRWxlbWVudHM7XG4gICAgcmV0dXJuIGZvY3VzYWJsZUVsZW1lbnRzLmluZGV4T2YoZm9jdXNhYmxlRWxlbWVudHMuZmlsdGVyKGlzRWxlbWVudEZvY3VzZWQpLnBvcCgpKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/focus-trap-controller.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/focus-utils.js":
/*!****************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/focus-utils.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getFocusableElements\": () => (/* binding */ getFocusableElements),\n/* harmony export */   \"isElementFocusable\": () => (/* binding */ isElementFocusable),\n/* harmony export */   \"isElementFocused\": () => (/* binding */ isElementFocused),\n/* harmony export */   \"isElementHidden\": () => (/* binding */ isElementHidden),\n/* harmony export */   \"isKeyboardActive\": () => (/* binding */ isKeyboardActive)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n// We consider the keyboard to be active if the window has received a keydown\n// event since the last mousedown event.\nlet keyboardActive = false;\n\n// Listen for top-level keydown and mousedown events.\n// Use capture phase so we detect events even if they're handled.\nwindow.addEventListener('keydown', () => {\n  keyboardActive = true;\n}, {\n  capture: true\n});\nwindow.addEventListener('mousedown', () => {\n  keyboardActive = false;\n}, {\n  capture: true\n});\n\n/**\n * Returns true if the window has received a keydown\n * event since the last mousedown event.\n *\n * @return {boolean}\n */\nfunction isKeyboardActive() {\n  return keyboardActive;\n}\n\n/**\n * Returns true if the element is hidden directly with `display: none` or `visibility: hidden`,\n * false otherwise.\n *\n * The method doesn't traverse the element's ancestors, it only checks for the CSS properties\n * set directly to or inherited by the element.\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nfunction isElementHiddenDirectly(element) {\n  // Check inline style first to save a re-flow.\n  const style = element.style;\n  if (style.visibility === 'hidden' || style.display === 'none') {\n    return true;\n  }\n  const computedStyle = window.getComputedStyle(element);\n  if (computedStyle.visibility === 'hidden' || computedStyle.display === 'none') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns the normalized element tabindex. If not focusable, returns -1.\n * It checks for the attribute \"tabindex\" instead of the element property\n * `tabIndex` since browsers assign different values to it.\n * e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\n *\n * @param {HTMLElement} element\n * @return {number}\n */\nfunction normalizeTabIndex(element) {\n  if (!isElementFocusable(element)) {\n    return -1;\n  }\n  const tabIndex = element.getAttribute('tabindex') || 0;\n  return Number(tabIndex);\n}\n\n/**\n * Returns if element `a` has lower tab order compared to element `b`\n * (both elements are assumed to be focusable and tabbable).\n * Elements with tabindex = 0 have lower tab order compared to elements\n * with tabindex > 0.\n * If both have same tabindex, it returns false.\n *\n * @param {HTMLElement} a\n * @param {HTMLElement} b\n * @return {boolean}\n */\nfunction hasLowerTabOrder(a, b) {\n  // Normalize tabIndexes\n  // e.g. in Firefox `<div contenteditable>` has `tabIndex = -1`\n  const ati = Math.max(a.tabIndex, 0);\n  const bti = Math.max(b.tabIndex, 0);\n  return ati === 0 || bti === 0 ? bti > ati : ati > bti;\n}\n\n/**\n * Merge sort iterator, merges the two arrays into one, sorted by tabindex.\n *\n * @param {HTMLElement[]} left\n * @param {HTMLElement[]} right\n * @return {HTMLElement[]}\n */\nfunction mergeSortByTabIndex(left, right) {\n  const result = [];\n  while (left.length > 0 && right.length > 0) {\n    if (hasLowerTabOrder(left[0], right[0])) {\n      result.push(right.shift());\n    } else {\n      result.push(left.shift());\n    }\n  }\n  return result.concat(left, right);\n}\n\n/**\n * Sorts an array of elements by tabindex. Returns a new array.\n *\n * @param {HTMLElement[]} elements\n * @return {HTMLElement[]}\n */\nfunction sortElementsByTabIndex(elements) {\n  // Implement a merge sort as Array.prototype.sort does a non-stable sort\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n  const len = elements.length;\n  if (len < 2) {\n    return elements;\n  }\n  const pivot = Math.ceil(len / 2);\n  const left = sortElementsByTabIndex(elements.slice(0, pivot));\n  const right = sortElementsByTabIndex(elements.slice(pivot));\n  return mergeSortByTabIndex(left, right);\n}\n\n/**\n * Searches for nodes that are tabbable and adds them to the `result` array.\n * Returns if the `result` array needs to be sorted by tabindex.\n *\n * @param {Node} node The starting point for the search; added to `result` if tabbable.\n * @param {HTMLElement[]} result\n * @return {boolean}\n * @private\n */\nfunction collectFocusableNodes(node, result) {\n  if (node.nodeType !== Node.ELEMENT_NODE || isElementHiddenDirectly(node)) {\n    // Don't traverse children if the node is not an HTML element or not visible.\n    return false;\n  }\n  const element = /** @type {HTMLElement} */node;\n  const tabIndex = normalizeTabIndex(element);\n  let needsSort = tabIndex > 0;\n  if (tabIndex >= 0) {\n    result.push(element);\n  }\n  let children = [];\n  if (element.localName === 'slot') {\n    children = element.assignedNodes({\n      flatten: true\n    });\n  } else {\n    // Use shadow root if possible, will check for distributed nodes.\n    children = (element.shadowRoot || element).children;\n  }\n  [...children].forEach(child => {\n    // Ensure method is always invoked to collect focusable children.\n    needsSort = collectFocusableNodes(child, result) || needsSort;\n  });\n  return needsSort;\n}\n\n/**\n * Returns true if the element is hidden, false otherwise.\n *\n * An element is treated as hidden when any of the following conditions are met:\n * - the element itself or one of its ancestors has `display: none`.\n * - the element has or inherits `visibility: hidden`.\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nfunction isElementHidden(element) {\n  // `offsetParent` is `null` when the element itself\n  // or one of its ancestors is hidden with `display: none`.\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent\n  if (element.offsetParent === null) {\n    return true;\n  }\n  return isElementHiddenDirectly(element);\n}\n\n/**\n * Returns true if the element is focusable, otherwise false.\n *\n * The list of focusable elements is taken from http://stackoverflow.com/a/1600194/4228703.\n * However, there isn't a definite list, it's up to the browser.\n * The only standard we have is DOM Level 2 HTML https://www.w3.org/TR/DOM-Level-2-HTML/html.html,\n * according to which the only elements that have a `focus()` method are:\n * - HTMLInputElement\n * - HTMLSelectElement\n * - HTMLTextAreaElement\n * - HTMLAnchorElement\n *\n * This notably omits HTMLButtonElement and HTMLAreaElement.\n * Referring to these tests with tabbables in different browsers\n * http://allyjs.io/data-tables/focusable.html\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nfunction isElementFocusable(element) {\n  // The element cannot be focused if its `tabindex` attribute is set to `-1`.\n  if (element.matches('[tabindex=\"-1\"]')) {\n    return false;\n  }\n\n  // Elements that cannot be focused if they have a `disabled` attribute.\n  if (element.matches('input, select, textarea, button, object')) {\n    return element.matches(':not([disabled])');\n  }\n\n  // Elements that can be focused even if they have a `disabled` attribute.\n  return element.matches('a[href], area[href], iframe, [tabindex], [contentEditable]');\n}\n\n/**\n * Returns true if the element is focused, false otherwise.\n *\n * @param {HTMLElement} element\n * @return {boolean}\n */\nfunction isElementFocused(element) {\n  return element.getRootNode().activeElement === element;\n}\n\n/**\n * Returns a tab-ordered array of focusable elements for a root element.\n * The resulting array will include the root element if it is focusable.\n *\n * The method traverses nodes in shadow DOM trees too if any.\n *\n * @param {HTMLElement} element\n * @return {HTMLElement[]}\n */\nfunction getFocusableElements(element) {\n  const focusableElements = [];\n  const needsSortByTabIndex = collectFocusableNodes(element, focusableElements);\n  // If there is at least one element with tabindex > 0, we need to sort\n  // the final array by tabindex.≈\n  if (needsSortByTabIndex) {\n    return sortElementsByTabIndex(focusableElements);\n  }\n  return focusableElements;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/focus-utils.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/iron-list-core.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/iron-list-core.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ironList\": () => (/* binding */ ironList)\n/* harmony export */ });\n/* harmony import */ var _async_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async.js */ \"./node_modules/@vaadin/component-base/src/async.js\");\n/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./debounce.js */ \"./node_modules/@vaadin/component-base/src/debounce.js\");\n/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n\nconst IOS = navigator.userAgent.match(/iP(?:hone|ad;(?: U;)? CPU) OS (\\d+)/);\nconst IOS_TOUCH_SCROLLING = IOS && IOS[1] >= 8;\nconst DEFAULT_PHYSICAL_COUNT = 3;\n\n/**\n * DO NOT EDIT THIS FILE!\n *\n * This file includes the iron-list scrolling engine copied from\n * https://github.com/PolymerElements/iron-list/blob/master/iron-list.js\n *\n * If something in the scrolling engine needs to be changed\n * for the virtualizer's purposes, override a function\n * in virtualizer-iron-list-adapter.js instead of changing it here.\n * If a function on this file is no longer needed, the code can be safely deleted.\n *\n * This will allow us to keep the iron-list code here as close to\n * the original as possible.\n */\nconst ironList = {\n  /**\n   * The ratio of hidden tiles that should remain in the scroll direction.\n   * Recommended value ~0.5, so it will distribute tiles evenly in both\n   * directions.\n   */\n  _ratio: 0.5,\n  /**\n   * The padding-top value for the list.\n   */\n  _scrollerPaddingTop: 0,\n  /**\n   * This value is a cached value of `scrollTop` from the last `scroll` event.\n   */\n  _scrollPosition: 0,\n  /**\n   * The sum of the heights of all the tiles in the DOM.\n   */\n  _physicalSize: 0,\n  /**\n   * The average `offsetHeight` of the tiles observed till now.\n   */\n  _physicalAverage: 0,\n  /**\n   * The number of tiles which `offsetHeight` > 0 observed until now.\n   */\n  _physicalAverageCount: 0,\n  /**\n   * The Y position of the item rendered in the `_physicalStart`\n   * tile relative to the scrolling list.\n   */\n  _physicalTop: 0,\n  /**\n   * The number of items in the list.\n   */\n  _virtualCount: 0,\n  /**\n   * The estimated scroll height based on `_physicalAverage`\n   */\n  _estScrollHeight: 0,\n  /**\n   * The scroll height of the dom node\n   */\n  _scrollHeight: 0,\n  /**\n   * The height of the list. This is referred as the viewport in the context of\n   * list.\n   */\n  _viewportHeight: 0,\n  /**\n   * The width of the list. This is referred as the viewport in the context of\n   * list.\n   */\n  _viewportWidth: 0,\n  /**\n   * An array of DOM nodes that are currently in the tree\n   * @type {?Array<!HTMLElement>}\n   */\n  _physicalItems: null,\n  /**\n   * An array of heights for each item in `_physicalItems`\n   * @type {?Array<number>}\n   */\n  _physicalSizes: null,\n  /**\n   * A cached value for the first visible index.\n   * See `firstVisibleIndex`\n   * @type {?number}\n   */\n  _firstVisibleIndexVal: null,\n  /**\n   * A cached value for the last visible index.\n   * See `lastVisibleIndex`\n   * @type {?number}\n   */\n  _lastVisibleIndexVal: null,\n  /**\n   * The max number of pages to render. One page is equivalent to the height of\n   * the list.\n   */\n  _maxPages: 2,\n  /**\n   * The cost of stamping a template in ms.\n   */\n  _templateCost: 0,\n  /**\n   * The bottom of the physical content.\n   */\n  get _physicalBottom() {\n    return this._physicalTop + this._physicalSize;\n  },\n  /**\n   * The bottom of the scroll.\n   */\n  get _scrollBottom() {\n    return this._scrollPosition + this._viewportHeight;\n  },\n  /**\n   * The n-th item rendered in the last physical item.\n   */\n  get _virtualEnd() {\n    return this._virtualStart + this._physicalCount - 1;\n  },\n  /**\n   * The height of the physical content that isn't on the screen.\n   */\n  get _hiddenContentSize() {\n    return this._physicalSize - this._viewportHeight;\n  },\n  /**\n   * The maximum scroll top value.\n   */\n  get _maxScrollTop() {\n    return this._estScrollHeight - this._viewportHeight + this._scrollOffset;\n  },\n  /**\n   * The largest n-th value for an item such that it can be rendered in\n   * `_physicalStart`.\n   */\n  get _maxVirtualStart() {\n    const virtualCount = this._virtualCount;\n    return Math.max(0, virtualCount - this._physicalCount);\n  },\n  get _virtualStart() {\n    return this._virtualStartVal || 0;\n  },\n  set _virtualStart(val) {\n    val = this._clamp(val, 0, this._maxVirtualStart);\n    this._virtualStartVal = val;\n  },\n  get _physicalStart() {\n    return this._physicalStartVal || 0;\n  },\n  /**\n   * The k-th tile that is at the top of the scrolling list.\n   */\n  set _physicalStart(val) {\n    val %= this._physicalCount;\n    if (val < 0) {\n      val = this._physicalCount + val;\n    }\n    this._physicalStartVal = val;\n  },\n  /**\n   * The k-th tile that is at the bottom of the scrolling list.\n   */\n  get _physicalEnd() {\n    return (this._physicalStart + this._physicalCount - 1) % this._physicalCount;\n  },\n  get _physicalCount() {\n    return this._physicalCountVal || 0;\n  },\n  set _physicalCount(val) {\n    this._physicalCountVal = val;\n  },\n  /**\n   * An optimal physical size such that we will have enough physical items\n   * to fill up the viewport and recycle when the user scrolls.\n   *\n   * This default value assumes that we will at least have the equivalent\n   * to a viewport of physical items above and below the user's viewport.\n   */\n  get _optPhysicalSize() {\n    return this._viewportHeight === 0 ? Infinity : this._viewportHeight * this._maxPages;\n  },\n  /**\n   * True if the current list is visible.\n   */\n  get _isVisible() {\n    return Boolean(this.offsetWidth || this.offsetHeight);\n  },\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get firstVisibleIndex() {\n    let idx = this._firstVisibleIndexVal;\n    if (idx == null) {\n      let physicalOffset = this._physicalTop + this._scrollOffset;\n      idx = this._iterateItems((pidx, vidx) => {\n        physicalOffset += this._getPhysicalSizeIncrement(pidx);\n        if (physicalOffset > this._scrollPosition) {\n          return vidx;\n        }\n      }) || 0;\n      this._firstVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @type {number}\n   */\n  get lastVisibleIndex() {\n    let idx = this._lastVisibleIndexVal;\n    if (idx == null) {\n      let physicalOffset = this._physicalTop + this._scrollOffset;\n      this._iterateItems((pidx, vidx) => {\n        if (physicalOffset < this._scrollBottom) {\n          idx = vidx;\n        }\n        physicalOffset += this._getPhysicalSizeIncrement(pidx);\n      });\n      this._lastVisibleIndexVal = idx;\n    }\n    return idx;\n  },\n  get _scrollOffset() {\n    return this._scrollerPaddingTop + this.scrollOffset;\n  },\n  /**\n   * Recycles the physical items when needed.\n   */\n  _scrollHandler() {\n    const scrollTop = Math.max(0, Math.min(this._maxScrollTop, this._scrollTop));\n    let delta = scrollTop - this._scrollPosition;\n    const isScrollingDown = delta >= 0;\n    // Track the current scroll position.\n    this._scrollPosition = scrollTop;\n    // Clear indexes for first and last visible indexes.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n    // Random access.\n    if (Math.abs(delta) > this._physicalSize && this._physicalSize > 0) {\n      delta -= this._scrollOffset;\n      const idxAdjustment = Math.round(delta / this._physicalAverage);\n      this._virtualStart += idxAdjustment;\n      this._physicalStart += idxAdjustment;\n      // Estimate new physical offset based on the virtual start index.\n      // adjusts the physical start position to stay in sync with the clamped\n      // virtual start index. It's critical not to let this value be\n      // more than the scroll position however, since that would result in\n      // the physical items not covering the viewport, and leading to\n      // _increasePoolIfNeeded to run away creating items to try to fill it.\n      this._physicalTop = Math.min(Math.floor(this._virtualStart) * this._physicalAverage, this._scrollPosition);\n      this._update();\n    } else if (this._physicalCount > 0) {\n      const reusables = this._getReusables(isScrollingDown);\n      if (isScrollingDown) {\n        this._physicalTop = reusables.physicalTop;\n        this._virtualStart += reusables.indexes.length;\n        this._physicalStart += reusables.indexes.length;\n      } else {\n        this._virtualStart -= reusables.indexes.length;\n        this._physicalStart -= reusables.indexes.length;\n      }\n      this._update(reusables.indexes, isScrollingDown ? null : reusables.indexes);\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, 0), _async_js__WEBPACK_IMPORTED_MODULE_0__.microTask);\n    }\n  },\n  /**\n   * Returns an object that contains the indexes of the physical items\n   * that might be reused and the physicalTop.\n   *\n   * @param {boolean} fromTop If the potential reusable items are above the scrolling region.\n   */\n  _getReusables(fromTop) {\n    let ith, offsetContent, physicalItemHeight;\n    const idxs = [];\n    const protectedOffsetContent = this._hiddenContentSize * this._ratio;\n    const virtualStart = this._virtualStart;\n    const virtualEnd = this._virtualEnd;\n    const physicalCount = this._physicalCount;\n    let top = this._physicalTop + this._scrollOffset;\n    const bottom = this._physicalBottom + this._scrollOffset;\n    // This may be called outside of a scrollHandler, so use last cached position\n    const scrollTop = this._scrollPosition;\n    const scrollBottom = this._scrollBottom;\n    if (fromTop) {\n      ith = this._physicalStart;\n      offsetContent = scrollTop - top;\n    } else {\n      ith = this._physicalEnd;\n      offsetContent = bottom - scrollBottom;\n    }\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      physicalItemHeight = this._getPhysicalSizeIncrement(ith);\n      offsetContent -= physicalItemHeight;\n      if (idxs.length >= physicalCount || offsetContent <= protectedOffsetContent) {\n        break;\n      }\n      if (fromTop) {\n        // Check that index is within the valid range.\n        if (virtualEnd + idxs.length + 1 >= this._virtualCount) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + physicalItemHeight >= scrollTop - this._scrollOffset) {\n          break;\n        }\n        idxs.push(ith);\n        top += physicalItemHeight;\n        ith = (ith + 1) % physicalCount;\n      } else {\n        // Check that index is within the valid range.\n        if (virtualStart - idxs.length <= 0) {\n          break;\n        }\n        // Check that the index is not visible.\n        if (top + this._physicalSize - physicalItemHeight <= scrollBottom) {\n          break;\n        }\n        idxs.push(ith);\n        top -= physicalItemHeight;\n        ith = ith === 0 ? physicalCount - 1 : ith - 1;\n      }\n    }\n    return {\n      indexes: idxs,\n      physicalTop: top - this._scrollOffset\n    };\n  },\n  /**\n   * Update the list of items, starting from the `_virtualStart` item.\n   * @param {!Array<number>=} itemSet\n   * @param {!Array<number>=} movingUp\n   */\n  _update(itemSet, movingUp) {\n    if (itemSet && itemSet.length === 0 || this._physicalCount === 0) {\n      return;\n    }\n    this._assignModels(itemSet);\n    this._updateMetrics(itemSet);\n    // Adjust offset after measuring.\n    if (movingUp) {\n      while (movingUp.length) {\n        const idx = movingUp.pop();\n        this._physicalTop -= this._getPhysicalSizeIncrement(idx);\n      }\n    }\n    this._positionItems();\n    this._updateScrollerSize();\n  },\n  _isClientFull() {\n    return this._scrollBottom !== 0 && this._physicalBottom - 1 >= this._scrollBottom && this._physicalTop <= this._scrollPosition;\n  },\n  /**\n   * Increases the pool size.\n   */\n  _increasePoolIfNeeded(count) {\n    const nextPhysicalCount = this._clamp(this._physicalCount + count, DEFAULT_PHYSICAL_COUNT, this._virtualCount - this._virtualStart);\n    const delta = nextPhysicalCount - this._physicalCount;\n    let nextIncrease = Math.round(this._physicalCount * 0.5);\n    if (delta < 0) {\n      return;\n    }\n    if (delta > 0) {\n      const ts = window.performance.now();\n      // Concat arrays in place.\n      [].push.apply(this._physicalItems, this._createPool(delta));\n      // Push 0s into physicalSizes. Can't use Array.fill because IE11 doesn't\n      // support it.\n      for (let i = 0; i < delta; i++) {\n        this._physicalSizes.push(0);\n      }\n      this._physicalCount += delta;\n      // Update the physical start if it needs to preserve the model of the\n      // focused item. In this situation, the focused item is currently rendered\n      // and its model would have changed after increasing the pool if the\n      // physical start remained unchanged.\n      if (this._physicalStart > this._physicalEnd && this._isIndexRendered(this._focusedVirtualIndex) && this._getPhysicalIndex(this._focusedVirtualIndex) < this._physicalEnd) {\n        this._physicalStart += delta;\n      }\n      this._update();\n      this._templateCost = (window.performance.now() - ts) / delta;\n      nextIncrease = Math.round(this._physicalCount * 0.5);\n    }\n    if (this._virtualEnd >= this._virtualCount - 1 || nextIncrease === 0) {\n      // Do nothing.\n    } else if (!this._isClientFull()) {\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, nextIncrease), _async_js__WEBPACK_IMPORTED_MODULE_0__.microTask);\n    } else if (this._physicalSize < this._optPhysicalSize) {\n      // Yield and increase the pool during idle time until the physical size is\n      // optimal.\n      this._debounce('_increasePoolIfNeeded', this._increasePoolIfNeeded.bind(this, this._clamp(Math.round(50 / this._templateCost), 1, nextIncrease)), _async_js__WEBPACK_IMPORTED_MODULE_0__.idlePeriod);\n    }\n  },\n  /**\n   * Renders the a new list.\n   */\n  _render() {\n    if (!this.isAttached || !this._isVisible) {\n      return;\n    }\n    if (this._physicalCount !== 0) {\n      const reusables = this._getReusables(true);\n      this._physicalTop = reusables.physicalTop;\n      this._virtualStart += reusables.indexes.length;\n      this._physicalStart += reusables.indexes.length;\n      this._update(reusables.indexes);\n      this._update();\n      this._increasePoolIfNeeded(0);\n    } else if (this._virtualCount > 0) {\n      // Initial render\n      this.updateViewportBoundaries();\n      this._increasePoolIfNeeded(DEFAULT_PHYSICAL_COUNT);\n    }\n  },\n  /**\n   * Called when the items have changed. That is, reassignments\n   * to `items`, splices or updates to a single item.\n   */\n  _itemsChanged(change) {\n    if (change.path === 'items') {\n      this._virtualStart = 0;\n      this._physicalTop = 0;\n      this._virtualCount = this.items ? this.items.length : 0;\n      this._physicalIndexForKey = {};\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      this._physicalCount = this._physicalCount || 0;\n      this._physicalItems = this._physicalItems || [];\n      this._physicalSizes = this._physicalSizes || [];\n      this._physicalStart = 0;\n      if (this._scrollTop > this._scrollOffset) {\n        this._resetScrollPosition(0);\n      }\n      this._debounce('_render', this._render, _async_js__WEBPACK_IMPORTED_MODULE_0__.animationFrame);\n    }\n  },\n  /**\n   * Executes a provided function per every physical index in `itemSet`\n   * `itemSet` default value is equivalent to the entire set of physical\n   * indexes.\n   *\n   * @param {!function(number, number)} fn\n   * @param {!Array<number>=} itemSet\n   */\n  _iterateItems(fn, itemSet) {\n    let pidx, vidx, rtn, i;\n    if (arguments.length === 2 && itemSet) {\n      for (i = 0; i < itemSet.length; i++) {\n        pidx = itemSet[i];\n        vidx = this._computeVidx(pidx);\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    } else {\n      pidx = this._physicalStart;\n      vidx = this._virtualStart;\n      for (; pidx < this._physicalCount; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n      for (pidx = 0; pidx < this._physicalStart; pidx++, vidx++) {\n        if ((rtn = fn.call(this, pidx, vidx)) != null) {\n          return rtn;\n        }\n      }\n    }\n  },\n  /**\n   * Returns the virtual index for a given physical index\n   *\n   * @param {number} pidx Physical index\n   * @return {number}\n   */\n  _computeVidx(pidx) {\n    if (pidx >= this._physicalStart) {\n      return this._virtualStart + (pidx - this._physicalStart);\n    }\n    return this._virtualStart + (this._physicalCount - this._physicalStart) + pidx;\n  },\n  /**\n   * Updates the position of the physical items.\n   */\n  _positionItems() {\n    this._adjustScrollPosition();\n    let y = this._physicalTop;\n    this._iterateItems(pidx => {\n      this.translate3d(0, `${y}px`, 0, this._physicalItems[pidx]);\n      y += this._physicalSizes[pidx];\n    });\n  },\n  _getPhysicalSizeIncrement(pidx) {\n    return this._physicalSizes[pidx];\n  },\n  /**\n   * Adjusts the scroll position when it was overestimated.\n   */\n  _adjustScrollPosition() {\n    const deltaHeight = this._virtualStart === 0 ? this._physicalTop : Math.min(this._scrollPosition + this._physicalTop, 0);\n    // Note: the delta can be positive or negative.\n    if (deltaHeight !== 0) {\n      this._physicalTop -= deltaHeight;\n      // This may be called outside of a scrollHandler, so use last cached position\n      const scrollTop = this._scrollPosition;\n      // Juking scroll position during interial scrolling on iOS is no bueno\n      if (!IOS_TOUCH_SCROLLING && scrollTop > 0) {\n        this._resetScrollPosition(scrollTop - deltaHeight);\n      }\n    }\n  },\n  /**\n   * Sets the position of the scroll.\n   */\n  _resetScrollPosition(pos) {\n    if (this.scrollTarget && pos >= 0) {\n      this._scrollTop = pos;\n      this._scrollPosition = this._scrollTop;\n    }\n  },\n  /**\n   * Sets the scroll height, that's the height of the content,\n   *\n   * @param {boolean=} forceUpdate If true, updates the height no matter what.\n   */\n  _updateScrollerSize(forceUpdate) {\n    this._estScrollHeight = this._physicalBottom + Math.max(this._virtualCount - this._physicalCount - this._virtualStart, 0) * this._physicalAverage;\n    forceUpdate = forceUpdate || this._scrollHeight === 0;\n    forceUpdate = forceUpdate || this._scrollPosition >= this._estScrollHeight - this._physicalSize;\n    // Amortize height adjustment, so it won't trigger large repaints too often.\n    if (forceUpdate || Math.abs(this._estScrollHeight - this._scrollHeight) >= this._viewportHeight) {\n      this.$.items.style.height = `${this._estScrollHeight}px`;\n      this._scrollHeight = this._estScrollHeight;\n    }\n  },\n  /**\n   * Scroll to a specific index in the virtual list regardless\n   * of the physical items in the DOM tree.\n   *\n   * @method scrollToIndex\n   * @param {number} idx The index of the item\n   */\n  scrollToIndex(idx) {\n    if (typeof idx !== 'number' || idx < 0 || idx > this.items.length - 1) {\n      return;\n    }\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_1__.flush)();\n    // Items should have been rendered prior scrolling to an index.\n    if (this._physicalCount === 0) {\n      return;\n    }\n    idx = this._clamp(idx, 0, this._virtualCount - 1);\n    // Update the virtual start only when needed.\n    if (!this._isIndexRendered(idx) || idx >= this._maxVirtualStart) {\n      this._virtualStart = idx - 1;\n    }\n    this._assignModels();\n    this._updateMetrics();\n    // Estimate new physical offset.\n    this._physicalTop = this._virtualStart * this._physicalAverage;\n    let currentTopItem = this._physicalStart;\n    let currentVirtualItem = this._virtualStart;\n    let targetOffsetTop = 0;\n    const hiddenContentSize = this._hiddenContentSize;\n    // Scroll to the item as much as we can.\n    while (currentVirtualItem < idx && targetOffsetTop <= hiddenContentSize) {\n      targetOffsetTop += this._getPhysicalSizeIncrement(currentTopItem);\n      currentTopItem = (currentTopItem + 1) % this._physicalCount;\n      currentVirtualItem += 1;\n    }\n    this._updateScrollerSize(true);\n    this._positionItems();\n    this._resetScrollPosition(this._physicalTop + this._scrollOffset + targetOffsetTop);\n    this._increasePoolIfNeeded(0);\n    // Clear cached visible index.\n    this._firstVisibleIndexVal = null;\n    this._lastVisibleIndexVal = null;\n  },\n  /**\n   * Reset the physical average and the average count.\n   */\n  _resetAverage() {\n    this._physicalAverage = 0;\n    this._physicalAverageCount = 0;\n  },\n  /**\n   * A handler for the `iron-resize` event triggered by `IronResizableBehavior`\n   * when the element is resized.\n   */\n  _resizeHandler() {\n    this._debounce('_render', () => {\n      // Clear cached visible index.\n      this._firstVisibleIndexVal = null;\n      this._lastVisibleIndexVal = null;\n      if (this._isVisible) {\n        this.updateViewportBoundaries();\n        // Reinstall the scroll event listener.\n        this.toggleScrollListener(true);\n        this._resetAverage();\n        this._render();\n      } else {\n        // Uninstall the scroll event listener.\n        this.toggleScrollListener(false);\n      }\n    }, _async_js__WEBPACK_IMPORTED_MODULE_0__.animationFrame);\n  },\n  _isIndexRendered(idx) {\n    return idx >= this._virtualStart && idx <= this._virtualEnd;\n  },\n  _getPhysicalIndex(vidx) {\n    return (this._physicalStart + (vidx - this._virtualStart)) % this._physicalCount;\n  },\n  _clamp(v, min, max) {\n    return Math.min(max, Math.max(min, v));\n  },\n  _debounce(name, cb, asyncModule) {\n    this._debouncers = this._debouncers || {};\n    this._debouncers[name] = _debounce_js__WEBPACK_IMPORTED_MODULE_1__.Debouncer.debounce(this._debouncers[name], asyncModule, cb.bind(this));\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_1__.enqueueDebouncer)(this._debouncers[name]);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/iron-list-core.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/keyboard-mixin.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/keyboard-mixin.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"KeyboardMixin\": () => (/* binding */ KeyboardMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * A mixin that manages keyboard handling.\n * The mixin subscribes to the keyboard events while an actual implementation\n * for the event handlers is left to the client (a component or another mixin).\n *\n * @polymerMixin\n */\nconst KeyboardMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superclass => class KeyboardMixinClass extends superclass {\n  /** @protected */\n  ready() {\n    super.ready();\n    this.addEventListener('keydown', event => {\n      this._onKeyDown(event);\n    });\n    this.addEventListener('keyup', event => {\n      this._onKeyUp(event);\n    });\n  }\n\n  /**\n   * A handler for the `keydown` event. By default, it calls\n   * separate methods for handling \"Enter\" and \"Escape\" keys.\n   * Override the method to implement your own behavior.\n   *\n   * @param {KeyboardEvent} event\n   * @protected\n   */\n  _onKeyDown(event) {\n    switch (event.key) {\n      case 'Enter':\n        this._onEnter(event);\n        break;\n      case 'Escape':\n        this._onEscape(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * A handler for the `keyup` event. By default, it does nothing.\n   * Override the method to implement your own behavior.\n   *\n   * @param {KeyboardEvent} _event\n   * @protected\n   */\n  _onKeyUp(_event) {\n    // To be implemented.\n  }\n\n  /**\n   * A handler for the \"Enter\" key. By default, it does nothing.\n   * Override the method to implement your own behavior.\n   *\n   * @param {KeyboardEvent} _event\n   * @protected\n   */\n  _onEnter(_event) {\n    // To be implemented.\n  }\n\n  /**\n   * A handler for the \"Escape\" key. By default, it does nothing.\n   * Override the method to implement your own behavior.\n   *\n   * @param {KeyboardEvent} _event\n   * @protected\n   */\n  _onEscape(_event) {\n    // To be implemented.\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMva2V5Ym9hcmQtbWl4aW4uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMva2V5Ym9hcmQtbWl4aW4uanM/MzA2MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjEgLSAyMDIyIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCB7IGRlZHVwaW5nTWl4aW4gfSBmcm9tICdAcG9seW1lci9wb2x5bWVyL2xpYi91dGlscy9taXhpbi5qcyc7XG5cbi8qKlxuICogQSBtaXhpbiB0aGF0IG1hbmFnZXMga2V5Ym9hcmQgaGFuZGxpbmcuXG4gKiBUaGUgbWl4aW4gc3Vic2NyaWJlcyB0byB0aGUga2V5Ym9hcmQgZXZlbnRzIHdoaWxlIGFuIGFjdHVhbCBpbXBsZW1lbnRhdGlvblxuICogZm9yIHRoZSBldmVudCBoYW5kbGVycyBpcyBsZWZ0IHRvIHRoZSBjbGllbnQgKGEgY29tcG9uZW50IG9yIGFub3RoZXIgbWl4aW4pLlxuICpcbiAqIEBwb2x5bWVyTWl4aW5cbiAqL1xuZXhwb3J0IGNvbnN0IEtleWJvYXJkTWl4aW4gPSBkZWR1cGluZ01peGluKFxuICAoc3VwZXJjbGFzcykgPT5cbiAgICBjbGFzcyBLZXlib2FyZE1peGluQ2xhc3MgZXh0ZW5kcyBzdXBlcmNsYXNzIHtcbiAgICAgIC8qKiBAcHJvdGVjdGVkICovXG4gICAgICByZWFkeSgpIHtcbiAgICAgICAgc3VwZXIucmVhZHkoKTtcblxuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICB0aGlzLl9vbktleURvd24oZXZlbnQpO1xuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgKGV2ZW50KSA9PiB7XG4gICAgICAgICAgdGhpcy5fb25LZXlVcChldmVudCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEEgaGFuZGxlciBmb3IgdGhlIGBrZXlkb3duYCBldmVudC4gQnkgZGVmYXVsdCwgaXQgY2FsbHNcbiAgICAgICAqIHNlcGFyYXRlIG1ldGhvZHMgZm9yIGhhbmRsaW5nIFwiRW50ZXJcIiBhbmQgXCJFc2NhcGVcIiBrZXlzLlxuICAgICAgICogT3ZlcnJpZGUgdGhlIG1ldGhvZCB0byBpbXBsZW1lbnQgeW91ciBvd24gYmVoYXZpb3IuXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtLZXlib2FyZEV2ZW50fSBldmVudFxuICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICovXG4gICAgICBfb25LZXlEb3duKGV2ZW50KSB7XG4gICAgICAgIHN3aXRjaCAoZXZlbnQua2V5KSB7XG4gICAgICAgICAgY2FzZSAnRW50ZXInOlxuICAgICAgICAgICAgdGhpcy5fb25FbnRlcihldmVudCk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBjYXNlICdFc2NhcGUnOlxuICAgICAgICAgICAgdGhpcy5fb25Fc2NhcGUoZXZlbnQpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8qKlxuICAgICAgICogQSBoYW5kbGVyIGZvciB0aGUgYGtleXVwYCBldmVudC4gQnkgZGVmYXVsdCwgaXQgZG9lcyBub3RoaW5nLlxuICAgICAgICogT3ZlcnJpZGUgdGhlIG1ldGhvZCB0byBpbXBsZW1lbnQgeW91ciBvd24gYmVoYXZpb3IuXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtLZXlib2FyZEV2ZW50fSBfZXZlbnRcbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgX29uS2V5VXAoX2V2ZW50KSB7XG4gICAgICAgIC8vIFRvIGJlIGltcGxlbWVudGVkLlxuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEEgaGFuZGxlciBmb3IgdGhlIFwiRW50ZXJcIiBrZXkuIEJ5IGRlZmF1bHQsIGl0IGRvZXMgbm90aGluZy5cbiAgICAgICAqIE92ZXJyaWRlIHRoZSBtZXRob2QgdG8gaW1wbGVtZW50IHlvdXIgb3duIGJlaGF2aW9yLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7S2V5Ym9hcmRFdmVudH0gX2V2ZW50XG4gICAgICAgKiBAcHJvdGVjdGVkXG4gICAgICAgKi9cbiAgICAgIF9vbkVudGVyKF9ldmVudCkge1xuICAgICAgICAvLyBUbyBiZSBpbXBsZW1lbnRlZC5cbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBBIGhhbmRsZXIgZm9yIHRoZSBcIkVzY2FwZVwiIGtleS4gQnkgZGVmYXVsdCwgaXQgZG9lcyBub3RoaW5nLlxuICAgICAgICogT3ZlcnJpZGUgdGhlIG1ldGhvZCB0byBpbXBsZW1lbnQgeW91ciBvd24gYmVoYXZpb3IuXG4gICAgICAgKlxuICAgICAgICogQHBhcmFtIHtLZXlib2FyZEV2ZW50fSBfZXZlbnRcbiAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAqL1xuICAgICAgX29uRXNjYXBlKF9ldmVudCkge1xuICAgICAgICAvLyBUbyBiZSBpbXBsZW1lbnRlZC5cbiAgICAgIH1cbiAgICB9LFxuKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/keyboard-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/templates.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/templates.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"processTemplates\": () => (/* binding */ processTemplates)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Passes the component to the template renderer callback if the template renderer is imported.\n * Otherwise, if there is a template, it warns that the template renderer needs to be imported.\n *\n * @param {HTMLElement} component\n */\nfunction processTemplates(component) {\n  if (window.Vaadin && window.Vaadin.templateRendererCallback) {\n    window.Vaadin.templateRendererCallback(component);\n    return;\n  }\n  if (component.querySelector('template')) {\n    console.warn(`WARNING: <template> inside <${component.localName}> is no longer supported. Import @vaadin/polymer-legacy-adapter/template-renderer.js to enable compatibility.`);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvdGVtcGxhdGVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBR0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvdGVtcGxhdGVzLmpzPzhlN2MiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gMjAyMiBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5cbi8qKlxuICogUGFzc2VzIHRoZSBjb21wb25lbnQgdG8gdGhlIHRlbXBsYXRlIHJlbmRlcmVyIGNhbGxiYWNrIGlmIHRoZSB0ZW1wbGF0ZSByZW5kZXJlciBpcyBpbXBvcnRlZC5cbiAqIE90aGVyd2lzZSwgaWYgdGhlcmUgaXMgYSB0ZW1wbGF0ZSwgaXQgd2FybnMgdGhhdCB0aGUgdGVtcGxhdGUgcmVuZGVyZXIgbmVlZHMgdG8gYmUgaW1wb3J0ZWQuXG4gKlxuICogQHBhcmFtIHtIVE1MRWxlbWVudH0gY29tcG9uZW50XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcm9jZXNzVGVtcGxhdGVzKGNvbXBvbmVudCkge1xuICBpZiAod2luZG93LlZhYWRpbiAmJiB3aW5kb3cuVmFhZGluLnRlbXBsYXRlUmVuZGVyZXJDYWxsYmFjaykge1xuICAgIHdpbmRvdy5WYWFkaW4udGVtcGxhdGVSZW5kZXJlckNhbGxiYWNrKGNvbXBvbmVudCk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGNvbXBvbmVudC5xdWVyeVNlbGVjdG9yKCd0ZW1wbGF0ZScpKSB7XG4gICAgY29uc29sZS53YXJuKFxuICAgICAgYFdBUk5JTkc6IDx0ZW1wbGF0ZT4gaW5zaWRlIDwke2NvbXBvbmVudC5sb2NhbE5hbWV9PiBpcyBubyBsb25nZXIgc3VwcG9ydGVkLiBJbXBvcnQgQHZhYWRpbi9wb2x5bWVyLWxlZ2FjeS1hZGFwdGVyL3RlbXBsYXRlLXJlbmRlcmVyLmpzIHRvIGVuYWJsZSBjb21wYXRpYmlsaXR5LmAsXG4gICAgKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/templates.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/unique-id-utils.js":
/*!********************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/unique-id-utils.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"generateUniqueId\": () => (/* binding */ generateUniqueId),\n/* harmony export */   \"resetUniqueId\": () => (/* binding */ resetUniqueId)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nlet uniqueId = 0;\n\n/**\n * Resets the unique id counter.\n *\n * @return {void}\n */\nfunction resetUniqueId() {\n  uniqueId = 0;\n}\n\n/**\n * Returns a unique integer id.\n *\n * @return {number}\n */\nfunction generateUniqueId() {\n  // eslint-disable-next-line no-plusplus\n  return uniqueId++;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvdW5pcXVlLWlkLXV0aWxzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvdW5pcXVlLWlkLXV0aWxzLmpzPzU5OGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gMjAyMiBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5cbmxldCB1bmlxdWVJZCA9IDA7XG5cbi8qKlxuICogUmVzZXRzIHRoZSB1bmlxdWUgaWQgY291bnRlci5cbiAqXG4gKiBAcmV0dXJuIHt2b2lkfVxuICovXG5leHBvcnQgZnVuY3Rpb24gcmVzZXRVbmlxdWVJZCgpIHtcbiAgdW5pcXVlSWQgPSAwO1xufVxuXG4vKipcbiAqIFJldHVybnMgYSB1bmlxdWUgaW50ZWdlciBpZC5cbiAqXG4gKiBAcmV0dXJuIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZVVuaXF1ZUlkKCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGx1c3BsdXNcbiAgcmV0dXJuIHVuaXF1ZUlkKys7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/unique-id-utils.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/virtualizer-iron-list-adapter.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/virtualizer-iron-list-adapter.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IronListAdapter\": () => (/* binding */ IronListAdapter)\n/* harmony export */ });\n/* harmony import */ var _async_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async.js */ \"./node_modules/@vaadin/component-base/src/async.js\");\n/* harmony import */ var _browser_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./browser-utils.js */ \"./node_modules/@vaadin/component-base/src/browser-utils.js\");\n/* harmony import */ var _debounce_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./debounce.js */ \"./node_modules/@vaadin/component-base/src/debounce.js\");\n/* harmony import */ var _iron_list_core_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./iron-list-core.js */ \"./node_modules/@vaadin/component-base/src/iron-list-core.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n// Iron-list can by default handle sizes up to around 100000.\n// When the size is larger than MAX_VIRTUAL_COUNT _vidxOffset is used\nconst MAX_VIRTUAL_COUNT = 100000;\nconst OFFSET_ADJUST_MIN_THRESHOLD = 1000;\nclass IronListAdapter {\n  constructor({\n    createElements,\n    updateElement,\n    scrollTarget,\n    scrollContainer,\n    elementsContainer,\n    reorderElements\n  }) {\n    this.isAttached = true;\n    this._vidxOffset = 0;\n    this.createElements = createElements;\n    this.updateElement = updateElement;\n    this.scrollTarget = scrollTarget;\n    this.scrollContainer = scrollContainer;\n    this.elementsContainer = elementsContainer || scrollContainer;\n    this.reorderElements = reorderElements;\n    // Iron-list uses this value to determine how many pages of elements to render\n    this._maxPages = 1.3;\n\n    // Placeholder height (used for sizing elements that have intrinsic 0 height after update)\n    this.__placeholderHeight = 200;\n    // A queue of 10 previous element heights\n    this.__elementHeightQueue = Array(10);\n    this.timeouts = {\n      SCROLL_REORDER: 500,\n      IGNORE_WHEEL: 500,\n      FIX_INVALID_ITEM_POSITIONING: 100\n    };\n    this.__resizeObserver = new ResizeObserver(() => this._resizeHandler());\n    if (getComputedStyle(this.scrollTarget).overflow === 'visible') {\n      this.scrollTarget.style.overflow = 'auto';\n    }\n    if (getComputedStyle(this.scrollContainer).position === 'static') {\n      this.scrollContainer.style.position = 'relative';\n    }\n    this.__resizeObserver.observe(this.scrollTarget);\n    this.scrollTarget.addEventListener('scroll', () => this._scrollHandler());\n    this._scrollLineHeight = this._getScrollLineHeight();\n    this.scrollTarget.addEventListener('wheel', e => this.__onWheel(e));\n    if (this.reorderElements) {\n      // Reordering the physical elements cancels the user's grab of the scroll bar handle on Safari.\n      // Need to defer reordering until the user lets go of the scroll bar handle.\n      this.scrollTarget.addEventListener('mousedown', () => {\n        this.__mouseDown = true;\n      });\n      this.scrollTarget.addEventListener('mouseup', () => {\n        this.__mouseDown = false;\n        if (this.__pendingReorder) {\n          this.__reorderElements();\n        }\n      });\n    }\n  }\n  get scrollOffset() {\n    return 0;\n  }\n  get adjustedFirstVisibleIndex() {\n    return this.firstVisibleIndex + this._vidxOffset;\n  }\n  get adjustedLastVisibleIndex() {\n    return this.lastVisibleIndex + this._vidxOffset;\n  }\n  scrollToIndex(index) {\n    if (typeof index !== 'number' || isNaN(index) || this.size === 0 || !this.scrollTarget.offsetHeight) {\n      return;\n    }\n    index = this._clamp(index, 0, this.size - 1);\n    const visibleElementCount = this.__getVisibleElements().length;\n    let targetVirtualIndex = Math.floor(index / this.size * this._virtualCount);\n    if (this._virtualCount - targetVirtualIndex < visibleElementCount) {\n      targetVirtualIndex = this._virtualCount - (this.size - index);\n      this._vidxOffset = this.size - this._virtualCount;\n    } else if (targetVirtualIndex < visibleElementCount) {\n      if (index < OFFSET_ADJUST_MIN_THRESHOLD) {\n        targetVirtualIndex = index;\n        this._vidxOffset = 0;\n      } else {\n        targetVirtualIndex = OFFSET_ADJUST_MIN_THRESHOLD;\n        this._vidxOffset = index - targetVirtualIndex;\n      }\n    } else {\n      this._vidxOffset = index - targetVirtualIndex;\n    }\n    this.__skipNextVirtualIndexAdjust = true;\n    super.scrollToIndex(targetVirtualIndex);\n    if (this.adjustedFirstVisibleIndex !== index && this._scrollTop < this._maxScrollTop && !this.grid) {\n      // Workaround an iron-list issue by manually adjusting the scroll position\n      this._scrollTop -= this.__getIndexScrollOffset(index) || 0;\n    }\n    this._scrollHandler();\n  }\n  flush() {\n    // The scroll target is hidden.\n    if (this.scrollTarget.offsetHeight === 0) {\n      return;\n    }\n    this._resizeHandler();\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_2__.flush)();\n    this._scrollHandler();\n    if (this.__fixInvalidItemPositioningDebouncer) {\n      this.__fixInvalidItemPositioningDebouncer.flush();\n    }\n    if (this.__scrollReorderDebouncer) {\n      this.__scrollReorderDebouncer.flush();\n    }\n    if (this.__debouncerWheelAnimationFrame) {\n      this.__debouncerWheelAnimationFrame.flush();\n    }\n  }\n  update(startIndex = 0, endIndex = this.size - 1) {\n    this.__getVisibleElements().forEach(el => {\n      if (el.__virtualIndex >= startIndex && el.__virtualIndex <= endIndex) {\n        this.__updateElement(el, el.__virtualIndex, true);\n      }\n    });\n  }\n\n  /**\n   * Updates the height for a given set of items.\n   *\n   * @param {!Array<number>=} itemSet\n   */\n  _updateMetrics(itemSet) {\n    // Make sure we distributed all the physical items\n    // so we can measure them.\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_2__.flush)();\n    let newPhysicalSize = 0;\n    let oldPhysicalSize = 0;\n    const prevAvgCount = this._physicalAverageCount;\n    const prevPhysicalAvg = this._physicalAverage;\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    this._iterateItems((pidx, vidx) => {\n      oldPhysicalSize += this._physicalSizes[pidx];\n      this._physicalSizes[pidx] = Math.ceil(this.__getBorderBoxHeight(this._physicalItems[pidx]));\n      newPhysicalSize += this._physicalSizes[pidx];\n      this._physicalAverageCount += this._physicalSizes[pidx] ? 1 : 0;\n    }, itemSet);\n    this._physicalSize = this._physicalSize + newPhysicalSize - oldPhysicalSize;\n\n    // Update the average if it measured something.\n    if (this._physicalAverageCount !== prevAvgCount) {\n      this._physicalAverage = Math.round((prevPhysicalAvg * prevAvgCount + newPhysicalSize) / this._physicalAverageCount);\n    }\n  }\n  __getBorderBoxHeight(el) {\n    const style = getComputedStyle(el);\n    const itemHeight = parseFloat(style.height) || 0;\n    if (style.boxSizing === 'border-box') {\n      return itemHeight;\n    }\n    const paddingBottom = parseFloat(style.paddingBottom) || 0;\n    const paddingTop = parseFloat(style.paddingTop) || 0;\n    const borderBottomWidth = parseFloat(style.borderBottomWidth) || 0;\n    const borderTopWidth = parseFloat(style.borderTopWidth) || 0;\n    return itemHeight + paddingBottom + paddingTop + borderBottomWidth + borderTopWidth;\n  }\n  __updateElement(el, index, forceSameIndexUpdates) {\n    // Clean up temporary placeholder sizing\n    if (el.style.paddingTop) {\n      el.style.paddingTop = '';\n    }\n    if (!this.__preventElementUpdates && (el.__lastUpdatedIndex !== index || forceSameIndexUpdates)) {\n      this.updateElement(el, index);\n      el.__lastUpdatedIndex = index;\n    }\n    const elementHeight = el.offsetHeight;\n    if (elementHeight === 0) {\n      // If the elements have 0 height after update (for example due to lazy rendering),\n      // it results in iron-list requesting to create an unlimited count of elements.\n      // Assign a temporary placeholder sizing to elements that would otherwise end up having\n      // no height.\n      el.style.paddingTop = `${this.__placeholderHeight}px`;\n\n      // Manually schedule the resize handler to make sure the placeholder padding is\n      // cleared in case the resize observer never triggers.\n      requestAnimationFrame(() => this._resizeHandler());\n    } else {\n      // Add element height to the queue\n      this.__elementHeightQueue.push(elementHeight);\n      this.__elementHeightQueue.shift();\n\n      // Calcualte new placeholder height based on the average of the defined values in the\n      // element height queue\n      const filteredHeights = this.__elementHeightQueue.filter(h => h !== undefined);\n      this.__placeholderHeight = Math.round(filteredHeights.reduce((a, b) => a + b, 0) / filteredHeights.length);\n    }\n  }\n  __getIndexScrollOffset(index) {\n    const element = this.__getVisibleElements().find(el => el.__virtualIndex === index);\n    return element ? this.scrollTarget.getBoundingClientRect().top - element.getBoundingClientRect().top : undefined;\n  }\n  get size() {\n    return this.__size;\n  }\n  set size(size) {\n    if (size === this.size) {\n      return;\n    }\n    // Cancel active debouncers\n    if (this.__fixInvalidItemPositioningDebouncer) {\n      this.__fixInvalidItemPositioningDebouncer.cancel();\n    }\n    if (this._debouncers && this._debouncers._increasePoolIfNeeded) {\n      // Avoid creating unnecessary elements on the following flush()\n      this._debouncers._increasePoolIfNeeded.cancel();\n    }\n\n    // Prevent element update while the scroll position is being restored\n    this.__preventElementUpdates = true;\n\n    // Record the scroll position before changing the size\n    let fvi; // First visible index\n    let fviOffsetBefore; // Scroll offset of the first visible index\n    if (size > 0) {\n      fvi = this.adjustedFirstVisibleIndex;\n      fviOffsetBefore = this.__getIndexScrollOffset(fvi);\n    }\n\n    // Change the size\n    this.__size = size;\n    this._itemsChanged({\n      path: 'items'\n    });\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_2__.flush)();\n\n    // Try to restore the scroll position if the new size is larger than 0\n    if (size > 0) {\n      fvi = Math.min(fvi, size - 1);\n      this.scrollToIndex(fvi);\n      const fviOffsetAfter = this.__getIndexScrollOffset(fvi);\n      if (fviOffsetBefore !== undefined && fviOffsetAfter !== undefined) {\n        this._scrollTop += fviOffsetBefore - fviOffsetAfter;\n      }\n    }\n    if (!this.elementsContainer.children.length) {\n      requestAnimationFrame(() => this._resizeHandler());\n    }\n    this.__preventElementUpdates = false;\n    // Schedule and flush a resize handler\n    this._resizeHandler();\n    (0,_debounce_js__WEBPACK_IMPORTED_MODULE_2__.flush)();\n  }\n\n  /** @private */\n  get _scrollTop() {\n    return this.scrollTarget.scrollTop;\n  }\n\n  /** @private */\n  set _scrollTop(top) {\n    this.scrollTarget.scrollTop = top;\n  }\n\n  /** @private */\n  get items() {\n    return {\n      length: Math.min(this.size, MAX_VIRTUAL_COUNT)\n    };\n  }\n\n  /** @private */\n  get offsetHeight() {\n    return this.scrollTarget.offsetHeight;\n  }\n\n  /** @private */\n  get $() {\n    return {\n      items: this.scrollContainer\n    };\n  }\n\n  /** @private */\n  updateViewportBoundaries() {\n    const styles = window.getComputedStyle(this.scrollTarget);\n    this._scrollerPaddingTop = this.scrollTarget === this ? 0 : parseInt(styles['padding-top'], 10);\n    this._isRTL = Boolean(styles.direction === 'rtl');\n    this._viewportWidth = this.elementsContainer.offsetWidth;\n    this._viewportHeight = this.scrollTarget.offsetHeight;\n    this._scrollPageHeight = this._viewportHeight - this._scrollLineHeight;\n    if (this.grid) {\n      this._updateGridMetrics();\n    }\n  }\n\n  /** @private */\n  setAttribute() {}\n\n  /** @private */\n  _createPool(size) {\n    const physicalItems = this.createElements(size);\n    const fragment = document.createDocumentFragment();\n    physicalItems.forEach(el => {\n      el.style.position = 'absolute';\n      fragment.appendChild(el);\n      this.__resizeObserver.observe(el);\n    });\n    this.elementsContainer.appendChild(fragment);\n    return physicalItems;\n  }\n\n  /** @private */\n  _assignModels(itemSet) {\n    this._iterateItems((pidx, vidx) => {\n      const el = this._physicalItems[pidx];\n      el.hidden = vidx >= this.size;\n      if (!el.hidden) {\n        el.__virtualIndex = vidx + (this._vidxOffset || 0);\n        this.__updateElement(el, el.__virtualIndex);\n      } else {\n        delete el.__lastUpdatedIndex;\n      }\n    }, itemSet);\n  }\n\n  /** @private */\n  _isClientFull() {\n    // Workaround an issue in iron-list that can cause it to freeze on fast scroll\n    setTimeout(() => {\n      this.__clientFull = true;\n    });\n    return this.__clientFull || super._isClientFull();\n  }\n\n  /** @private */\n  translate3d(_x, y, _z, el) {\n    el.style.transform = `translateY(${y})`;\n  }\n\n  /** @private */\n  toggleScrollListener() {}\n  _scrollHandler() {\n    this._adjustVirtualIndexOffset(this._scrollTop - (this.__previousScrollTop || 0));\n    const delta = this.scrollTarget.scrollTop - this._scrollPosition;\n    super._scrollHandler();\n    if (this._physicalCount !== 0) {\n      const isScrollingDown = delta >= 0;\n      const reusables = this._getReusables(!isScrollingDown);\n      if (reusables.indexes.length) {\n        // After running super._scrollHandler, fix internal properties to workaround an iron-list issue.\n        // See https://github.com/vaadin/web-components/issues/1691\n        this._physicalTop = reusables.physicalTop;\n        if (isScrollingDown) {\n          this._virtualStart -= reusables.indexes.length;\n          this._physicalStart -= reusables.indexes.length;\n        } else {\n          this._virtualStart += reusables.indexes.length;\n          this._physicalStart += reusables.indexes.length;\n        }\n        this._resizeHandler();\n      }\n    }\n    if (delta) {\n      // There was a change in scroll top. Schedule a check for invalid item positioning.\n      this.__fixInvalidItemPositioningDebouncer = _debounce_js__WEBPACK_IMPORTED_MODULE_2__.Debouncer.debounce(this.__fixInvalidItemPositioningDebouncer, _async_js__WEBPACK_IMPORTED_MODULE_0__.timeOut.after(this.timeouts.FIX_INVALID_ITEM_POSITIONING), () => this.__fixInvalidItemPositioning());\n    }\n    if (this.reorderElements) {\n      this.__scrollReorderDebouncer = _debounce_js__WEBPACK_IMPORTED_MODULE_2__.Debouncer.debounce(this.__scrollReorderDebouncer, _async_js__WEBPACK_IMPORTED_MODULE_0__.timeOut.after(this.timeouts.SCROLL_REORDER), () => this.__reorderElements());\n    }\n    this.__previousScrollTop = this._scrollTop;\n\n    // If the first visible index is not 0 when scrolled to the top,\n    // scroll to index 0 to fix the issue.\n    if (this._scrollTop === 0 && this.firstVisibleIndex !== 0 && Math.abs(delta) > 0) {\n      this.scrollToIndex(0);\n    }\n  }\n\n  /**\n   * Work around an iron-list issue with invalid item positioning.\n   * See https://github.com/vaadin/flow-components/issues/4306\n   * @private\n   */\n  __fixInvalidItemPositioning() {\n    if (!this.scrollTarget.isConnected) {\n      return;\n    }\n\n    // Check if the first physical item element is below the top of the viewport\n    const physicalTopBelowTop = this._physicalTop > this._scrollTop;\n    // Check if the last physical item element is above the bottom of the viewport\n    const physicalBottomAboveBottom = this._physicalBottom < this._scrollBottom;\n\n    // Check if the first index is visible\n    const firstIndexVisible = this.adjustedFirstVisibleIndex === 0;\n    // Check if the last index is visible\n    const lastIndexVisible = this.adjustedLastVisibleIndex === this.size - 1;\n    if (physicalTopBelowTop && !firstIndexVisible || physicalBottomAboveBottom && !lastIndexVisible) {\n      // Invalid state! Try to recover.\n\n      const isScrollingDown = physicalBottomAboveBottom;\n      // Set the \"_ratio\" property temporarily to 0 to make iron-list's _getReusables\n      // place all the free physical items on one side of the viewport.\n      const originalRatio = this._ratio;\n      this._ratio = 0;\n      // Fake a scroll change to make _scrollHandler place the physical items\n      // on the desired side.\n      this._scrollPosition = this._scrollTop + (isScrollingDown ? -1 : 1);\n      this._scrollHandler();\n      // Restore the original \"_ratio\" value.\n      this._ratio = originalRatio;\n    }\n  }\n\n  /** @private */\n  __onWheel(e) {\n    if (e.ctrlKey || this._hasScrolledAncestor(e.target, e.deltaX, e.deltaY)) {\n      return;\n    }\n    let deltaY = e.deltaY;\n    if (e.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      // Scrolling by \"lines of text\" instead of pixels\n      deltaY *= this._scrollLineHeight;\n    } else if (e.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      // Scrolling by \"pages\" instead of pixels\n      deltaY *= this._scrollPageHeight;\n    }\n    this._deltaYAcc = this._deltaYAcc || 0;\n    if (this._wheelAnimationFrame) {\n      // Accumulate wheel delta while a frame is being processed\n      this._deltaYAcc += deltaY;\n      e.preventDefault();\n      return;\n    }\n    deltaY += this._deltaYAcc;\n    this._deltaYAcc = 0;\n    this._wheelAnimationFrame = true;\n    this.__debouncerWheelAnimationFrame = _debounce_js__WEBPACK_IMPORTED_MODULE_2__.Debouncer.debounce(this.__debouncerWheelAnimationFrame, _async_js__WEBPACK_IMPORTED_MODULE_0__.animationFrame, () => {\n      this._wheelAnimationFrame = false;\n    });\n    const momentum = Math.abs(e.deltaX) + Math.abs(deltaY);\n    if (this._canScroll(this.scrollTarget, e.deltaX, deltaY)) {\n      e.preventDefault();\n      this.scrollTarget.scrollTop += deltaY;\n      this.scrollTarget.scrollLeft += e.deltaX;\n      this._hasResidualMomentum = true;\n      this._ignoreNewWheel = true;\n      this._debouncerIgnoreNewWheel = _debounce_js__WEBPACK_IMPORTED_MODULE_2__.Debouncer.debounce(this._debouncerIgnoreNewWheel, _async_js__WEBPACK_IMPORTED_MODULE_0__.timeOut.after(this.timeouts.IGNORE_WHEEL), () => {\n        this._ignoreNewWheel = false;\n      });\n    } else if (this._hasResidualMomentum && momentum <= this._previousMomentum || this._ignoreNewWheel) {\n      e.preventDefault();\n    } else if (momentum > this._previousMomentum) {\n      this._hasResidualMomentum = false;\n    }\n    this._previousMomentum = momentum;\n  }\n\n  /**\n   * Determines if the element has an ancestor that handles the scroll delta prior to this\n   *\n   * @private\n   */\n  _hasScrolledAncestor(el, deltaX, deltaY) {\n    if (el === this.scrollTarget || el === this.scrollTarget.getRootNode().host) {\n      return false;\n    } else if (this._canScroll(el, deltaX, deltaY) && ['auto', 'scroll'].indexOf(getComputedStyle(el).overflow) !== -1) {\n      return true;\n    } else if (el !== this && el.parentElement) {\n      return this._hasScrolledAncestor(el.parentElement, deltaX, deltaY);\n    }\n  }\n  _canScroll(el, deltaX, deltaY) {\n    return deltaY > 0 && el.scrollTop < el.scrollHeight - el.offsetHeight || deltaY < 0 && el.scrollTop > 0 || deltaX > 0 && el.scrollLeft < el.scrollWidth - el.offsetWidth || deltaX < 0 && el.scrollLeft > 0;\n  }\n\n  /**\n   * @returns {Number|undefined} - The browser's default font-size in pixels\n   * @private\n   */\n  _getScrollLineHeight() {\n    const el = document.createElement('div');\n    el.style.fontSize = 'initial';\n    el.style.display = 'none';\n    document.body.appendChild(el);\n    const fontSize = window.getComputedStyle(el).fontSize;\n    document.body.removeChild(el);\n    return fontSize ? window.parseInt(fontSize) : undefined;\n  }\n  __getVisibleElements() {\n    return Array.from(this.elementsContainer.children).filter(element => !element.hidden);\n  }\n\n  /** @private */\n  __reorderElements() {\n    if (this.__mouseDown) {\n      this.__pendingReorder = true;\n      return;\n    }\n    this.__pendingReorder = false;\n    const adjustedVirtualStart = this._virtualStart + (this._vidxOffset || 0);\n\n    // Which row to use as a target?\n    const visibleElements = this.__getVisibleElements();\n    const elementWithFocus = visibleElements.find(element => element.contains(this.elementsContainer.getRootNode().activeElement) || element.contains(this.scrollTarget.getRootNode().activeElement));\n    const targetElement = elementWithFocus || visibleElements[0];\n    if (!targetElement) {\n      // All elements are hidden, don't reorder\n      return;\n    }\n\n    // Where the target row should be?\n    const targetPhysicalIndex = targetElement.__virtualIndex - adjustedVirtualStart;\n\n    // Reodrer the DOM elements to keep the target row at the target physical index\n    const delta = visibleElements.indexOf(targetElement) - targetPhysicalIndex;\n    if (delta > 0) {\n      for (let i = 0; i < delta; i++) {\n        this.elementsContainer.appendChild(visibleElements[i]);\n      }\n    } else if (delta < 0) {\n      for (let i = visibleElements.length + delta; i < visibleElements.length; i++) {\n        this.elementsContainer.insertBefore(visibleElements[i], visibleElements[0]);\n      }\n    }\n\n    // Due to a rendering bug, reordering the rows can make parts of the scroll target disappear\n    // on Safari when using sticky positioning in case the scroll target is inside a flexbox.\n    // This issue manifests with grid (the header can disappear if grid is used inside a flexbox)\n    if (_browser_utils_js__WEBPACK_IMPORTED_MODULE_1__.isSafari) {\n      const {\n        transform\n      } = this.scrollTarget.style;\n      this.scrollTarget.style.transform = 'translateZ(0)';\n      setTimeout(() => {\n        this.scrollTarget.style.transform = transform;\n      });\n    }\n  }\n\n  /** @private */\n  _adjustVirtualIndexOffset(delta) {\n    if (this._virtualCount >= this.size) {\n      this._vidxOffset = 0;\n    } else if (this.__skipNextVirtualIndexAdjust) {\n      this.__skipNextVirtualIndexAdjust = false;\n    } else if (Math.abs(delta) > 10000) {\n      // Process a large scroll position change\n      const scale = this._scrollTop / (this.scrollTarget.scrollHeight - this.scrollTarget.offsetHeight);\n      const offset = scale * this.size;\n      this._vidxOffset = Math.round(offset - scale * this._virtualCount);\n    } else {\n      // Make sure user can always swipe/wheel scroll to the start and end\n      const oldOffset = this._vidxOffset;\n      const threshold = OFFSET_ADJUST_MIN_THRESHOLD;\n      const maxShift = 100;\n\n      // Near start\n      if (this._scrollTop === 0) {\n        this._vidxOffset = 0;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(0);\n        }\n      } else if (this.firstVisibleIndex < threshold && this._vidxOffset > 0) {\n        this._vidxOffset -= Math.min(this._vidxOffset, maxShift);\n        super.scrollToIndex(this.firstVisibleIndex + (oldOffset - this._vidxOffset));\n      }\n\n      // Near end\n      const maxOffset = this.size - this._virtualCount;\n      if (this._scrollTop >= this._maxScrollTop && this._maxScrollTop > 0) {\n        this._vidxOffset = maxOffset;\n        if (oldOffset !== this._vidxOffset) {\n          super.scrollToIndex(this._virtualCount - 1);\n        }\n      } else if (this.firstVisibleIndex > this._virtualCount - threshold && this._vidxOffset < maxOffset) {\n        this._vidxOffset += Math.min(maxOffset - this._vidxOffset, maxShift);\n        super.scrollToIndex(this.firstVisibleIndex - (this._vidxOffset - oldOffset));\n      }\n    }\n  }\n}\nObject.setPrototypeOf(IronListAdapter.prototype, _iron_list_core_js__WEBPACK_IMPORTED_MODULE_3__.ironList);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/virtualizer-iron-list-adapter.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/component-base/src/virtualizer.js":
/*!****************************************************************!*\
  !*** ./node_modules/@vaadin/component-base/src/virtualizer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Virtualizer\": () => (/* binding */ Virtualizer)\n/* harmony export */ });\n/* harmony import */ var _virtualizer_iron_list_adapter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./virtualizer-iron-list-adapter.js */ \"./node_modules/@vaadin/component-base/src/virtualizer-iron-list-adapter.js\");\n\nclass Virtualizer {\n  /**\n   * @typedef {Object} VirtualizerConfig\n   * @property {Function} createElements Function that returns the given number of new elements\n   * @property {Function} updateElement Function that updates the element at a specific index\n   * @property {HTMLElement} scrollTarget Reference to the scrolling element\n   * @property {HTMLElement} scrollContainer Reference to a wrapper for the item elements (or a slot) inside the scrollTarget\n   * @property {HTMLElement | undefined} elementsContainer Reference to the container in which the item elements are placed, defaults to scrollContainer\n   * @property {boolean | undefined} reorderElements Determines whether the physical item elements should be kept in order in the DOM\n   * @param {VirtualizerConfig} config Configuration for the virtualizer\n   */\n  constructor(config) {\n    this.__adapter = new _virtualizer_iron_list_adapter_js__WEBPACK_IMPORTED_MODULE_0__.IronListAdapter(config);\n  }\n\n  /**\n   * The size of the virtualizer\n   * @return {number | undefined} The size of the virtualizer\n   */\n  get size() {\n    return this.__adapter.size;\n  }\n\n  /**\n   * The size of the virtualizer\n   * @param {number} size The size of the virtualizer\n   */\n  set size(size) {\n    this.__adapter.size = size;\n  }\n\n  /**\n   * Scroll to a specific index in the virtual list\n   *\n   * @method scrollToIndex\n   * @param {number} index The index of the item\n   */\n  scrollToIndex(index) {\n    this.__adapter.scrollToIndex(index);\n  }\n\n  /**\n   * Requests the virtualizer to re-render the item elements on an index range, if currently in the DOM\n   *\n   * @method update\n   * @param {number | undefined} startIndex The start index of the range\n   * @param {number | undefined} endIndex The end index of the range\n   */\n  update(startIndex = 0, endIndex = this.size - 1) {\n    this.__adapter.update(startIndex, endIndex);\n  }\n\n  /**\n   * Flushes active asynchronous tasks so that the component and the DOM end up in a stable state\n   *\n   * @method update\n   * @param {number | undefined} startIndex The start index of the range\n   * @param {number | undefined} endIndex The end index of the range\n   */\n  flush() {\n    this.__adapter.flush();\n  }\n\n  /**\n   * Gets the index of the first visible item in the viewport.\n   *\n   * @return {number}\n   */\n  get firstVisibleIndex() {\n    return this.__adapter.adjustedFirstVisibleIndex;\n  }\n\n  /**\n   * Gets the index of the last visible item in the viewport.\n   *\n   * @return {number}\n   */\n  get lastVisibleIndex() {\n    return this.__adapter.adjustedLastVisibleIndex;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9jb21wb25lbnQtYmFzZS9zcmMvdmlydHVhbGl6ZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL2NvbXBvbmVudC1iYXNlL3NyYy92aXJ0dWFsaXplci5qcz85ZmY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElyb25MaXN0QWRhcHRlciB9IGZyb20gJy4vdmlydHVhbGl6ZXItaXJvbi1saXN0LWFkYXB0ZXIuanMnO1xuXG5leHBvcnQgY2xhc3MgVmlydHVhbGl6ZXIge1xuICAvKipcbiAgICogQHR5cGVkZWYge09iamVjdH0gVmlydHVhbGl6ZXJDb25maWdcbiAgICogQHByb3BlcnR5IHtGdW5jdGlvbn0gY3JlYXRlRWxlbWVudHMgRnVuY3Rpb24gdGhhdCByZXR1cm5zIHRoZSBnaXZlbiBudW1iZXIgb2YgbmV3IGVsZW1lbnRzXG4gICAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259IHVwZGF0ZUVsZW1lbnQgRnVuY3Rpb24gdGhhdCB1cGRhdGVzIHRoZSBlbGVtZW50IGF0IGEgc3BlY2lmaWMgaW5kZXhcbiAgICogQHByb3BlcnR5IHtIVE1MRWxlbWVudH0gc2Nyb2xsVGFyZ2V0IFJlZmVyZW5jZSB0byB0aGUgc2Nyb2xsaW5nIGVsZW1lbnRcbiAgICogQHByb3BlcnR5IHtIVE1MRWxlbWVudH0gc2Nyb2xsQ29udGFpbmVyIFJlZmVyZW5jZSB0byBhIHdyYXBwZXIgZm9yIHRoZSBpdGVtIGVsZW1lbnRzIChvciBhIHNsb3QpIGluc2lkZSB0aGUgc2Nyb2xsVGFyZ2V0XG4gICAqIEBwcm9wZXJ0eSB7SFRNTEVsZW1lbnQgfCB1bmRlZmluZWR9IGVsZW1lbnRzQ29udGFpbmVyIFJlZmVyZW5jZSB0byB0aGUgY29udGFpbmVyIGluIHdoaWNoIHRoZSBpdGVtIGVsZW1lbnRzIGFyZSBwbGFjZWQsIGRlZmF1bHRzIHRvIHNjcm9sbENvbnRhaW5lclxuICAgKiBAcHJvcGVydHkge2Jvb2xlYW4gfCB1bmRlZmluZWR9IHJlb3JkZXJFbGVtZW50cyBEZXRlcm1pbmVzIHdoZXRoZXIgdGhlIHBoeXNpY2FsIGl0ZW0gZWxlbWVudHMgc2hvdWxkIGJlIGtlcHQgaW4gb3JkZXIgaW4gdGhlIERPTVxuICAgKiBAcGFyYW0ge1ZpcnR1YWxpemVyQ29uZmlnfSBjb25maWcgQ29uZmlndXJhdGlvbiBmb3IgdGhlIHZpcnR1YWxpemVyXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICB0aGlzLl9fYWRhcHRlciA9IG5ldyBJcm9uTGlzdEFkYXB0ZXIoY29uZmlnKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgc2l6ZSBvZiB0aGUgdmlydHVhbGl6ZXJcbiAgICogQHJldHVybiB7bnVtYmVyIHwgdW5kZWZpbmVkfSBUaGUgc2l6ZSBvZiB0aGUgdmlydHVhbGl6ZXJcbiAgICovXG4gIGdldCBzaXplKCkge1xuICAgIHJldHVybiB0aGlzLl9fYWRhcHRlci5zaXplO1xuICB9XG5cbiAgLyoqXG4gICAqIFRoZSBzaXplIG9mIHRoZSB2aXJ0dWFsaXplclxuICAgKiBAcGFyYW0ge251bWJlcn0gc2l6ZSBUaGUgc2l6ZSBvZiB0aGUgdmlydHVhbGl6ZXJcbiAgICovXG4gIHNldCBzaXplKHNpemUpIHtcbiAgICB0aGlzLl9fYWRhcHRlci5zaXplID0gc2l6ZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTY3JvbGwgdG8gYSBzcGVjaWZpYyBpbmRleCBpbiB0aGUgdmlydHVhbCBsaXN0XG4gICAqXG4gICAqIEBtZXRob2Qgc2Nyb2xsVG9JbmRleFxuICAgKiBAcGFyYW0ge251bWJlcn0gaW5kZXggVGhlIGluZGV4IG9mIHRoZSBpdGVtXG4gICAqL1xuICBzY3JvbGxUb0luZGV4KGluZGV4KSB7XG4gICAgdGhpcy5fX2FkYXB0ZXIuc2Nyb2xsVG9JbmRleChpbmRleCk7XG4gIH1cblxuICAvKipcbiAgICogUmVxdWVzdHMgdGhlIHZpcnR1YWxpemVyIHRvIHJlLXJlbmRlciB0aGUgaXRlbSBlbGVtZW50cyBvbiBhbiBpbmRleCByYW5nZSwgaWYgY3VycmVudGx5IGluIHRoZSBET01cbiAgICpcbiAgICogQG1ldGhvZCB1cGRhdGVcbiAgICogQHBhcmFtIHtudW1iZXIgfCB1bmRlZmluZWR9IHN0YXJ0SW5kZXggVGhlIHN0YXJ0IGluZGV4IG9mIHRoZSByYW5nZVxuICAgKiBAcGFyYW0ge251bWJlciB8IHVuZGVmaW5lZH0gZW5kSW5kZXggVGhlIGVuZCBpbmRleCBvZiB0aGUgcmFuZ2VcbiAgICovXG4gIHVwZGF0ZShzdGFydEluZGV4ID0gMCwgZW5kSW5kZXggPSB0aGlzLnNpemUgLSAxKSB7XG4gICAgdGhpcy5fX2FkYXB0ZXIudXBkYXRlKHN0YXJ0SW5kZXgsIGVuZEluZGV4KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBGbHVzaGVzIGFjdGl2ZSBhc3luY2hyb25vdXMgdGFza3Mgc28gdGhhdCB0aGUgY29tcG9uZW50IGFuZCB0aGUgRE9NIGVuZCB1cCBpbiBhIHN0YWJsZSBzdGF0ZVxuICAgKlxuICAgKiBAbWV0aG9kIHVwZGF0ZVxuICAgKiBAcGFyYW0ge251bWJlciB8IHVuZGVmaW5lZH0gc3RhcnRJbmRleCBUaGUgc3RhcnQgaW5kZXggb2YgdGhlIHJhbmdlXG4gICAqIEBwYXJhbSB7bnVtYmVyIHwgdW5kZWZpbmVkfSBlbmRJbmRleCBUaGUgZW5kIGluZGV4IG9mIHRoZSByYW5nZVxuICAgKi9cbiAgZmx1c2goKSB7XG4gICAgdGhpcy5fX2FkYXB0ZXIuZmx1c2goKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXRzIHRoZSBpbmRleCBvZiB0aGUgZmlyc3QgdmlzaWJsZSBpdGVtIGluIHRoZSB2aWV3cG9ydC5cbiAgICpcbiAgICogQHJldHVybiB7bnVtYmVyfVxuICAgKi9cbiAgZ2V0IGZpcnN0VmlzaWJsZUluZGV4KCkge1xuICAgIHJldHVybiB0aGlzLl9fYWRhcHRlci5hZGp1c3RlZEZpcnN0VmlzaWJsZUluZGV4O1xuICB9XG5cbiAgLyoqXG4gICAqIEdldHMgdGhlIGluZGV4IG9mIHRoZSBsYXN0IHZpc2libGUgaXRlbSBpbiB0aGUgdmlld3BvcnQuXG4gICAqXG4gICAqIEByZXR1cm4ge251bWJlcn1cbiAgICovXG4gIGdldCBsYXN0VmlzaWJsZUluZGV4KCkge1xuICAgIHJldHVybiB0aGlzLl9fYWRhcHRlci5hZGp1c3RlZExhc3RWaXNpYmxlSW5kZXg7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/component-base/src/virtualizer.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/field-base/src/input-mixin.js":
/*!************************************************************!*\
  !*** ./node_modules/@vaadin/field-base/src/input-mixin.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"InputMixin\": () => (/* binding */ InputMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * A mixin to store the reference to an input element\n * and add input and change event listeners to it.\n *\n * @polymerMixin\n */\nconst InputMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superclass => class InputMixinClass extends superclass {\n  static get properties() {\n    return {\n      /**\n       * A reference to the input element controlled by the mixin.\n       * Any component implementing this mixin is expected to provide it\n       * by using `this._setInputElement(input)` Polymer API.\n       *\n       * A typical case is using `InputController` that does this automatically.\n       * However, the input element does not have to always be native <input>:\n       * as an example, <vaadin-combo-box-light> accepts other components.\n       *\n       * @protected\n       * @type {!HTMLElement}\n       */\n      inputElement: {\n        type: Object,\n        readOnly: true,\n        observer: '_inputElementChanged'\n      },\n      /**\n       * String used to define input type.\n       * @protected\n       */\n      type: {\n        type: String,\n        readOnly: true\n      },\n      /**\n       * The value of the field.\n       */\n      value: {\n        type: String,\n        value: '',\n        observer: '_valueChanged',\n        notify: true\n      },\n      /**\n       * When true, the input element has a non-empty value entered by the user.\n       * @protected\n       */\n      _hasInputValue: {\n        type: Boolean,\n        value: false,\n        observer: '_hasInputValueChanged'\n      }\n    };\n  }\n  constructor() {\n    super();\n    this._boundOnInput = this.__onInput.bind(this);\n    this._boundOnChange = this._onChange.bind(this);\n  }\n\n  /**\n   * Clear the value of the field.\n   */\n  clear() {\n    this.value = '';\n  }\n\n  /**\n   * Add event listeners to the input element instance.\n   * Override this method to add custom listeners.\n   * @param {!HTMLElement} input\n   * @protected\n   */\n  _addInputListeners(input) {\n    input.addEventListener('input', this._boundOnInput);\n    input.addEventListener('change', this._boundOnChange);\n  }\n\n  /**\n   * Remove event listeners from the input element instance.\n   * @param {!HTMLElement} input\n   * @protected\n   */\n  _removeInputListeners(input) {\n    input.removeEventListener('input', this._boundOnInput);\n    input.removeEventListener('change', this._boundOnChange);\n  }\n\n  /**\n   * A method to forward the value property set on the field\n   * programmatically back to the input element value.\n   * Override this method to perform additional checks,\n   * for example to skip this in certain conditions.\n   * @param {string} value\n   * @protected\n   */\n  _forwardInputValue(value) {\n    // Value might be set before an input element is initialized.\n    // This case should be handled separately by a component that\n    // implements this mixin, for example in `connectedCallback`.\n    if (!this.inputElement) {\n      return;\n    }\n    if (value != null) {\n      this.inputElement.value = value;\n    } else {\n      this.inputElement.value = '';\n    }\n  }\n\n  /**\n   * @param {HTMLElement | undefined} input\n   * @param {HTMLElement | undefined} oldInput\n   * @protected\n   */\n  _inputElementChanged(input, oldInput) {\n    if (input) {\n      this._addInputListeners(input);\n    } else if (oldInput) {\n      this._removeInputListeners(oldInput);\n    }\n  }\n\n  /**\n   * Observer to notify about the change of private property.\n   *\n   * @private\n   */\n  _hasInputValueChanged(hasValue, oldHasValue) {\n    if (hasValue || oldHasValue) {\n      this.dispatchEvent(new CustomEvent('has-input-value-changed'));\n    }\n  }\n\n  /**\n   * An input event listener used to update `_hasInputValue` property.\n   * Do not override this method.\n   *\n   * @param {Event} event\n   * @private\n   */\n  __onInput(event) {\n    this._setHasInputValue(event);\n    this._onInput(event);\n  }\n\n  /**\n   * An input event listener used to update the field value.\n   *\n   * @param {Event} event\n   * @protected\n   */\n  _onInput(event) {\n    // In the case a custom web component is passed as `inputElement`,\n    // the actual native input element, on which the event occurred,\n    // can be inside shadow trees.\n    const target = event.composedPath()[0];\n    // Ignore fake input events e.g. used by clear button.\n    this.__userInput = event.isTrusted;\n    this.value = target.value;\n    this.__userInput = false;\n  }\n\n  /**\n   * A change event listener.\n   * Override this method with an actual implementation.\n   * @param {Event} _event\n   * @protected\n   */\n  _onChange(_event) {}\n\n  /**\n   * Toggle the has-value attribute based on the value property.\n   *\n   * @param {boolean} hasValue\n   * @protected\n   */\n  _toggleHasValue(hasValue) {\n    this.toggleAttribute('has-value', hasValue);\n  }\n\n  /**\n   * Observer called when a value property changes.\n   * @param {string | undefined} newVal\n   * @param {string | undefined} oldVal\n   * @protected\n   */\n  _valueChanged(newVal, oldVal) {\n    this._toggleHasValue(this._hasValue);\n\n    // Setting initial value to empty string, do nothing.\n    if (newVal === '' && oldVal === undefined) {\n      return;\n    }\n\n    // Value is set by the user, no need to sync it back to input.\n    if (this.__userInput) {\n      return;\n    }\n\n    // Setting a value programmatically, sync it to input element.\n    this._forwardInputValue(newVal);\n  }\n\n  /**\n   * Indicates whether the value is different from the default one.\n   * Override if the `value` property has a type other than `string`.\n   *\n   * @protected\n   */\n  get _hasValue() {\n    return this.value != null && this.value !== '';\n  }\n\n  /**\n   * Sets the `_hasInputValue` property based on the `input` event.\n   *\n   * @param {InputEvent} event\n   * @protected\n   */\n  _setHasInputValue(event) {\n    // In the case a custom web component is passed as `inputElement`,\n    // the actual native input element, on which the event occurred,\n    // can be inside shadow trees.\n    const target = event.composedPath()[0];\n    this._hasInputValue = target.value.length > 0;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/field-base/src/input-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/field-base/src/validate-mixin.js":
/*!***************************************************************!*\
  !*** ./node_modules/@vaadin/field-base/src/validate-mixin.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ValidateMixin\": () => (/* binding */ ValidateMixin)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/mixin.js */ \"./node_modules/@polymer/polymer/lib/utils/mixin.js\");\n/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n/**\n * A mixin to provide required state and validation logic.\n *\n * @polymerMixin\n */\nconst ValidateMixin = (0,_polymer_polymer_lib_utils_mixin_js__WEBPACK_IMPORTED_MODULE_0__.dedupingMixin)(superclass => class ValidateMixinClass extends superclass {\n  static get properties() {\n    return {\n      /**\n       * Set to true when the field is invalid.\n       */\n      invalid: {\n        type: Boolean,\n        reflectToAttribute: true,\n        notify: true,\n        value: false\n      },\n      /**\n       * Specifies that the user must fill in a value.\n       */\n      required: {\n        type: Boolean,\n        reflectToAttribute: true\n      }\n    };\n  }\n\n  /**\n   * Validates the field and sets the `invalid` property based on the result.\n   *\n   * The method fires a `validated` event with the result of the validation.\n   *\n   * @return {boolean} True if the value is valid.\n   */\n  validate() {\n    const isValid = this.checkValidity();\n    this._setInvalid(!isValid);\n    this.dispatchEvent(new CustomEvent('validated', {\n      detail: {\n        valid: isValid\n      }\n    }));\n    return isValid;\n  }\n\n  /**\n   * Returns true if the field value satisfies all constraints (if any).\n   *\n   * @return {boolean}\n   */\n  checkValidity() {\n    return !this.required || !!this.value;\n  }\n\n  /**\n   * @param {boolean} invalid\n   * @protected\n   */\n  _setInvalid(invalid) {\n    if (this._shouldSetInvalid(invalid)) {\n      this.invalid = invalid;\n    }\n  }\n\n  /**\n   * Override this method to define whether the given `invalid` state should be set.\n   *\n   * @param {boolean} _invalid\n   * @return {boolean}\n   * @protected\n   */\n  _shouldSetInvalid(_invalid) {\n    return true;\n  }\n\n  /**\n   * Fired whenever the field is validated.\n   *\n   * @event validated\n   * @param {Object} detail\n   * @param {boolean} detail.valid the result of the validation.\n   */\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9maWVsZC1iYXNlL3NyYy92YWxpZGF0ZS1taXhpbi5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9maWVsZC1iYXNlL3NyYy92YWxpZGF0ZS1taXhpbi5qcz9lMzUzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAyMSAtIDIwMjIgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0IHsgZGVkdXBpbmdNaXhpbiB9IGZyb20gJ0Bwb2x5bWVyL3BvbHltZXIvbGliL3V0aWxzL21peGluLmpzJztcblxuLyoqXG4gKiBBIG1peGluIHRvIHByb3ZpZGUgcmVxdWlyZWQgc3RhdGUgYW5kIHZhbGlkYXRpb24gbG9naWMuXG4gKlxuICogQHBvbHltZXJNaXhpblxuICovXG5leHBvcnQgY29uc3QgVmFsaWRhdGVNaXhpbiA9IGRlZHVwaW5nTWl4aW4oXG4gIChzdXBlcmNsYXNzKSA9PlxuICAgIGNsYXNzIFZhbGlkYXRlTWl4aW5DbGFzcyBleHRlbmRzIHN1cGVyY2xhc3Mge1xuICAgICAgc3RhdGljIGdldCBwcm9wZXJ0aWVzKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIC8qKlxuICAgICAgICAgICAqIFNldCB0byB0cnVlIHdoZW4gdGhlIGZpZWxkIGlzIGludmFsaWQuXG4gICAgICAgICAgICovXG4gICAgICAgICAgaW52YWxpZDoge1xuICAgICAgICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgICAgICAgIHJlZmxlY3RUb0F0dHJpYnV0ZTogdHJ1ZSxcbiAgICAgICAgICAgIG5vdGlmeTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBmYWxzZSxcbiAgICAgICAgICB9LFxuXG4gICAgICAgICAgLyoqXG4gICAgICAgICAgICogU3BlY2lmaWVzIHRoYXQgdGhlIHVzZXIgbXVzdCBmaWxsIGluIGEgdmFsdWUuXG4gICAgICAgICAgICovXG4gICAgICAgICAgcmVxdWlyZWQ6IHtcbiAgICAgICAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICAgICAgICByZWZsZWN0VG9BdHRyaWJ1dGU6IHRydWUsXG4gICAgICAgICAgfSxcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBWYWxpZGF0ZXMgdGhlIGZpZWxkIGFuZCBzZXRzIHRoZSBgaW52YWxpZGAgcHJvcGVydHkgYmFzZWQgb24gdGhlIHJlc3VsdC5cbiAgICAgICAqXG4gICAgICAgKiBUaGUgbWV0aG9kIGZpcmVzIGEgYHZhbGlkYXRlZGAgZXZlbnQgd2l0aCB0aGUgcmVzdWx0IG9mIHRoZSB2YWxpZGF0aW9uLlxuICAgICAgICpcbiAgICAgICAqIEByZXR1cm4ge2Jvb2xlYW59IFRydWUgaWYgdGhlIHZhbHVlIGlzIHZhbGlkLlxuICAgICAgICovXG4gICAgICB2YWxpZGF0ZSgpIHtcbiAgICAgICAgY29uc3QgaXNWYWxpZCA9IHRoaXMuY2hlY2tWYWxpZGl0eSgpO1xuICAgICAgICB0aGlzLl9zZXRJbnZhbGlkKCFpc1ZhbGlkKTtcbiAgICAgICAgdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBDdXN0b21FdmVudCgndmFsaWRhdGVkJywgeyBkZXRhaWw6IHsgdmFsaWQ6IGlzVmFsaWQgfSB9KSk7XG4gICAgICAgIHJldHVybiBpc1ZhbGlkO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgZmllbGQgdmFsdWUgc2F0aXNmaWVzIGFsbCBjb25zdHJhaW50cyAoaWYgYW55KS5cbiAgICAgICAqXG4gICAgICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgICAgICovXG4gICAgICBjaGVja1ZhbGlkaXR5KCkge1xuICAgICAgICByZXR1cm4gIXRoaXMucmVxdWlyZWQgfHwgISF0aGlzLnZhbHVlO1xuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gaW52YWxpZFxuICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICovXG4gICAgICBfc2V0SW52YWxpZChpbnZhbGlkKSB7XG4gICAgICAgIGlmICh0aGlzLl9zaG91bGRTZXRJbnZhbGlkKGludmFsaWQpKSB7XG4gICAgICAgICAgdGhpcy5pbnZhbGlkID0gaW52YWxpZDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvKipcbiAgICAgICAqIE92ZXJyaWRlIHRoaXMgbWV0aG9kIHRvIGRlZmluZSB3aGV0aGVyIHRoZSBnaXZlbiBgaW52YWxpZGAgc3RhdGUgc2hvdWxkIGJlIHNldC5cbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IF9pbnZhbGlkXG4gICAgICAgKiBAcmV0dXJuIHtib29sZWFufVxuICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICovXG4gICAgICBfc2hvdWxkU2V0SW52YWxpZChfaW52YWxpZCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBGaXJlZCB3aGVuZXZlciB0aGUgZmllbGQgaXMgdmFsaWRhdGVkLlxuICAgICAgICpcbiAgICAgICAqIEBldmVudCB2YWxpZGF0ZWRcbiAgICAgICAqIEBwYXJhbSB7T2JqZWN0fSBkZXRhaWxcbiAgICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gZGV0YWlsLnZhbGlkIHRoZSByZXN1bHQgb2YgdGhlIHZhbGlkYXRpb24uXG4gICAgICAgKi9cbiAgICB9LFxuKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/field-base/src/validate-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/field-base/src/virtual-keyboard-controller.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@vaadin/field-base/src/virtual-keyboard-controller.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"VirtualKeyboardController\": () => (/* binding */ VirtualKeyboardController)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2021 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * A controller which prevents the virtual keyboard from showing up on mobile devices\n * when the field's overlay is closed.\n */\nclass VirtualKeyboardController {\n  /**\n   * @param {{ inputElement?: HTMLElement; opened: boolean } & HTMLElement} host\n   */\n  constructor(host) {\n    this.host = host;\n    host.addEventListener('opened-changed', () => {\n      if (!host.opened) {\n        // Prevent opening the virtual keyboard when the input gets re-focused on dropdown close\n        this.__setVirtualKeyboardEnabled(false);\n      }\n    });\n\n    // Re-enable virtual keyboard on blur, so it gets opened when the field is focused again\n    host.addEventListener('blur', () => this.__setVirtualKeyboardEnabled(true));\n\n    // Re-enable the virtual keyboard whenever the field is touched\n    host.addEventListener('touchstart', () => this.__setVirtualKeyboardEnabled(true));\n  }\n\n  /** @private */\n  __setVirtualKeyboardEnabled(value) {\n    if (this.host.inputElement) {\n      this.host.inputElement.inputMode = value ? '' : 'none';\n    }\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9maWVsZC1iYXNlL3NyYy92aXJ0dWFsLWtleWJvYXJkLWNvbnRyb2xsZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnN0ZW9uLXBhbmVsLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vZmllbGQtYmFzZS9zcmMvdmlydHVhbC1rZXlib2FyZC1jb250cm9sbGVyLmpzP2ZiZGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDIxIC0gMjAyMiBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5cbi8qKlxuICogQSBjb250cm9sbGVyIHdoaWNoIHByZXZlbnRzIHRoZSB2aXJ0dWFsIGtleWJvYXJkIGZyb20gc2hvd2luZyB1cCBvbiBtb2JpbGUgZGV2aWNlc1xuICogd2hlbiB0aGUgZmllbGQncyBvdmVybGF5IGlzIGNsb3NlZC5cbiAqL1xuZXhwb3J0IGNsYXNzIFZpcnR1YWxLZXlib2FyZENvbnRyb2xsZXIge1xuICAvKipcbiAgICogQHBhcmFtIHt7IGlucHV0RWxlbWVudD86IEhUTUxFbGVtZW50OyBvcGVuZWQ6IGJvb2xlYW4gfSAmIEhUTUxFbGVtZW50fSBob3N0XG4gICAqL1xuICBjb25zdHJ1Y3Rvcihob3N0KSB7XG4gICAgdGhpcy5ob3N0ID0gaG9zdDtcblxuICAgIGhvc3QuYWRkRXZlbnRMaXN0ZW5lcignb3BlbmVkLWNoYW5nZWQnLCAoKSA9PiB7XG4gICAgICBpZiAoIWhvc3Qub3BlbmVkKSB7XG4gICAgICAgIC8vIFByZXZlbnQgb3BlbmluZyB0aGUgdmlydHVhbCBrZXlib2FyZCB3aGVuIHRoZSBpbnB1dCBnZXRzIHJlLWZvY3VzZWQgb24gZHJvcGRvd24gY2xvc2VcbiAgICAgICAgdGhpcy5fX3NldFZpcnR1YWxLZXlib2FyZEVuYWJsZWQoZmFsc2UpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gUmUtZW5hYmxlIHZpcnR1YWwga2V5Ym9hcmQgb24gYmx1ciwgc28gaXQgZ2V0cyBvcGVuZWQgd2hlbiB0aGUgZmllbGQgaXMgZm9jdXNlZCBhZ2FpblxuICAgIGhvc3QuYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsICgpID0+IHRoaXMuX19zZXRWaXJ0dWFsS2V5Ym9hcmRFbmFibGVkKHRydWUpKTtcblxuICAgIC8vIFJlLWVuYWJsZSB0aGUgdmlydHVhbCBrZXlib2FyZCB3aGVuZXZlciB0aGUgZmllbGQgaXMgdG91Y2hlZFxuICAgIGhvc3QuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsICgpID0+IHRoaXMuX19zZXRWaXJ0dWFsS2V5Ym9hcmRFbmFibGVkKHRydWUpKTtcbiAgfVxuXG4gIC8qKiBAcHJpdmF0ZSAqL1xuICBfX3NldFZpcnR1YWxLZXlib2FyZEVuYWJsZWQodmFsdWUpIHtcbiAgICBpZiAodGhpcy5ob3N0LmlucHV0RWxlbWVudCkge1xuICAgICAgdGhpcy5ob3N0LmlucHV0RWxlbWVudC5pbnB1dE1vZGUgPSB2YWx1ZSA/ICcnIDogJ25vbmUnO1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/field-base/src/virtual-keyboard-controller.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/item/theme/material/vaadin-item-styles.js":
/*!************************************************************************!*\
  !*** ./node_modules/@vaadin/item/theme/material/vaadin-item-styles.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"item\": () => (/* binding */ item)\n/* harmony export */ });\n/* harmony import */ var _vaadin_vaadin_material_styles_font_icons_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/font-icons.js */ \"./node_modules/@vaadin/vaadin-material-styles/font-icons.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _vaadin_vaadin_material_styles_typography_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/typography.js */ \"./node_modules/@vaadin/vaadin-material-styles/typography.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n\n\n\n\nconst item = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.css`\n  :host {\n    display: flex;\n    align-items: center;\n    box-sizing: border-box;\n    min-height: 36px;\n    padding: 8px 32px 8px 10px;\n    overflow: hidden;\n    font-family: var(--material-font-family);\n    font-size: var(--material-small-font-size);\n    line-height: 24px;\n  }\n\n  /* It's the list-box's responsibility to add the focus style */\n  :host([focused]) {\n    outline: none;\n  }\n\n  /* Checkmark */\n  [part='checkmark']::before {\n    display: var(--_material-item-selected-icon-display, none);\n    content: '';\n    font-family: material-icons;\n    font-size: 24px;\n    line-height: 1;\n    font-weight: 400;\n    width: 24px;\n    text-align: center;\n    margin-right: 10px;\n    color: var(--material-secondary-text-color);\n    flex: none;\n  }\n\n  :host([selected]) [part='checkmark']::before {\n    content: var(--material-icons-check);\n  }\n\n  @media (any-hover: hover) {\n    :host(:hover:not([disabled])) {\n      background-color: var(--material-secondary-background-color);\n    }\n\n    :host([focused]:not([disabled])) {\n      background-color: var(--material-divider-color);\n    }\n  }\n\n  /* Disabled */\n  :host([disabled]) {\n    color: var(--material-disabled-text-color);\n    cursor: default;\n    pointer-events: none;\n  }\n\n  /* RTL specific styles */\n  :host([dir='rtl']) {\n    padding: 8px 10px 8px 32px;\n  }\n\n  :host([dir='rtl']) [part='checkmark']::before {\n    margin-right: 0;\n    margin-left: 10px;\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.registerStyles)('vaadin-item', item, {\n  moduleId: 'material-item'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9pdGVtL3RoZW1lL21hdGVyaWFsL3ZhYWRpbi1pdGVtLXN0eWxlcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnN0ZW9uLXBhbmVsLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vaXRlbS90aGVtZS9tYXRlcmlhbC92YWFkaW4taXRlbS1zdHlsZXMuanM/N2NlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9mb250LWljb25zLmpzJztcbmltcG9ydCAnQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL2NvbG9yLmpzJztcbmltcG9ydCAnQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL3R5cG9ncmFwaHkuanMnO1xuaW1wb3J0IHsgY3NzLCByZWdpc3RlclN0eWxlcyB9IGZyb20gJ0B2YWFkaW4vdmFhZGluLXRoZW1hYmxlLW1peGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi5qcyc7XG5cbmNvbnN0IGl0ZW0gPSBjc3NgXG4gIDpob3N0IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBtaW4taGVpZ2h0OiAzNnB4O1xuICAgIHBhZGRpbmc6IDhweCAzMnB4IDhweCAxMHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgZm9udC1mYW1pbHk6IHZhcigtLW1hdGVyaWFsLWZvbnQtZmFtaWx5KTtcbiAgICBmb250LXNpemU6IHZhcigtLW1hdGVyaWFsLXNtYWxsLWZvbnQtc2l6ZSk7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gIH1cblxuICAvKiBJdCdzIHRoZSBsaXN0LWJveCdzIHJlc3BvbnNpYmlsaXR5IHRvIGFkZCB0aGUgZm9jdXMgc3R5bGUgKi9cbiAgOmhvc3QoW2ZvY3VzZWRdKSB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgfVxuXG4gIC8qIENoZWNrbWFyayAqL1xuICBbcGFydD0nY2hlY2ttYXJrJ106OmJlZm9yZSB7XG4gICAgZGlzcGxheTogdmFyKC0tX21hdGVyaWFsLWl0ZW0tc2VsZWN0ZWQtaWNvbi1kaXNwbGF5LCBub25lKTtcbiAgICBjb250ZW50OiAnJztcbiAgICBmb250LWZhbWlseTogbWF0ZXJpYWwtaWNvbnM7XG4gICAgZm9udC1zaXplOiAyNHB4O1xuICAgIGxpbmUtaGVpZ2h0OiAxO1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgd2lkdGg6IDI0cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi1yaWdodDogMTBweDtcbiAgICBjb2xvcjogdmFyKC0tbWF0ZXJpYWwtc2Vjb25kYXJ5LXRleHQtY29sb3IpO1xuICAgIGZsZXg6IG5vbmU7XG4gIH1cblxuICA6aG9zdChbc2VsZWN0ZWRdKSBbcGFydD0nY2hlY2ttYXJrJ106OmJlZm9yZSB7XG4gICAgY29udGVudDogdmFyKC0tbWF0ZXJpYWwtaWNvbnMtY2hlY2spO1xuICB9XG5cbiAgQG1lZGlhIChhbnktaG92ZXI6IGhvdmVyKSB7XG4gICAgOmhvc3QoOmhvdmVyOm5vdChbZGlzYWJsZWRdKSkge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tbWF0ZXJpYWwtc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3IpO1xuICAgIH1cblxuICAgIDpob3N0KFtmb2N1c2VkXTpub3QoW2Rpc2FibGVkXSkpIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1hdGVyaWFsLWRpdmlkZXItY29sb3IpO1xuICAgIH1cbiAgfVxuXG4gIC8qIERpc2FibGVkICovXG4gIDpob3N0KFtkaXNhYmxlZF0pIHtcbiAgICBjb2xvcjogdmFyKC0tbWF0ZXJpYWwtZGlzYWJsZWQtdGV4dC1jb2xvcik7XG4gICAgY3Vyc29yOiBkZWZhdWx0O1xuICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICB9XG5cbiAgLyogUlRMIHNwZWNpZmljIHN0eWxlcyAqL1xuICA6aG9zdChbZGlyPSdydGwnXSkge1xuICAgIHBhZGRpbmc6IDhweCAxMHB4IDhweCAzMnB4O1xuICB9XG5cbiAgOmhvc3QoW2Rpcj0ncnRsJ10pIFtwYXJ0PSdjaGVja21hcmsnXTo6YmVmb3JlIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIH1cbmA7XG5cbnJlZ2lzdGVyU3R5bGVzKCd2YWFkaW4taXRlbScsIGl0ZW0sIHsgbW9kdWxlSWQ6ICdtYXRlcmlhbC1pdGVtJyB9KTtcblxuZXhwb3J0IHsgaXRlbSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/item/theme/material/vaadin-item-styles.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/lit-renderer/src/lit-renderer.js":
/*!***************************************************************!*\
  !*** ./node_modules/@vaadin/lit-renderer/src/lit-renderer.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LitRendererDirective\": () => (/* binding */ LitRendererDirective)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_async_directive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/async-directive.js */ \"./node_modules/lit/async-directive.js\");\n/* harmony import */ var lit_directive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit/directive.js */ \"./node_modules/lit/directive.js\");\n/**\n * @license\n * Copyright (c) 2016 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n// A symbol indicating that the directive hasn't been initialized.\nconst VALUE_NOT_INITIALIZED = Symbol('valueNotInitialized');\nclass LitRendererDirective extends lit_async_directive_js__WEBPACK_IMPORTED_MODULE_1__.AsyncDirective {\n  constructor(part) {\n    super(part);\n    if (part.type !== lit_directive_js__WEBPACK_IMPORTED_MODULE_2__.PartType.ELEMENT) {\n      throw new Error(`\\`${this.constructor.name}\\` must be bound to an element.`);\n    }\n    this.previousValue = VALUE_NOT_INITIALIZED;\n  }\n\n  /** @override */\n  render(_renderer, _value) {\n    return lit__WEBPACK_IMPORTED_MODULE_0__.nothing;\n  }\n\n  /** @override */\n  update(part, [renderer, value]) {\n    if (!this.hasChanged(value)) {\n      return lit__WEBPACK_IMPORTED_MODULE_0__.nothing;\n    }\n    this.host = part.options && part.options.host;\n    this.element = part.element;\n    this.renderer = renderer;\n    const firstRender = this.previousValue === VALUE_NOT_INITIALIZED;\n    if (firstRender) {\n      this.addRenderer();\n    } else {\n      this.runRenderer();\n    }\n\n    // Copy the value if it is an array in order to keep it\n    // from possible outside mutations.\n    this.previousValue = Array.isArray(value) ? [...value] : value;\n    return lit__WEBPACK_IMPORTED_MODULE_0__.nothing;\n  }\n\n  /** @override */\n  reconnected() {\n    this.addRenderer();\n  }\n\n  /** @override */\n  disconnected() {\n    this.removeRenderer();\n  }\n\n  /** @abstract */\n  addRenderer() {\n    throw new Error('The `addRenderer` method must be implemented.');\n  }\n\n  /** @abstract */\n  runRenderer() {\n    throw new Error('The `runRenderer` method must be implemented.');\n  }\n\n  /** @abstract */\n  removeRenderer() {\n    throw new Error('The `removeRenderer` method must be implemented.');\n  }\n\n  /** @protected */\n  renderRenderer(container, ...args) {\n    const templateResult = this.renderer.call(this.host, ...args);\n    (0,lit__WEBPACK_IMPORTED_MODULE_0__.render)(templateResult, container, {\n      host: this.host\n    });\n  }\n\n  /** @protected */\n  hasChanged(value) {\n    if (Array.isArray(value)) {\n      if (!Array.isArray(this.previousValue)) {\n        return true;\n      }\n      if (this.previousValue.length !== value.length) {\n        return true;\n      }\n\n      // For arrays, perform shallow dirty checking for each element.\n      return value.some((v, i) => v !== this.previousValue[i]);\n    }\n    return this.previousValue !== value;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9saXQtcmVuZGVyZXIvc3JjL2xpdC1yZW5kZXJlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9saXQtcmVuZGVyZXIvc3JjL2xpdC1yZW5kZXJlci5qcz83MjZhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNiAtIDIwMjIgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0IHsgbm90aGluZywgcmVuZGVyIH0gZnJvbSAnbGl0JztcbmltcG9ydCB7IEFzeW5jRGlyZWN0aXZlIH0gZnJvbSAnbGl0L2FzeW5jLWRpcmVjdGl2ZS5qcyc7XG5pbXBvcnQgeyBQYXJ0VHlwZSB9IGZyb20gJ2xpdC9kaXJlY3RpdmUuanMnO1xuXG4vLyBBIHN5bWJvbCBpbmRpY2F0aW5nIHRoYXQgdGhlIGRpcmVjdGl2ZSBoYXNuJ3QgYmVlbiBpbml0aWFsaXplZC5cbmNvbnN0IFZBTFVFX05PVF9JTklUSUFMSVpFRCA9IFN5bWJvbCgndmFsdWVOb3RJbml0aWFsaXplZCcpO1xuXG5leHBvcnQgY2xhc3MgTGl0UmVuZGVyZXJEaXJlY3RpdmUgZXh0ZW5kcyBBc3luY0RpcmVjdGl2ZSB7XG4gIGNvbnN0cnVjdG9yKHBhcnQpIHtcbiAgICBzdXBlcihwYXJ0KTtcblxuICAgIGlmIChwYXJ0LnR5cGUgIT09IFBhcnRUeXBlLkVMRU1FTlQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgXFxgJHt0aGlzLmNvbnN0cnVjdG9yLm5hbWV9XFxgIG11c3QgYmUgYm91bmQgdG8gYW4gZWxlbWVudC5gKTtcbiAgICB9XG5cbiAgICB0aGlzLnByZXZpb3VzVmFsdWUgPSBWQUxVRV9OT1RfSU5JVElBTElaRUQ7XG4gIH1cblxuICAvKiogQG92ZXJyaWRlICovXG4gIHJlbmRlcihfcmVuZGVyZXIsIF92YWx1ZSkge1xuICAgIHJldHVybiBub3RoaW5nO1xuICB9XG5cbiAgLyoqIEBvdmVycmlkZSAqL1xuICB1cGRhdGUocGFydCwgW3JlbmRlcmVyLCB2YWx1ZV0pIHtcbiAgICBpZiAoIXRoaXMuaGFzQ2hhbmdlZCh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiBub3RoaW5nO1xuICAgIH1cblxuICAgIHRoaXMuaG9zdCA9IHBhcnQub3B0aW9ucyAmJiBwYXJ0Lm9wdGlvbnMuaG9zdDtcbiAgICB0aGlzLmVsZW1lbnQgPSBwYXJ0LmVsZW1lbnQ7XG4gICAgdGhpcy5yZW5kZXJlciA9IHJlbmRlcmVyO1xuXG4gICAgY29uc3QgZmlyc3RSZW5kZXIgPSB0aGlzLnByZXZpb3VzVmFsdWUgPT09IFZBTFVFX05PVF9JTklUSUFMSVpFRDtcbiAgICBpZiAoZmlyc3RSZW5kZXIpIHtcbiAgICAgIHRoaXMuYWRkUmVuZGVyZXIoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5ydW5SZW5kZXJlcigpO1xuICAgIH1cblxuICAgIC8vIENvcHkgdGhlIHZhbHVlIGlmIGl0IGlzIGFuIGFycmF5IGluIG9yZGVyIHRvIGtlZXAgaXRcbiAgICAvLyBmcm9tIHBvc3NpYmxlIG91dHNpZGUgbXV0YXRpb25zLlxuICAgIHRoaXMucHJldmlvdXNWYWx1ZSA9IEFycmF5LmlzQXJyYXkodmFsdWUpID8gWy4uLnZhbHVlXSA6IHZhbHVlO1xuXG4gICAgcmV0dXJuIG5vdGhpbmc7XG4gIH1cblxuICAvKiogQG92ZXJyaWRlICovXG4gIHJlY29ubmVjdGVkKCkge1xuICAgIHRoaXMuYWRkUmVuZGVyZXIoKTtcbiAgfVxuXG4gIC8qKiBAb3ZlcnJpZGUgKi9cbiAgZGlzY29ubmVjdGVkKCkge1xuICAgIHRoaXMucmVtb3ZlUmVuZGVyZXIoKTtcbiAgfVxuXG4gIC8qKiBAYWJzdHJhY3QgKi9cbiAgYWRkUmVuZGVyZXIoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgYGFkZFJlbmRlcmVyYCBtZXRob2QgbXVzdCBiZSBpbXBsZW1lbnRlZC4nKTtcbiAgfVxuXG4gIC8qKiBAYWJzdHJhY3QgKi9cbiAgcnVuUmVuZGVyZXIoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgYHJ1blJlbmRlcmVyYCBtZXRob2QgbXVzdCBiZSBpbXBsZW1lbnRlZC4nKTtcbiAgfVxuXG4gIC8qKiBAYWJzdHJhY3QgKi9cbiAgcmVtb3ZlUmVuZGVyZXIoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgYHJlbW92ZVJlbmRlcmVyYCBtZXRob2QgbXVzdCBiZSBpbXBsZW1lbnRlZC4nKTtcbiAgfVxuXG4gIC8qKiBAcHJvdGVjdGVkICovXG4gIHJlbmRlclJlbmRlcmVyKGNvbnRhaW5lciwgLi4uYXJncykge1xuICAgIGNvbnN0IHRlbXBsYXRlUmVzdWx0ID0gdGhpcy5yZW5kZXJlci5jYWxsKHRoaXMuaG9zdCwgLi4uYXJncyk7XG4gICAgcmVuZGVyKHRlbXBsYXRlUmVzdWx0LCBjb250YWluZXIsIHsgaG9zdDogdGhpcy5ob3N0IH0pO1xuICB9XG5cbiAgLyoqIEBwcm90ZWN0ZWQgKi9cbiAgaGFzQ2hhbmdlZCh2YWx1ZSkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHRoaXMucHJldmlvdXNWYWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh0aGlzLnByZXZpb3VzVmFsdWUubGVuZ3RoICE9PSB2YWx1ZS5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIC8vIEZvciBhcnJheXMsIHBlcmZvcm0gc2hhbGxvdyBkaXJ0eSBjaGVja2luZyBmb3IgZWFjaCBlbGVtZW50LlxuICAgICAgcmV0dXJuIHZhbHVlLnNvbWUoKHYsIGkpID0+IHYgIT09IHRoaXMucHJldmlvdXNWYWx1ZVtpXSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMucHJldmlvdXNWYWx1ZSAhPT0gdmFsdWU7XG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/lit-renderer/src/lit-renderer.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/overlay/src/vaadin-overlay-position-mixin.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@vaadin/overlay/src/vaadin-overlay-position-mixin.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PositionMixin\": () => (/* binding */ PositionMixin)\n/* harmony export */ });\n/* harmony import */ var _vaadin_component_base_src_dom_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/component-base/src/dom-utils.js */ \"./node_modules/@vaadin/component-base/src/dom-utils.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\nconst PROP_NAMES_VERTICAL = {\n  start: 'top',\n  end: 'bottom'\n};\nconst PROP_NAMES_HORIZONTAL = {\n  start: 'left',\n  end: 'right'\n};\nconst targetResizeObserver = new ResizeObserver(entries => {\n  setTimeout(() => {\n    entries.forEach(entry => {\n      if (entry.target.__overlay) {\n        entry.target.__overlay._updatePosition();\n      }\n    });\n  });\n});\n\n/**\n * @polymerMixin\n */\nconst PositionMixin = superClass => class PositionMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * The element next to which this overlay should be aligned.\n       * The position of the overlay relative to the positionTarget can be adjusted\n       * with properties `horizontalAlign`, `verticalAlign`, `noHorizontalOverlap`\n       * and `noVerticalOverlap`.\n       */\n      positionTarget: {\n        type: Object,\n        value: null\n      },\n      /**\n       * When `positionTarget` is set, this property defines whether to align the overlay's\n       * left or right side to the target element by default.\n       * Possible values are `start` and `end`.\n       * RTL is taken into account when interpreting the value.\n       * The overlay is automatically flipped to the opposite side when it doesn't fit into\n       * the default side defined by this property.\n       *\n       * @attr {start|end} horizontal-align\n       */\n      horizontalAlign: {\n        type: String,\n        value: 'start'\n      },\n      /**\n       * When `positionTarget` is set, this property defines whether to align the overlay's\n       * top or bottom side to the target element by default.\n       * Possible values are `top` and `bottom`.\n       * The overlay is automatically flipped to the opposite side when it doesn't fit into\n       * the default side defined by this property.\n       *\n       * @attr {top|bottom} vertical-align\n       */\n      verticalAlign: {\n        type: String,\n        value: 'top'\n      },\n      /**\n       * When `positionTarget` is set, this property defines whether the overlay should overlap\n       * the target element in the x-axis, or be positioned right next to it.\n       *\n       * @attr {boolean} no-horizontal-overlap\n       */\n      noHorizontalOverlap: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * When `positionTarget` is set, this property defines whether the overlay should overlap\n       * the target element in the y-axis, or be positioned right above/below it.\n       *\n       * @attr {boolean} no-vertical-overlap\n       */\n      noVerticalOverlap: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * If the overlay content has no intrinsic height, this property can be used to set\n       * the minimum vertical space (in pixels) required by the overlay. Setting a value to\n       * the property effectively disables the content measurement in favor of using this\n       * fixed value for determining the open direction.\n       *\n       * @attr {number} required-vertical-space\n       */\n      requiredVerticalSpace: {\n        type: Number,\n        value: 0\n      }\n    };\n  }\n  static get observers() {\n    return ['__positionSettingsChanged(horizontalAlign, verticalAlign, noHorizontalOverlap, noVerticalOverlap, requiredVerticalSpace)', '__overlayOpenedChanged(opened, positionTarget)'];\n  }\n  constructor() {\n    super();\n    this.__onScroll = this.__onScroll.bind(this);\n    this._updatePosition = this._updatePosition.bind(this);\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.opened) {\n      this.__addUpdatePositionEventListeners();\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__removeUpdatePositionEventListeners();\n  }\n\n  /** @private */\n  __addUpdatePositionEventListeners() {\n    window.addEventListener('resize', this._updatePosition);\n    this.__positionTargetAncestorRootNodes = (0,_vaadin_component_base_src_dom_utils_js__WEBPACK_IMPORTED_MODULE_0__.getAncestorRootNodes)(this.positionTarget);\n    this.__positionTargetAncestorRootNodes.forEach(node => {\n      node.addEventListener('scroll', this.__onScroll, true);\n    });\n  }\n\n  /** @private */\n  __removeUpdatePositionEventListeners() {\n    window.removeEventListener('resize', this._updatePosition);\n    if (this.__positionTargetAncestorRootNodes) {\n      this.__positionTargetAncestorRootNodes.forEach(node => {\n        node.removeEventListener('scroll', this.__onScroll, true);\n      });\n      this.__positionTargetAncestorRootNodes = null;\n    }\n  }\n\n  /** @private */\n  __overlayOpenedChanged(opened, positionTarget) {\n    this.__removeUpdatePositionEventListeners();\n    if (positionTarget) {\n      positionTarget.__overlay = null;\n      targetResizeObserver.unobserve(positionTarget);\n      if (opened) {\n        this.__addUpdatePositionEventListeners();\n        positionTarget.__overlay = this;\n        targetResizeObserver.observe(positionTarget);\n      }\n    }\n    if (opened) {\n      const computedStyle = getComputedStyle(this);\n      if (!this.__margins) {\n        this.__margins = {};\n        ['top', 'bottom', 'left', 'right'].forEach(propName => {\n          this.__margins[propName] = parseInt(computedStyle[propName], 10);\n        });\n      }\n      this.setAttribute('dir', computedStyle.direction);\n      this._updatePosition();\n      // Schedule another position update (to cover virtual keyboard opening for example)\n      requestAnimationFrame(() => this._updatePosition());\n    }\n  }\n  get __isRTL() {\n    return this.getAttribute('dir') === 'rtl';\n  }\n  __positionSettingsChanged() {\n    this._updatePosition();\n  }\n\n  /** @private */\n  __onScroll(e) {\n    // If the scroll event occurred inside the overlay, ignore it.\n    if (!this.contains(e.target)) {\n      this._updatePosition();\n    }\n  }\n  _updatePosition() {\n    if (!this.positionTarget || !this.opened) {\n      return;\n    }\n    const targetRect = this.positionTarget.getBoundingClientRect();\n\n    // Detect the desired alignment and update the layout accordingly\n    const shouldAlignStartVertically = this.__shouldAlignStartVertically(targetRect);\n    this.style.justifyContent = shouldAlignStartVertically ? 'flex-start' : 'flex-end';\n    const shouldAlignStartHorizontally = this.__shouldAlignStartHorizontally(targetRect, this.__isRTL);\n    const flexStart = !this.__isRTL && shouldAlignStartHorizontally || this.__isRTL && !shouldAlignStartHorizontally;\n    this.style.alignItems = flexStart ? 'flex-start' : 'flex-end';\n\n    // Get the overlay rect after possible overlay alignment changes\n    const overlayRect = this.getBoundingClientRect();\n\n    // Obtain vertical positioning properties\n    const verticalProps = this.__calculatePositionInOneDimension(targetRect, overlayRect, this.noVerticalOverlap, PROP_NAMES_VERTICAL, this, shouldAlignStartVertically);\n\n    // Obtain horizontal positioning properties\n    const horizontalProps = this.__calculatePositionInOneDimension(targetRect, overlayRect, this.noHorizontalOverlap, PROP_NAMES_HORIZONTAL, this, shouldAlignStartHorizontally);\n\n    // Apply the positioning properties to the overlay\n    Object.assign(this.style, verticalProps, horizontalProps);\n    this.toggleAttribute('bottom-aligned', !shouldAlignStartVertically);\n    this.toggleAttribute('top-aligned', shouldAlignStartVertically);\n    this.toggleAttribute('end-aligned', !flexStart);\n    this.toggleAttribute('start-aligned', flexStart);\n  }\n  __shouldAlignStartHorizontally(targetRect, rtl) {\n    // Using previous size to fix a case where window resize may cause the overlay to be squeezed\n    // smaller than its current space before the fit-calculations.\n    const contentWidth = Math.max(this.__oldContentWidth || 0, this.$.overlay.offsetWidth);\n    this.__oldContentWidth = this.$.overlay.offsetWidth;\n    const viewportWidth = Math.min(window.innerWidth, document.documentElement.clientWidth);\n    const defaultAlignLeft = !rtl && this.horizontalAlign === 'start' || rtl && this.horizontalAlign === 'end';\n    return this.__shouldAlignStart(targetRect, contentWidth, viewportWidth, this.__margins, defaultAlignLeft, this.noHorizontalOverlap, PROP_NAMES_HORIZONTAL);\n  }\n  __shouldAlignStartVertically(targetRect) {\n    // Using previous size to fix a case where window resize may cause the overlay to be squeezed\n    // smaller than its current space before the fit-calculations.\n    const contentHeight = this.requiredVerticalSpace || Math.max(this.__oldContentHeight || 0, this.$.overlay.offsetHeight);\n    this.__oldContentHeight = this.$.overlay.offsetHeight;\n    const viewportHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n    const defaultAlignTop = this.verticalAlign === 'top';\n    return this.__shouldAlignStart(targetRect, contentHeight, viewportHeight, this.__margins, defaultAlignTop, this.noVerticalOverlap, PROP_NAMES_VERTICAL);\n  }\n\n  // eslint-disable-next-line max-params\n  __shouldAlignStart(targetRect, contentSize, viewportSize, margins, defaultAlignStart, noOverlap, propNames) {\n    const spaceForStartAlignment = viewportSize - targetRect[noOverlap ? propNames.end : propNames.start] - margins[propNames.end];\n    const spaceForEndAlignment = targetRect[noOverlap ? propNames.start : propNames.end] - margins[propNames.start];\n    const spaceForDefaultAlignment = defaultAlignStart ? spaceForStartAlignment : spaceForEndAlignment;\n    const spaceForOtherAlignment = defaultAlignStart ? spaceForEndAlignment : spaceForStartAlignment;\n    const shouldGoToDefaultSide = spaceForDefaultAlignment > spaceForOtherAlignment || spaceForDefaultAlignment > contentSize;\n    return defaultAlignStart === shouldGoToDefaultSide;\n  }\n\n  /**\n   * Returns an adjusted value after resizing the browser window,\n   * to avoid wrong calculations when e.g. previously set `bottom`\n   * CSS property value is larger than the updated viewport height.\n   * See https://github.com/vaadin/web-components/issues/4604\n   */\n  __adjustBottomProperty(cssPropNameToSet, propNames, currentValue) {\n    let adjustedProp;\n    if (cssPropNameToSet === propNames.end) {\n      // Adjust horizontally\n      if (propNames.end === PROP_NAMES_VERTICAL.end) {\n        const viewportHeight = Math.min(window.innerHeight, document.documentElement.clientHeight);\n        if (currentValue > viewportHeight && this.__oldViewportHeight) {\n          const heightDiff = this.__oldViewportHeight - viewportHeight;\n          adjustedProp = currentValue - heightDiff;\n        }\n        this.__oldViewportHeight = viewportHeight;\n      }\n\n      // Adjust vertically\n      if (propNames.end === PROP_NAMES_HORIZONTAL.end) {\n        const viewportWidth = Math.min(window.innerWidth, document.documentElement.clientWidth);\n        if (currentValue > viewportWidth && this.__oldViewportWidth) {\n          const widthDiff = this.__oldViewportWidth - viewportWidth;\n          adjustedProp = currentValue - widthDiff;\n        }\n        this.__oldViewportWidth = viewportWidth;\n      }\n    }\n    return adjustedProp;\n  }\n\n  /**\n   * Returns an object with CSS position properties to set,\n   * e.g. { top: \"100px\" }\n   */\n  // eslint-disable-next-line max-params\n  __calculatePositionInOneDimension(targetRect, overlayRect, noOverlap, propNames, overlay, shouldAlignStart) {\n    const cssPropNameToSet = shouldAlignStart ? propNames.start : propNames.end;\n    const cssPropNameToClear = shouldAlignStart ? propNames.end : propNames.start;\n    const currentValue = parseFloat(overlay.style[cssPropNameToSet] || getComputedStyle(overlay)[cssPropNameToSet]);\n    const adjustedValue = this.__adjustBottomProperty(cssPropNameToSet, propNames, currentValue);\n    const diff = overlayRect[shouldAlignStart ? propNames.start : propNames.end] - targetRect[noOverlap === shouldAlignStart ? propNames.end : propNames.start];\n    const valueToSet = adjustedValue ? `${adjustedValue}px` : `${currentValue + diff * (shouldAlignStart ? -1 : 1)}px`;\n    return {\n      [cssPropNameToSet]: valueToSet,\n      [cssPropNameToClear]: ''\n    };\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/overlay/src/vaadin-overlay-position-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/overlay/src/vaadin-overlay.js":
/*!************************************************************!*\
  !*** ./node_modules/@vaadin/overlay/src/vaadin-overlay.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Overlay\": () => (/* binding */ Overlay)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_lib_utils_flattened_nodes_observer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/lib/utils/flattened-nodes-observer.js */ \"./node_modules/@polymer/polymer/lib/utils/flattened-nodes-observer.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/polymer/lib/utils/render-status.js */ \"./node_modules/@polymer/polymer/lib/utils/render-status.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_templatize_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/polymer/lib/utils/templatize.js */ \"./node_modules/@polymer/polymer/lib/utils/templatize.js\");\n/* harmony import */ var _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/polymer/polymer-element.js */ \"./node_modules/@polymer/polymer/polymer-element.js\");\n/* harmony import */ var _vaadin_component_base_src_browser_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @vaadin/component-base/src/browser-utils.js */ \"./node_modules/@vaadin/component-base/src/browser-utils.js\");\n/* harmony import */ var _vaadin_component_base_src_controller_mixin_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @vaadin/component-base/src/controller-mixin.js */ \"./node_modules/@vaadin/component-base/src/controller-mixin.js\");\n/* harmony import */ var _vaadin_component_base_src_dir_mixin_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @vaadin/component-base/src/dir-mixin.js */ \"./node_modules/@vaadin/component-base/src/dir-mixin.js\");\n/* harmony import */ var _vaadin_component_base_src_focus_trap_controller_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @vaadin/component-base/src/focus-trap-controller.js */ \"./node_modules/@vaadin/component-base/src/focus-trap-controller.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n\n\n\n\n\n\n/**\n *\n * `<vaadin-overlay>` is a Web Component for creating overlays. The content of the overlay\n * can be populated in two ways: imperatively by using renderer callback function and\n * declaratively by using Polymer's Templates.\n *\n * ### Rendering\n *\n * By default, the overlay uses the content provided by using the renderer callback function.\n *\n * The renderer function provides `root`, `owner`, `model` arguments when applicable.\n * Generate DOM content by using `model` object properties if needed, append it to the `root`\n * element and control the state of the host element by accessing `owner`. Before generating new\n * content, users are able to check if there is already content in `root` for reusing it.\n *\n * ```html\n * <vaadin-overlay id=\"overlay\"></vaadin-overlay>\n * ```\n * ```js\n * const overlay = document.querySelector('#overlay');\n * overlay.renderer = function(root) {\n *  root.textContent = \"Overlay content\";\n * };\n * ```\n *\n * Renderer is called on the opening of the overlay and each time the related model is updated.\n * DOM generated during the renderer call can be reused\n * in the next renderer call and will be provided with the `root` argument.\n * On first call it will be empty.\n *\n * **NOTE:** when the renderer property is defined, the `<template>` content is not used.\n *\n * ### Templating\n *\n * Alternatively, the content can be provided with Polymer Template.\n * Overlay finds the first child template and uses that in case renderer callback function\n * is not provided. You can also set a custom template using the `template` property.\n *\n * After the content from the template is stamped, the `content` property\n * points to the content container.\n *\n * The overlay provides `forwardHostProp` when calling\n * `Polymer.Templatize.templatize` for the template, so that the bindings\n * from the parent scope propagate to the content.\n *\n * ### Styling\n *\n * To style the overlay content, use styles in the parent scope:\n *\n * - If the overlay is used in a component, then the component styles\n *   apply the overlay content.\n * - If the overlay is used in the global DOM scope, then global styles\n *   apply to the overlay content.\n *\n * See examples for styling the overlay content in the live demos.\n *\n * The following Shadow DOM parts are available for styling the overlay component itself:\n *\n * Part name  | Description\n * -----------|---------------------------------------------------------|\n * `backdrop` | Backdrop of the overlay\n * `overlay`  | Container for position/sizing/alignment of the content\n * `content`  | Content of the overlay\n *\n * The following state attributes are available for styling:\n *\n * Attribute | Description | Part\n * ---|---|---\n * `opening` | Applied just after the overlay is attached to the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n * `closing` | Applied just before the overlay is detached from the DOM. You can apply a CSS @keyframe animation for this state. | `:host`\n *\n * The following custom CSS properties are available for styling:\n *\n * Custom CSS property | Description | Default value\n * ---|---|---\n * `--vaadin-overlay-viewport-bottom` | Bottom offset of the visible viewport area | `0` or detected offset\n *\n * See [Styling Components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components) documentation.\n *\n * @fires {CustomEvent} opened-changed - Fired when the `opened` property changes.\n * @fires {CustomEvent} vaadin-overlay-open - Fired after the overlay is opened.\n * @fires {CustomEvent} vaadin-overlay-close - Fired before the overlay will be closed. If canceled the closing of the overlay is canceled as well.\n * @fires {CustomEvent} vaadin-overlay-closing - Fired when the overlay will be closed.\n * @fires {CustomEvent} vaadin-overlay-outside-click - Fired before the overlay will be closed on outside click. If canceled the closing of the overlay is canceled as well.\n * @fires {CustomEvent} vaadin-overlay-escape-press - Fired before the overlay will be closed on ESC button press. If canceled the closing of the overlay is canceled as well.\n *\n * @extends HTMLElement\n * @mixes ThemableMixin\n * @mixes DirMixin\n * @mixes ControllerMixin\n */\nclass Overlay extends (0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_8__.ThemableMixin)((0,_vaadin_component_base_src_dir_mixin_js__WEBPACK_IMPORTED_MODULE_6__.DirMixin)((0,_vaadin_component_base_src_controller_mixin_js__WEBPACK_IMPORTED_MODULE_5__.ControllerMixin)(_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_3__.PolymerElement))) {\n  static get template() {\n    return _polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_3__.html`\n      <style>\n        :host {\n          z-index: 200;\n          position: fixed;\n\n          /* Despite of what the names say, <vaadin-overlay> is just a container\n          for position/sizing/alignment. The actual overlay is the overlay part. */\n\n          /* Default position constraints: the entire viewport. Note: themes can\n          override this to introduce gaps between the overlay and the viewport. */\n          top: 0;\n          right: 0;\n          bottom: var(--vaadin-overlay-viewport-bottom);\n          left: 0;\n\n          /* Use flexbox alignment for the overlay part. */\n          display: flex;\n          flex-direction: column; /* makes dropdowns sizing easier */\n          /* Align to center by default. */\n          align-items: center;\n          justify-content: center;\n\n          /* Allow centering when max-width/max-height applies. */\n          margin: auto;\n\n          /* The host is not clickable, only the overlay part is. */\n          pointer-events: none;\n\n          /* Remove tap highlight on touch devices. */\n          -webkit-tap-highlight-color: transparent;\n\n          /* CSS API for host */\n          --vaadin-overlay-viewport-bottom: 0;\n        }\n\n        :host([hidden]),\n        :host(:not([opened]):not([closing])) {\n          display: none !important;\n        }\n\n        [part='overlay'] {\n          -webkit-overflow-scrolling: touch;\n          overflow: auto;\n          pointer-events: auto;\n\n          /* Prevent overflowing the host in MSIE 11 */\n          max-width: 100%;\n          box-sizing: border-box;\n\n          -webkit-tap-highlight-color: initial; /* reenable tap highlight inside */\n        }\n\n        [part='backdrop'] {\n          z-index: -1;\n          content: '';\n          background: rgba(0, 0, 0, 0.5);\n          position: fixed;\n          top: 0;\n          left: 0;\n          bottom: 0;\n          right: 0;\n          pointer-events: auto;\n        }\n      </style>\n\n      <div id=\"backdrop\" part=\"backdrop\" hidden$=\"[[!withBackdrop]]\"></div>\n      <div part=\"overlay\" id=\"overlay\" tabindex=\"0\">\n        <div part=\"content\" id=\"content\">\n          <slot></slot>\n        </div>\n      </div>\n    `;\n  }\n  static get is() {\n    return 'vaadin-overlay';\n  }\n  static get properties() {\n    return {\n      /**\n       * When true, the overlay is visible and attached to body.\n       */\n      opened: {\n        type: Boolean,\n        notify: true,\n        observer: '_openedChanged',\n        reflectToAttribute: true\n      },\n      /**\n       * Owner element passed with renderer function\n       * @type {HTMLElement}\n       */\n      owner: Element,\n      /**\n       * Custom function for rendering the content of the overlay.\n       * Receives three arguments:\n       *\n       * - `root` The root container DOM element. Append your content to it.\n       * - `owner` The host element of the renderer function.\n       * - `model` The object with the properties related with rendering.\n       * @type {OverlayRenderer | null | undefined}\n       */\n      renderer: Function,\n      /**\n       * The template of the overlay content.\n       * @type {HTMLTemplateElement | null | undefined}\n       */\n      template: {\n        type: Object,\n        notify: true\n      },\n      /**\n       * References the content container after the template is stamped.\n       * @type {!HTMLElement | undefined}\n       */\n      content: {\n        type: Object,\n        notify: true\n      },\n      /**\n       * When true the overlay has backdrop on top of content when opened.\n       * @type {boolean}\n       */\n      withBackdrop: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true\n      },\n      /**\n       * Object with properties that is passed to `renderer` function\n       */\n      model: Object,\n      /**\n       * When true the overlay won't disable the main content, showing\n       * it doesn’t change the functionality of the user interface.\n       * @type {boolean}\n       */\n      modeless: {\n        type: Boolean,\n        value: false,\n        reflectToAttribute: true,\n        observer: '_modelessChanged'\n      },\n      /**\n       * When set to true, the overlay is hidden. This also closes the overlay\n       * immediately in case there is a closing animation in progress.\n       * @type {boolean}\n       */\n      hidden: {\n        type: Boolean,\n        reflectToAttribute: true,\n        observer: '_hiddenChanged'\n      },\n      /**\n       * When true move focus to the first focusable element in the overlay,\n       * or to the overlay if there are no focusable elements.\n       * @type {boolean}\n       */\n      focusTrap: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Set to true to enable restoring of focus when overlay is closed.\n       * @type {boolean}\n       */\n      restoreFocusOnClose: {\n        type: Boolean,\n        value: false\n      },\n      /**\n       * Set to specify the element which should be focused on overlay close,\n       * if `restoreFocusOnClose` is set to true.\n       * @type {HTMLElement}\n       */\n      restoreFocusNode: {\n        type: HTMLElement\n      },\n      /** @private */\n      _mouseDownInside: {\n        type: Boolean\n      },\n      /** @private */\n      _mouseUpInside: {\n        type: Boolean\n      },\n      /** @private */\n      _instance: {\n        type: Object\n      },\n      /** @private */\n      _originalContentPart: Object,\n      /** @private */\n      _contentNodes: Array,\n      /** @private */\n      _oldOwner: Element,\n      /** @private */\n      _oldModel: Object,\n      /** @private */\n      _oldTemplate: Object,\n      /** @private */\n      _oldRenderer: Object,\n      /** @private */\n      _oldOpened: Boolean\n    };\n  }\n  static get observers() {\n    return ['_templateOrRendererChanged(template, renderer, owner, model, opened)'];\n  }\n  constructor() {\n    super();\n    this._boundMouseDownListener = this._mouseDownListener.bind(this);\n    this._boundMouseUpListener = this._mouseUpListener.bind(this);\n    this._boundOutsideClickListener = this._outsideClickListener.bind(this);\n    this._boundKeydownListener = this._keydownListener.bind(this);\n    this._observer = new _polymer_polymer_lib_utils_flattened_nodes_observer_js__WEBPACK_IMPORTED_MODULE_0__.FlattenedNodesObserver(this, info => {\n      this._setTemplateFromNodes(info.addedNodes);\n    });\n\n    // Listener for preventing closing of the paper-dialog and all components extending `iron-overlay-behavior`.\n    this._boundIronOverlayCanceledListener = this._ironOverlayCanceled.bind(this);\n\n    /* c8 ignore next 3 */\n    if (_vaadin_component_base_src_browser_utils_js__WEBPACK_IMPORTED_MODULE_4__.isIOS) {\n      this._boundIosResizeListener = () => this._detectIosNavbar();\n    }\n    this.__focusTrapController = new _vaadin_component_base_src_focus_trap_controller_js__WEBPACK_IMPORTED_MODULE_7__.FocusTrapController(this);\n  }\n\n  /** @protected */\n  ready() {\n    super.ready();\n    this._observer.flush();\n\n    // Need to add dummy click listeners to this and the backdrop or else\n    // the document click event listener (_outsideClickListener) may never\n    // get invoked on iOS Safari (reproducible in <vaadin-dialog>\n    // and <vaadin-context-menu>).\n    this.addEventListener('click', () => {});\n    this.$.backdrop.addEventListener('click', () => {});\n    this.addController(this.__focusTrapController);\n  }\n\n  /** @private */\n  _detectIosNavbar() {\n    /* c8 ignore next 15 */\n    if (!this.opened) {\n      return;\n    }\n    const innerHeight = window.innerHeight;\n    const innerWidth = window.innerWidth;\n    const landscape = innerWidth > innerHeight;\n    const clientHeight = document.documentElement.clientHeight;\n    if (landscape && clientHeight > innerHeight) {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', `${clientHeight - innerHeight}px`);\n    } else {\n      this.style.setProperty('--vaadin-overlay-viewport-bottom', '0');\n    }\n  }\n\n  /**\n   * @param {!Array<!Element>} nodes\n   * @protected\n   */\n  _setTemplateFromNodes(nodes) {\n    this.template = nodes.find(node => node.localName && node.localName === 'template') || this.template;\n  }\n\n  /**\n   * @param {Event=} sourceEvent\n   * @event vaadin-overlay-close\n   * fired before the `vaadin-overlay` will be closed. If canceled the closing of the overlay is canceled as well.\n   */\n  close(sourceEvent) {\n    const evt = new CustomEvent('vaadin-overlay-close', {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        sourceEvent\n      }\n    });\n    this.dispatchEvent(evt);\n    if (!evt.defaultPrevented) {\n      this.opened = false;\n    }\n  }\n\n  /** @protected */\n  connectedCallback() {\n    super.connectedCallback();\n\n    /* c8 ignore next 3 */\n    if (this._boundIosResizeListener) {\n      this._detectIosNavbar();\n      window.addEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  /** @protected */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    /* c8 ignore next 3 */\n    if (this._boundIosResizeListener) {\n      window.removeEventListener('resize', this._boundIosResizeListener);\n    }\n  }\n\n  /**\n   * Requests an update for the content of the overlay.\n   * While performing the update, it invokes the renderer passed in the `renderer` property.\n   *\n   * It is not guaranteed that the update happens immediately (synchronously) after it is requested.\n   */\n  requestContentUpdate() {\n    if (this.renderer) {\n      this.renderer.call(this.owner, this.content, this.owner, this.model);\n    }\n  }\n\n  /** @private */\n  _ironOverlayCanceled(event) {\n    event.preventDefault();\n  }\n\n  /** @private */\n  _mouseDownListener(event) {\n    this._mouseDownInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /** @private */\n  _mouseUpListener(event) {\n    this._mouseUpInside = event.composedPath().indexOf(this.$.overlay) >= 0;\n  }\n\n  /**\n   * We need to listen on 'click' / 'tap' event and capture it and close the overlay before\n   * propagating the event to the listener in the button. Otherwise, if the clicked button would call\n   * open(), this would happen: https://www.youtube.com/watch?v=Z86V_ICUCD4\n   *\n   * @event vaadin-overlay-outside-click\n   * fired before the `vaadin-overlay` will be closed on outside click. If canceled the closing of the overlay is canceled as well.\n   *\n   * @private\n   */\n  _outsideClickListener(event) {\n    if (event.composedPath().includes(this.$.overlay) || this._mouseDownInside || this._mouseUpInside) {\n      this._mouseDownInside = false;\n      this._mouseUpInside = false;\n      return;\n    }\n    if (!this._last) {\n      return;\n    }\n    const evt = new CustomEvent('vaadin-overlay-outside-click', {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        sourceEvent: event\n      }\n    });\n    this.dispatchEvent(evt);\n    if (this.opened && !evt.defaultPrevented) {\n      this.close(event);\n    }\n  }\n\n  /**\n   * @event vaadin-overlay-escape-press\n   * fired before the `vaadin-overlay` will be closed on ESC button press. If canceled the closing of the overlay is canceled as well.\n   *\n   * @private\n   */\n  _keydownListener(event) {\n    if (!this._last) {\n      return;\n    }\n\n    // Only close modeless overlay on Esc press when it contains focus\n    if (this.modeless && !event.composedPath().includes(this.$.overlay)) {\n      return;\n    }\n    if (event.key === 'Escape') {\n      const evt = new CustomEvent('vaadin-overlay-escape-press', {\n        bubbles: true,\n        cancelable: true,\n        detail: {\n          sourceEvent: event\n        }\n      });\n      this.dispatchEvent(evt);\n      if (this.opened && !evt.defaultPrevented) {\n        this.close(event);\n      }\n    }\n  }\n\n  /** @protected */\n  _ensureTemplatized() {\n    this._setTemplateFromNodes(Array.from(this.children));\n  }\n\n  /**\n   * @event vaadin-overlay-open\n   * fired after the `vaadin-overlay` is opened.\n   *\n   * @private\n   */\n  _openedChanged(opened, wasOpened) {\n    if (!this._instance) {\n      this._ensureTemplatized();\n    }\n    if (opened) {\n      // Store focused node.\n      this.__restoreFocusNode = this._getActiveElement();\n      this._animatedOpening();\n      (0,_polymer_polymer_lib_utils_render_status_js__WEBPACK_IMPORTED_MODULE_1__.afterNextRender)(this, () => {\n        if (this.focusTrap) {\n          this.__focusTrapController.trapFocus(this.$.overlay);\n        }\n        const evt = new CustomEvent('vaadin-overlay-open', {\n          bubbles: true\n        });\n        this.dispatchEvent(evt);\n      });\n      document.addEventListener('keydown', this._boundKeydownListener);\n      if (!this.modeless) {\n        this._addGlobalListeners();\n      }\n    } else if (wasOpened) {\n      if (this.focusTrap) {\n        this.__focusTrapController.releaseFocus();\n      }\n      this._animatedClosing();\n      document.removeEventListener('keydown', this._boundKeydownListener);\n      if (!this.modeless) {\n        this._removeGlobalListeners();\n      }\n    }\n  }\n\n  /** @private */\n  _hiddenChanged(hidden) {\n    if (hidden && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n  }\n\n  /**\n   * @return {boolean}\n   * @protected\n   */\n  _shouldAnimate() {\n    const name = getComputedStyle(this).getPropertyValue('animation-name');\n    const hidden = getComputedStyle(this).getPropertyValue('display') === 'none';\n    return !hidden && name && name !== 'none';\n  }\n\n  /**\n   * @param {string} type\n   * @param {Function} callback\n   * @protected\n   */\n  _enqueueAnimation(type, callback) {\n    const handler = `__${type}Handler`;\n    const listener = event => {\n      if (event && event.target !== this) {\n        return;\n      }\n      callback();\n      this.removeEventListener('animationend', listener);\n      delete this[handler];\n    };\n    this[handler] = listener;\n    this.addEventListener('animationend', listener);\n  }\n\n  /**\n   * @param {string} type\n   * @protected\n   */\n  _flushAnimation(type) {\n    const handler = `__${type}Handler`;\n    if (typeof this[handler] === 'function') {\n      this[handler]();\n    }\n  }\n\n  /** @protected */\n  _animatedOpening() {\n    if (this.parentNode === document.body && this.hasAttribute('closing')) {\n      this._flushAnimation('closing');\n    }\n    this._attachOverlay();\n    if (!this.modeless) {\n      this._enterModalState();\n    }\n    this.setAttribute('opening', '');\n    if (this._shouldAnimate()) {\n      this._enqueueAnimation('opening', () => {\n        this._finishOpening();\n      });\n    } else {\n      this._finishOpening();\n    }\n  }\n\n  /** @protected */\n  _attachOverlay() {\n    this._placeholder = document.createComment('vaadin-overlay-placeholder');\n    this.parentNode.insertBefore(this._placeholder, this);\n    document.body.appendChild(this);\n    this.bringToFront();\n  }\n\n  /** @protected */\n  _finishOpening() {\n    document.addEventListener('iron-overlay-canceled', this._boundIronOverlayCanceledListener);\n    this.removeAttribute('opening');\n  }\n\n  /** @protected */\n  _finishClosing() {\n    document.removeEventListener('iron-overlay-canceled', this._boundIronOverlayCanceledListener);\n    this._detachOverlay();\n    this.$.overlay.style.removeProperty('pointer-events');\n    this.removeAttribute('closing');\n  }\n\n  /**\n   * @event vaadin-overlay-closing\n   * Fired when the overlay will be closed.\n   *\n   * @protected\n   */\n  _animatedClosing() {\n    if (this.hasAttribute('opening')) {\n      this._flushAnimation('opening');\n    }\n    if (this._placeholder) {\n      this._exitModalState();\n\n      // Use this.restoreFocusNode if specified, otherwise fallback to the node\n      // which was focused before opening the overlay.\n      const restoreFocusNode = this.restoreFocusNode || this.__restoreFocusNode;\n      if (this.restoreFocusOnClose && restoreFocusNode) {\n        // If the activeElement is `<body>` or inside the overlay,\n        // we are allowed to restore the focus. In all the other\n        // cases focus might have been moved elsewhere by another\n        // component or by the user interaction (e.g. click on a\n        // button outside the overlay).\n        const activeElement = this._getActiveElement();\n        if (activeElement === document.body || this._deepContains(activeElement)) {\n          // Focusing the restoreFocusNode doesn't always work synchronously on Firefox and Safari\n          // (e.g. combo-box overlay close on outside click).\n          setTimeout(() => restoreFocusNode.focus());\n        }\n        this.__restoreFocusNode = null;\n      }\n      this.setAttribute('closing', '');\n      this.dispatchEvent(new CustomEvent('vaadin-overlay-closing'));\n      if (this._shouldAnimate()) {\n        this._enqueueAnimation('closing', () => {\n          this._finishClosing();\n        });\n      } else {\n        this._finishClosing();\n      }\n    }\n  }\n\n  /** @protected */\n  _detachOverlay() {\n    this._placeholder.parentNode.insertBefore(this, this._placeholder);\n    this._placeholder.parentNode.removeChild(this._placeholder);\n  }\n\n  /**\n   * Returns all attached overlays in visual stacking order.\n   * @private\n   */\n  static get __attachedInstances() {\n    return Array.from(document.body.children).filter(el => el instanceof Overlay && !el.hasAttribute('closing')).sort((a, b) => a.__zIndex - b.__zIndex || 0);\n  }\n\n  /**\n   * Returns true if this is the last one in the opened overlays stack\n   * @return {boolean}\n   * @protected\n   */\n  get _last() {\n    return this === Overlay.__attachedInstances.pop();\n  }\n\n  /** @private */\n  _modelessChanged(modeless) {\n    if (!modeless) {\n      if (this.opened) {\n        this._addGlobalListeners();\n        this._enterModalState();\n      }\n    } else {\n      this._removeGlobalListeners();\n      this._exitModalState();\n    }\n  }\n\n  /** @protected */\n  _addGlobalListeners() {\n    document.addEventListener('mousedown', this._boundMouseDownListener);\n    document.addEventListener('mouseup', this._boundMouseUpListener);\n    // Firefox leaks click to document on contextmenu even if prevented\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=990614\n    document.documentElement.addEventListener('click', this._boundOutsideClickListener, true);\n  }\n\n  /** @protected */\n  _enterModalState() {\n    if (document.body.style.pointerEvents !== 'none') {\n      // Set body pointer-events to 'none' to disable mouse interactions with\n      // other document nodes.\n      this._previousDocumentPointerEvents = document.body.style.pointerEvents;\n      document.body.style.pointerEvents = 'none';\n    }\n\n    // Disable pointer events in other attached overlays\n    Overlay.__attachedInstances.forEach(el => {\n      if (el !== this) {\n        el.shadowRoot.querySelector('[part=\"overlay\"]').style.pointerEvents = 'none';\n      }\n    });\n  }\n\n  /** @protected */\n  _removeGlobalListeners() {\n    document.removeEventListener('mousedown', this._boundMouseDownListener);\n    document.removeEventListener('mouseup', this._boundMouseUpListener);\n    document.documentElement.removeEventListener('click', this._boundOutsideClickListener, true);\n  }\n\n  /** @protected */\n  _exitModalState() {\n    if (this._previousDocumentPointerEvents !== undefined) {\n      // Restore body pointer-events\n      document.body.style.pointerEvents = this._previousDocumentPointerEvents;\n      delete this._previousDocumentPointerEvents;\n    }\n\n    // Restore pointer events in the previous overlay(s)\n    const instances = Overlay.__attachedInstances;\n    let el;\n    // Use instances.pop() to ensure the reverse order\n    while (el = instances.pop()) {\n      if (el === this) {\n        // Skip the current instance\n        continue;\n      }\n      el.shadowRoot.querySelector('[part=\"overlay\"]').style.removeProperty('pointer-events');\n      if (!el.modeless) {\n        // Stop after the last modal\n        break;\n      }\n    }\n  }\n\n  /** @protected */\n  _removeOldContent() {\n    if (!this.content || !this._contentNodes) {\n      return;\n    }\n    this._observer.disconnect();\n    this._contentNodes.forEach(node => {\n      if (node.parentNode === this.content) {\n        this.content.removeChild(node);\n      }\n    });\n    if (this._originalContentPart) {\n      // Restore the original <div part=\"content\">\n      this.$.content.parentNode.replaceChild(this._originalContentPart, this.$.content);\n      this.$.content = this._originalContentPart;\n      this._originalContentPart = undefined;\n    }\n    this._observer.connect();\n    this._contentNodes = undefined;\n    this.content = undefined;\n  }\n\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @protected\n   */\n  _stampOverlayTemplate(template) {\n    this._removeOldContent();\n    if (!template._Templatizer) {\n      template._Templatizer = (0,_polymer_polymer_lib_utils_templatize_js__WEBPACK_IMPORTED_MODULE_2__.templatize)(template, this, {\n        forwardHostProp(prop, value) {\n          if (this._instance) {\n            this._instance.forwardHostProp(prop, value);\n          }\n        }\n      });\n    }\n    this._instance = new template._Templatizer({});\n    this._contentNodes = Array.from(this._instance.root.childNodes);\n    const templateRoot = template._templateRoot || (template._templateRoot = template.getRootNode());\n    if (templateRoot !== document) {\n      if (!this.$.content.shadowRoot) {\n        this.$.content.attachShadow({\n          mode: 'open'\n        });\n      }\n      let scopeCssText = Array.from(templateRoot.querySelectorAll('style')).reduce((result, style) => result + style.textContent, '');\n\n      // The overlay root’s :host styles should not apply inside the overlay\n      scopeCssText = scopeCssText.replace(/:host/g, ':host-nomatch');\n      if (scopeCssText) {\n        // Append a style to the content shadowRoot\n        const style = document.createElement('style');\n        style.textContent = scopeCssText;\n        this.$.content.shadowRoot.appendChild(style);\n        this._contentNodes.unshift(style);\n      }\n      this.$.content.shadowRoot.appendChild(this._instance.root);\n      this.content = this.$.content.shadowRoot;\n    } else {\n      this.appendChild(this._instance.root);\n      this.content = this;\n    }\n  }\n\n  /** @private */\n  _removeNewRendererOrTemplate(template, oldTemplate, renderer, oldRenderer) {\n    if (template !== oldTemplate) {\n      this.template = undefined;\n    } else if (renderer !== oldRenderer) {\n      this.renderer = undefined;\n    }\n  }\n\n  /** @private */\n  // eslint-disable-next-line max-params\n  _templateOrRendererChanged(template, renderer, owner, model, opened) {\n    if (template && renderer) {\n      this._removeNewRendererOrTemplate(template, this._oldTemplate, renderer, this._oldRenderer);\n      throw new Error('You should only use either a renderer or a template for overlay content');\n    }\n    const ownerOrModelChanged = this._oldOwner !== owner || this._oldModel !== model;\n    this._oldModel = model;\n    this._oldOwner = owner;\n    const templateChanged = this._oldTemplate !== template;\n    this._oldTemplate = template;\n    const rendererChanged = this._oldRenderer !== renderer;\n    this._oldRenderer = renderer;\n    const openedChanged = this._oldOpened !== opened;\n    this._oldOpened = opened;\n    if (rendererChanged) {\n      this.content = this;\n      this.content.innerHTML = '';\n      // Whenever a Lit-based renderer is used, it assigns a Lit part to the node it was rendered into.\n      // When clearing the rendered content, this part needs to be manually disposed of.\n      // Otherwise, using a Lit-based renderer on the same node will throw an exception or render nothing afterward.\n      delete this.content._$litPart$;\n    }\n    if (template && templateChanged) {\n      this._stampOverlayTemplate(template);\n    } else if (renderer && (rendererChanged || openedChanged || ownerOrModelChanged)) {\n      if (opened) {\n        this.requestContentUpdate();\n      }\n    }\n  }\n\n  /**\n   * @return {!Element}\n   * @protected\n   */\n  _getActiveElement() {\n    // Document.activeElement can be null\n    // https://developer.mozilla.org/en-US/docs/Web/API/Document/activeElement\n    let active = document.activeElement || document.body;\n    while (active.shadowRoot && active.shadowRoot.activeElement) {\n      active = active.shadowRoot.activeElement;\n    }\n    return active;\n  }\n\n  /**\n   * @param {!Node} node\n   * @return {boolean}\n   * @protected\n   */\n  _deepContains(node) {\n    if (this.contains(node)) {\n      return true;\n    }\n    let n = node;\n    const doc = node.ownerDocument;\n    // Walk from node to `this` or `document`\n    while (n && n !== doc && n !== this) {\n      n = n.parentNode || n.host;\n    }\n    return n === this;\n  }\n\n  /**\n   * Brings the overlay as visually the frontmost one\n   */\n  bringToFront() {\n    let zIndex = '';\n    const frontmost = Overlay.__attachedInstances.filter(o => o !== this).pop();\n    if (frontmost) {\n      const frontmostZIndex = frontmost.__zIndex;\n      zIndex = frontmostZIndex + 1;\n    }\n    this.style.zIndex = zIndex;\n    this.__zIndex = zIndex || parseFloat(getComputedStyle(this).zIndex);\n  }\n}\ncustomElements.define(Overlay.is, Overlay);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/overlay/src/vaadin-overlay.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/overlay/theme/material/vaadin-overlay-styles.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@vaadin/overlay/theme/material/vaadin-overlay-styles.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _vaadin_vaadin_material_styles_mixins_overlay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vaadin/vaadin-material-styles/mixins/overlay.js */ \"./node_modules/@vaadin/vaadin-material-styles/mixins/overlay.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n\n\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.registerStyles)('vaadin-overlay', _vaadin_vaadin_material_styles_mixins_overlay_js__WEBPACK_IMPORTED_MODULE_0__.overlay, {\n  moduleId: 'material-vaadin-overlay'\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9vdmVybGF5L3RoZW1lL21hdGVyaWFsL3ZhYWRpbi1vdmVybGF5LXN0eWxlcy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBO0FBRUE7QUFBQTtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL292ZXJsYXkvdGhlbWUvbWF0ZXJpYWwvdmFhZGluLW92ZXJsYXktc3R5bGVzLmpzP2VjYmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgb3ZlcmxheSB9IGZyb20gJ0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9taXhpbnMvb3ZlcmxheS5qcyc7XG5pbXBvcnQgeyByZWdpc3RlclN0eWxlcyB9IGZyb20gJ0B2YWFkaW4vdmFhZGluLXRoZW1hYmxlLW1peGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi5qcyc7XG5cbnJlZ2lzdGVyU3R5bGVzKCd2YWFkaW4tb3ZlcmxheScsIG92ZXJsYXksIHsgbW9kdWxlSWQ6ICdtYXRlcmlhbC12YWFkaW4tb3ZlcmxheScgfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/overlay/theme/material/vaadin-overlay-styles.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/overlay/theme/material/vaadin-overlay.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@vaadin/overlay/theme/material/vaadin-overlay.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _vaadin_overlay_styles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vaadin-overlay-styles.js */ \"./node_modules/@vaadin/overlay/theme/material/vaadin-overlay-styles.js\");\n/* harmony import */ var _src_vaadin_overlay_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../src/vaadin-overlay.js */ \"./node_modules/@vaadin/overlay/src/vaadin-overlay.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi9vdmVybGF5L3RoZW1lL21hdGVyaWFsL3ZhYWRpbi1vdmVybGF5LmpzLmpzIiwibWFwcGluZ3MiOiI7OztBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL292ZXJsYXkvdGhlbWUvbWF0ZXJpYWwvdmFhZGluLW92ZXJsYXkuanM/NzgzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vdmFhZGluLW92ZXJsYXktc3R5bGVzLmpzJztcbmltcG9ydCAnLi4vLi4vc3JjL3ZhYWRpbi1vdmVybGF5LmpzJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/overlay/theme/material/vaadin-overlay.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/color.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/color.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"colorBase\": () => (/* binding */ colorBase),\n/* harmony export */   \"colorDark\": () => (/* binding */ colorDark),\n/* harmony export */   \"colorLight\": () => (/* binding */ colorLight)\n/* harmony export */ });\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version.js */ \"./node_modules/@vaadin/vaadin-material-styles/version.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\nconst colorLight = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css`\n  :host {\n    /* Text colors */\n    --material-body-text-color: var(--light-theme-text-color, rgba(0, 0, 0, 0.87));\n    --material-secondary-text-color: var(--light-theme-secondary-color, rgba(0, 0, 0, 0.54));\n    --material-disabled-text-color: var(--light-theme-disabled-color, rgba(0, 0, 0, 0.38));\n\n    /* Primary colors */\n    --material-primary-color: var(--primary-color, #6200ee);\n    --material-primary-contrast-color: var(--dark-theme-base-color, #fff);\n    --material-primary-text-color: var(--material-primary-color);\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #b00020);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--light-theme-background-color, #fff);\n    --material-secondary-background-color: var(--light-theme-secondary-background-color, #f5f5f5);\n    --material-disabled-color: rgba(0, 0, 0, 0.26);\n\n    /* Divider colors */\n    --material-divider-color: rgba(0, 0, 0, 0.12);\n\n    /* Undocumented internal properties (prefixed with three dashes) */\n\n    /* Text field tweaks */\n    --_material-text-field-input-line-background-color: initial;\n    --_material-text-field-input-line-opacity: initial;\n    --_material-text-field-input-line-hover-opacity: initial;\n    --_material-text-field-focused-label-opacity: initial;\n\n    /* Button tweaks */\n    --_material-button-raised-background-color: initial;\n    --_material-button-outline-color: initial;\n\n    /* Grid tweaks */\n    --_material-grid-row-hover-background-color: initial;\n\n    /* Split layout tweaks */\n    --_material-split-layout-splitter-background-color: initial;\n\n    background-color: var(--material-background-color);\n    color: var(--material-body-text-color);\n  }\n\n  [theme~='dark'] {\n    /* Text colors */\n    --material-body-text-color: var(--dark-theme-text-color, rgba(255, 255, 255, 1));\n    --material-secondary-text-color: var(--dark-theme-secondary-color, rgba(255, 255, 255, 0.7));\n    --material-disabled-text-color: var(--dark-theme-disabled-color, rgba(255, 255, 255, 0.5));\n\n    /* Primary colors */\n    --material-primary-color: var(--light-primary-color, #7e3ff2);\n    --material-primary-text-color: #b794f6;\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #de2839);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--dark-theme-background-color, #303030);\n    --material-secondary-background-color: var(--dark-theme-secondary-background-color, #3b3b3b);\n    --material-disabled-color: rgba(255, 255, 255, 0.3);\n\n    /* Divider colors */\n    --material-divider-color: rgba(255, 255, 255, 0.12);\n\n    /* Undocumented internal properties (prefixed with three dashes) */\n\n    /* Text field tweaks */\n    --_material-text-field-input-line-background-color: #fff;\n    --_material-text-field-input-line-opacity: 0.7;\n    --_material-text-field-input-line-hover-opacity: 1;\n    --_material-text-field-focused-label-opacity: 1;\n\n    /* Button tweaks */\n    --_material-button-raised-background-color: rgba(255, 255, 255, 0.08);\n    --_material-button-outline-color: rgba(255, 255, 255, 0.2);\n\n    /* Grid tweaks */\n    --_material-grid-row-hover-background-color: rgba(255, 255, 255, 0.08);\n    --_material-grid-row-selected-overlay-opacity: 0.16;\n\n    /* Split layout tweaks */\n    --_material-split-layout-splitter-background-color: rgba(255, 255, 255, 0.8);\n\n    background-color: var(--material-background-color);\n    color: var(--material-body-text-color);\n  }\n\n  a {\n    color: inherit;\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.registerStyles)('', colorLight, {\n  moduleId: 'material-color-light'\n});\nconst colorDark = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css`\n  :host {\n    /* Text colors */\n    --material-body-text-color: var(--dark-theme-text-color, rgba(255, 255, 255, 1));\n    --material-secondary-text-color: var(--dark-theme-secondary-color, rgba(255, 255, 255, 0.7));\n    --material-disabled-text-color: var(--dark-theme-disabled-color, rgba(255, 255, 255, 0.5));\n\n    /* Primary colors */\n    --material-primary-color: var(--light-primary-color, #7e3ff2);\n    --material-primary-text-color: #b794f6;\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #de2839);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--dark-theme-background-color, #303030);\n    --material-secondary-background-color: var(--dark-theme-secondary-background-color, #3b3b3b);\n    --material-disabled-color: rgba(255, 255, 255, 0.3);\n\n    /* Divider colors */\n    --material-divider-color: rgba(255, 255, 255, 0.12);\n\n    /* Undocumented internal properties (prefixed with three dashes) */\n\n    /* Text field tweaks */\n    --_material-text-field-input-line-background-color: #fff;\n    --_material-text-field-input-line-opacity: 0.7;\n    --_material-text-field-input-line-hover-opacity: 1;\n    --_material-text-field-focused-label-opacity: 1;\n\n    /* Button tweaks */\n    --_material-button-raised-background-color: rgba(255, 255, 255, 0.08);\n    --_material-button-outline-color: rgba(255, 255, 255, 0.2);\n\n    /* Grid tweaks */\n    --_material-grid-row-hover-background-color: rgba(255, 255, 255, 0.08);\n    --_material-grid-row-selected-overlay-opacity: 0.16;\n\n    /* Split layout tweaks */\n    --_material-split-layout-splitter-background-color: rgba(255, 255, 255, 0.8);\n\n    background-color: var(--material-background-color);\n    color: var(--material-body-text-color);\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.registerStyles)('', colorDark, {\n  moduleId: 'material-color-dark'\n});\nconst colorBase = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css`\n  :host {\n    /* Text colors */\n    --material-body-text-color: var(--light-theme-text-color, rgba(0, 0, 0, 0.87));\n    --material-secondary-text-color: var(--light-theme-secondary-color, rgba(0, 0, 0, 0.54));\n    --material-disabled-text-color: var(--light-theme-disabled-color, rgba(0, 0, 0, 0.38));\n\n    /* Primary colors */\n    --material-primary-color: var(--primary-color, #6200ee);\n    --material-primary-contrast-color: var(--dark-theme-base-color, #fff);\n    --material-primary-text-color: var(--material-primary-color);\n\n    /* Error colors */\n    --material-error-color: var(--error-color, #b00020);\n    --material-error-text-color: var(--material-error-color);\n\n    /* Background colors */\n    --material-background-color: var(--light-theme-background-color, #fff);\n    --material-secondary-background-color: var(--light-theme-secondary-background-color, #f5f5f5);\n    --material-disabled-color: rgba(0, 0, 0, 0.26);\n\n    /* Divider colors */\n    --material-divider-color: rgba(0, 0, 0, 0.12);\n  }\n`;\nconst $tpl = document.createElement('template');\n$tpl.innerHTML = `<style>${colorBase.toString().replace(':host', 'html')}</style>`;\ndocument.head.appendChild($tpl.content);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/color.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/mixins/loader.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/mixins/loader.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"loader\": () => (/* binding */ loader)\n/* harmony export */ });\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\nconst loader = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css`\n  [part~='loader'] {\n    height: 2px;\n    background: var(--material-background-color)\n      linear-gradient(\n        90deg,\n        transparent 0%,\n        transparent 20%,\n        var(--material-primary-color) 20%,\n        var(--material-primary-color) 40%,\n        transparent 40%,\n        transparent 60%,\n        var(--material-primary-color) 60%,\n        var(--material-primary-color) 80%,\n        transparent 80%,\n        transparent 100%\n      )\n      0 0 / 400% 100% repeat-x;\n    opacity: 0;\n  }\n\n  :host(:not([loading])) [part~='loader'] {\n    display: none;\n  }\n\n  :host([loading]) [part='loader'] {\n    animation: 3s linear infinite material-loader-progress, 0.3s 0.1s both material-loader-fade-in;\n  }\n\n  [part='loader']::before {\n    content: '';\n    display: block;\n    height: 100%;\n    opacity: 0.16;\n    background: var(--material-primary-color);\n  }\n\n  @keyframes material-loader-fade-in {\n    0% {\n      opacity: 0;\n    }\n\n    100% {\n      opacity: 1;\n    }\n  }\n\n  @keyframes material-loader-progress {\n    0% {\n      background-position: 0 0;\n      background-size: 300% 100%;\n    }\n\n    33% {\n      background-position: -100% 0;\n      background-size: 400% 100%;\n    }\n\n    67% {\n      background-position: -200% 0;\n      background-size: 250% 100%;\n    }\n\n    100% {\n      background-position: -300% 0;\n      background-size: 300% 100%;\n    }\n  }\n\n  /* RTL specific styles */\n\n  @keyframes material-loader-progress-rtl {\n    0% {\n      background-position: 100% 0;\n      background-size: 300% 100%;\n    }\n\n    33% {\n      background-position: 200% 0;\n      background-size: 400% 100%;\n    }\n\n    67% {\n      background-position: 300% 0;\n      background-size: 250% 100%;\n    }\n\n    100% {\n      background-position: 400% 0;\n      background-size: 300% 100%;\n    }\n  }\n\n  :host([loading][dir='rtl']) [part='loader'] {\n    animation: 3s linear infinite material-loader-progress-rtl, 0.3s 0.1s both material-loader-fade-in;\n  }\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL21peGlucy9sb2FkZXIuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL21peGlucy9sb2FkZXIuanM/NDg3YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjIgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuaW1wb3J0ICcuLi9jb2xvci5qcyc7XG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAdmFhZGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4uanMnO1xuXG5jb25zdCBsb2FkZXIgPSBjc3NgXG4gIFtwYXJ0fj0nbG9hZGVyJ10ge1xuICAgIGhlaWdodDogMnB4O1xuICAgIGJhY2tncm91bmQ6IHZhcigtLW1hdGVyaWFsLWJhY2tncm91bmQtY29sb3IpXG4gICAgICBsaW5lYXItZ3JhZGllbnQoXG4gICAgICAgIDkwZGVnLFxuICAgICAgICB0cmFuc3BhcmVudCAwJSxcbiAgICAgICAgdHJhbnNwYXJlbnQgMjAlLFxuICAgICAgICB2YXIoLS1tYXRlcmlhbC1wcmltYXJ5LWNvbG9yKSAyMCUsXG4gICAgICAgIHZhcigtLW1hdGVyaWFsLXByaW1hcnktY29sb3IpIDQwJSxcbiAgICAgICAgdHJhbnNwYXJlbnQgNDAlLFxuICAgICAgICB0cmFuc3BhcmVudCA2MCUsXG4gICAgICAgIHZhcigtLW1hdGVyaWFsLXByaW1hcnktY29sb3IpIDYwJSxcbiAgICAgICAgdmFyKC0tbWF0ZXJpYWwtcHJpbWFyeS1jb2xvcikgODAlLFxuICAgICAgICB0cmFuc3BhcmVudCA4MCUsXG4gICAgICAgIHRyYW5zcGFyZW50IDEwMCVcbiAgICAgIClcbiAgICAgIDAgMCAvIDQwMCUgMTAwJSByZXBlYXQteDtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG5cbiAgOmhvc3QoOm5vdChbbG9hZGluZ10pKSBbcGFydH49J2xvYWRlciddIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgOmhvc3QoW2xvYWRpbmddKSBbcGFydD0nbG9hZGVyJ10ge1xuICAgIGFuaW1hdGlvbjogM3MgbGluZWFyIGluZmluaXRlIG1hdGVyaWFsLWxvYWRlci1wcm9ncmVzcywgMC4zcyAwLjFzIGJvdGggbWF0ZXJpYWwtbG9hZGVyLWZhZGUtaW47XG4gIH1cblxuICBbcGFydD0nbG9hZGVyJ106OmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG9wYWNpdHk6IDAuMTY7XG4gICAgYmFja2dyb3VuZDogdmFyKC0tbWF0ZXJpYWwtcHJpbWFyeS1jb2xvcik7XG4gIH1cblxuICBAa2V5ZnJhbWVzIG1hdGVyaWFsLWxvYWRlci1mYWRlLWluIHtcbiAgICAwJSB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgIH1cblxuICAgIDEwMCUge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICB9XG4gIH1cblxuICBAa2V5ZnJhbWVzIG1hdGVyaWFsLWxvYWRlci1wcm9ncmVzcyB7XG4gICAgMCUge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMCAwO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAzMDAlIDEwMCU7XG4gICAgfVxuXG4gICAgMzMlIHtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IC0xMDAlIDA7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDQwMCUgMTAwJTtcbiAgICB9XG5cbiAgICA2NyUge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTIwMCUgMDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogMjUwJSAxMDAlO1xuICAgIH1cblxuICAgIDEwMCUge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTMwMCUgMDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogMzAwJSAxMDAlO1xuICAgIH1cbiAgfVxuXG4gIC8qIFJUTCBzcGVjaWZpYyBzdHlsZXMgKi9cblxuICBAa2V5ZnJhbWVzIG1hdGVyaWFsLWxvYWRlci1wcm9ncmVzcy1ydGwge1xuICAgIDAlIHtcbiAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDEwMCUgMDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogMzAwJSAxMDAlO1xuICAgIH1cblxuICAgIDMzJSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAyMDAlIDA7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDQwMCUgMTAwJTtcbiAgICB9XG5cbiAgICA2NyUge1xuICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMzAwJSAwO1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAyNTAlIDEwMCU7XG4gICAgfVxuXG4gICAgMTAwJSB7XG4gICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA0MDAlIDA7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDMwMCUgMTAwJTtcbiAgICB9XG4gIH1cblxuICA6aG9zdChbbG9hZGluZ11bZGlyPSdydGwnXSkgW3BhcnQ9J2xvYWRlciddIHtcbiAgICBhbmltYXRpb246IDNzIGxpbmVhciBpbmZpbml0ZSBtYXRlcmlhbC1sb2FkZXItcHJvZ3Jlc3MtcnRsLCAwLjNzIDAuMXMgYm90aCBtYXRlcmlhbC1sb2FkZXItZmFkZS1pbjtcbiAgfVxuYDtcblxuZXhwb3J0IHsgbG9hZGVyIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/mixins/loader.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/mixins/menu-overlay.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/mixins/menu-overlay.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"menuOverlay\": () => (/* binding */ menuOverlay)\n/* harmony export */ });\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/* harmony import */ var _overlay_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./overlay.js */ \"./node_modules/@vaadin/vaadin-material-styles/mixins/overlay.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\nconst menuOverlay = _overlay_js__WEBPACK_IMPORTED_MODULE_2__.overlay;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.registerStyles)('', menuOverlay, {\n  moduleId: 'material-menu-overlay'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL21peGlucy9tZW51LW92ZXJsYXkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQUE7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL21peGlucy9tZW51LW92ZXJsYXkuanM/MzYyYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcgLSAyMDIyIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCAnLi4vY29sb3IuanMnO1xuaW1wb3J0IHsgcmVnaXN0ZXJTdHlsZXMgfSBmcm9tICdAdmFhZGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4uanMnO1xuaW1wb3J0IHsgb3ZlcmxheSB9IGZyb20gJy4vb3ZlcmxheS5qcyc7XG5cbmNvbnN0IG1lbnVPdmVybGF5ID0gb3ZlcmxheTtcblxucmVnaXN0ZXJTdHlsZXMoJycsIG1lbnVPdmVybGF5LCB7IG1vZHVsZUlkOiAnbWF0ZXJpYWwtbWVudS1vdmVybGF5JyB9KTtcblxuZXhwb3J0IHsgbWVudU92ZXJsYXkgfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/mixins/menu-overlay.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/mixins/overlay.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/mixins/overlay.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"overlay\": () => (/* binding */ overlay)\n/* harmony export */ });\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../color.js */ \"./node_modules/@vaadin/vaadin-material-styles/color.js\");\n/* harmony import */ var _typography_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../typography.js */ \"./node_modules/@vaadin/vaadin-material-styles/typography.js\");\n/* harmony import */ var _shadow_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../shadow.js */ \"./node_modules/@vaadin/vaadin-material-styles/shadow.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\nconst overlay = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.css`\n  :host {\n    top: 16px;\n    right: 16px;\n    /* TODO (@jouni): remove unnecessary multiplication after https://github.com/vaadin/vaadin-overlay/issues/90 is fixed */\n    bottom: calc(1px * var(--vaadin-overlay-viewport-bottom) + 16px);\n    left: 16px;\n  }\n\n  [part='overlay'] {\n    background-color: var(--material-background-color);\n    border-radius: 4px;\n    box-shadow: var(--material-shadow-elevation-4dp);\n    color: var(--material-body-text-color);\n    font-family: var(--material-font-family);\n    font-size: var(--material-body-font-size);\n    font-weight: 400;\n  }\n\n  [part='content'] {\n    padding: 8px 0;\n  }\n\n  [part='backdrop'] {\n    opacity: 0.2;\n    animation: 0.2s vaadin-overlay-backdrop-enter;\n    will-change: opacity;\n  }\n\n  @keyframes vaadin-overlay-backdrop-enter {\n    0% {\n      opacity: 0;\n    }\n  }\n`;\n(0,_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_3__.registerStyles)('', overlay, {\n  moduleId: 'material-overlay'\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL21peGlucy9vdmVybGF5LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL21peGlucy9vdmVybGF5LmpzPzU4YjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IChjKSAyMDE3IC0gMjAyMiBWYWFkaW4gTHRkLlxuICogVGhpcyBwcm9ncmFtIGlzIGF2YWlsYWJsZSB1bmRlciBBcGFjaGUgTGljZW5zZSBWZXJzaW9uIDIuMCwgYXZhaWxhYmxlIGF0IGh0dHBzOi8vdmFhZGluLmNvbS9saWNlbnNlL1xuICovXG5pbXBvcnQgJy4uL2NvbG9yLmpzJztcbmltcG9ydCAnLi4vdHlwb2dyYXBoeS5qcyc7XG5pbXBvcnQgJy4uL3NoYWRvdy5qcyc7XG5pbXBvcnQgeyBjc3MsIHJlZ2lzdGVyU3R5bGVzIH0gZnJvbSAnQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vdmFhZGluLXRoZW1hYmxlLW1peGluLmpzJztcblxuY29uc3Qgb3ZlcmxheSA9IGNzc2BcbiAgOmhvc3Qge1xuICAgIHRvcDogMTZweDtcbiAgICByaWdodDogMTZweDtcbiAgICAvKiBUT0RPIChAam91bmkpOiByZW1vdmUgdW5uZWNlc3NhcnkgbXVsdGlwbGljYXRpb24gYWZ0ZXIgaHR0cHM6Ly9naXRodWIuY29tL3ZhYWRpbi92YWFkaW4tb3ZlcmxheS9pc3N1ZXMvOTAgaXMgZml4ZWQgKi9cbiAgICBib3R0b206IGNhbGMoMXB4ICogdmFyKC0tdmFhZGluLW92ZXJsYXktdmlld3BvcnQtYm90dG9tKSArIDE2cHgpO1xuICAgIGxlZnQ6IDE2cHg7XG4gIH1cblxuICBbcGFydD0nb3ZlcmxheSddIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYXRlcmlhbC1iYWNrZ3JvdW5kLWNvbG9yKTtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgYm94LXNoYWRvdzogdmFyKC0tbWF0ZXJpYWwtc2hhZG93LWVsZXZhdGlvbi00ZHApO1xuICAgIGNvbG9yOiB2YXIoLS1tYXRlcmlhbC1ib2R5LXRleHQtY29sb3IpO1xuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1tYXRlcmlhbC1mb250LWZhbWlseSk7XG4gICAgZm9udC1zaXplOiB2YXIoLS1tYXRlcmlhbC1ib2R5LWZvbnQtc2l6ZSk7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgfVxuXG4gIFtwYXJ0PSdjb250ZW50J10ge1xuICAgIHBhZGRpbmc6IDhweCAwO1xuICB9XG5cbiAgW3BhcnQ9J2JhY2tkcm9wJ10ge1xuICAgIG9wYWNpdHk6IDAuMjtcbiAgICBhbmltYXRpb246IDAuMnMgdmFhZGluLW92ZXJsYXktYmFja2Ryb3AtZW50ZXI7XG4gICAgd2lsbC1jaGFuZ2U6IG9wYWNpdHk7XG4gIH1cblxuICBAa2V5ZnJhbWVzIHZhYWRpbi1vdmVybGF5LWJhY2tkcm9wLWVudGVyIHtcbiAgICAwJSB7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgIH1cbiAgfVxuYDtcblxucmVnaXN0ZXJTdHlsZXMoJycsIG92ZXJsYXksIHsgbW9kdWxlSWQ6ICdtYXRlcmlhbC1vdmVybGF5JyB9KTtcblxuZXhwb3J0IHsgb3ZlcmxheSB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/mixins/overlay.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/shadow.js":
/*!***************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/shadow.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"shadow\": () => (/* binding */ shadow)\n/* harmony export */ });\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./version.js */ \"./node_modules/@vaadin/vaadin-material-styles/version.js\");\n/* harmony import */ var _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\nconst shadow = _vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_1__.css`\n  /* prettier-ignore */\n  :host {\n    /* from http://codepen.io/shyndman/pen/c5394ddf2e8b2a5c9185904b57421cdb */\n    --material-shadow-elevation-2dp: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n    --material-shadow-elevation-3dp: 0 3px 4px 0 rgba(0, 0, 0, 0.14), 0 1px 8px 0 rgba(0, 0, 0, 0.12), 0 3px 3px -2px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-4dp: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-6dp: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-8dp: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-12dp: 0 12px 16px 1px rgba(0, 0, 0, 0.14), 0 4px 22px 3px rgba(0, 0, 0, 0.12), 0 6px 7px -4px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-16dp: 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.4);\n    --material-shadow-elevation-24dp: 0 24px 38px 3px rgba(0, 0, 0, 0.14), 0 9px 46px 8px rgba(0, 0, 0, 0.12), 0 11px 15px -7px rgba(0, 0, 0, 0.4);\n  }\n`;\nconst $tpl = document.createElement('template');\n$tpl.innerHTML = `<style>${shadow.toString().replace(':host', 'html')}</style>`;\ndocument.head.appendChild($tpl.content);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL3NoYWRvdy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnN0ZW9uLXBhbmVsLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B2YWFkaW4vdmFhZGluLW1hdGVyaWFsLXN0eWxlcy9zaGFkb3cuanM/ODViYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcgLSAyMDIyIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmltcG9ydCAnLi92ZXJzaW9uLmpzJztcbmltcG9ydCB7IGNzcyB9IGZyb20gJ0B2YWFkaW4vdmFhZGluLXRoZW1hYmxlLW1peGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi5qcyc7XG5cbmNvbnN0IHNoYWRvdyA9IGNzc2BcbiAgLyogcHJldHRpZXItaWdub3JlICovXG4gIDpob3N0IHtcbiAgICAvKiBmcm9tIGh0dHA6Ly9jb2RlcGVuLmlvL3NoeW5kbWFuL3Blbi9jNTM5NGRkZjJlOGIyYTVjOTE4NTkwNGI1NzQyMWNkYiAqL1xuICAgIC0tbWF0ZXJpYWwtc2hhZG93LWVsZXZhdGlvbi0yZHA6IDAgMnB4IDJweCAwIHJnYmEoMCwgMCwgMCwgMC4xNCksIDAgMXB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgM3B4IDFweCAtMnB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICAtLW1hdGVyaWFsLXNoYWRvdy1lbGV2YXRpb24tM2RwOiAwIDNweCA0cHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDFweCA4cHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDNweCAzcHggLTJweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICAgLS1tYXRlcmlhbC1zaGFkb3ctZWxldmF0aW9uLTRkcDogMCA0cHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCAxcHggMTBweCAwIHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMnB4IDRweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgICAtLW1hdGVyaWFsLXNoYWRvdy1lbGV2YXRpb24tNmRwOiAwIDZweCAxMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCAxcHggMThweCAwIHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgM3B4IDVweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC40KTtcbiAgICAtLW1hdGVyaWFsLXNoYWRvdy1lbGV2YXRpb24tOGRwOiAwIDhweCAxMHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDNweCAxNHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDVweCA1cHggLTNweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICAgLS1tYXRlcmlhbC1zaGFkb3ctZWxldmF0aW9uLTEyZHA6IDAgMTJweCAxNnB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDRweCAyMnB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDZweCA3cHggLTRweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gICAgLS1tYXRlcmlhbC1zaGFkb3ctZWxldmF0aW9uLTE2ZHA6IDAgMTZweCAyNHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwIDZweCAzMHB4IDVweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDhweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICAgIC0tbWF0ZXJpYWwtc2hhZG93LWVsZXZhdGlvbi0yNGRwOiAwIDI0cHggMzhweCAzcHggcmdiYSgwLCAwLCAwLCAwLjE0KSwgMCA5cHggNDZweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEyKSwgMCAxMXB4IDE1cHggLTdweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIH1cbmA7XG5cbmNvbnN0ICR0cGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZW1wbGF0ZScpO1xuJHRwbC5pbm5lckhUTUwgPSBgPHN0eWxlPiR7c2hhZG93LnRvU3RyaW5nKCkucmVwbGFjZSgnOmhvc3QnLCAnaHRtbCcpfTwvc3R5bGU+YDtcbmRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoJHRwbC5jb250ZW50KTtcblxuZXhwb3J0IHsgc2hhZG93IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/shadow.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-material-styles/version.js":
/*!****************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-material-styles/version.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Material\": () => (/* binding */ Material)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n/**\n * Dummy custom element used for collecting\n * development time usage statistics.\n *\n * @private\n */\nclass Material extends HTMLElement {\n  static get version() {\n    return '23.3.7';\n  }\n}\ncustomElements.define('vaadin-material-styles', Material);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tbWF0ZXJpYWwtc3R5bGVzL3ZlcnNpb24uanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL3ZhYWRpbi1tYXRlcmlhbC1zdHlsZXMvdmVyc2lvbi5qcz8zNjI2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAoYykgMjAxNyAtIDIwMjIgVmFhZGluIEx0ZC5cbiAqIFRoaXMgcHJvZ3JhbSBpcyBhdmFpbGFibGUgdW5kZXIgQXBhY2hlIExpY2Vuc2UgVmVyc2lvbiAyLjAsIGF2YWlsYWJsZSBhdCBodHRwczovL3ZhYWRpbi5jb20vbGljZW5zZS9cbiAqL1xuXG4vKipcbiAqIER1bW15IGN1c3RvbSBlbGVtZW50IHVzZWQgZm9yIGNvbGxlY3RpbmdcbiAqIGRldmVsb3BtZW50IHRpbWUgdXNhZ2Ugc3RhdGlzdGljcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICovXG5jbGFzcyBNYXRlcmlhbCBleHRlbmRzIEhUTUxFbGVtZW50IHtcbiAgc3RhdGljIGdldCB2ZXJzaW9uKCkge1xuICAgIHJldHVybiAnMjMuMy43JztcbiAgfVxufVxuXG5jdXN0b21FbGVtZW50cy5kZWZpbmUoJ3ZhYWRpbi1tYXRlcmlhbC1zdHlsZXMnLCBNYXRlcmlhbCk7XG5cbmV4cG9ydCB7IE1hdGVyaWFsIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-material-styles/version.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-themable-mixin/register-styles.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-themable-mixin/register-styles.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"css\": () => (/* reexport safe */ _vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_0__.css),\n/* harmony export */   \"registerStyles\": () => (/* reexport safe */ _vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_0__.registerStyles),\n/* harmony export */   \"unsafeCSS\": () => (/* reexport safe */ _vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_0__.unsafeCSS)\n/* harmony export */ });\n/* harmony import */ var _vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vaadin-themable-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vcmVnaXN0ZXItc3R5bGVzLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi9yZWdpc3Rlci1zdHlsZXMuanM/NjIwNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcgLSAyMDIyIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbmV4cG9ydCB7IHJlZ2lzdGVyU3R5bGVzLCBjc3MsIHVuc2FmZUNTUyB9IGZyb20gJy4vdmFhZGluLXRoZW1hYmxlLW1peGluLmpzJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-themable-mixin/register-styles.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ThemableMixin\": () => (/* binding */ ThemableMixin),\n/* harmony export */   \"__themeRegistry\": () => (/* binding */ themeRegistry),\n/* harmony export */   \"css\": () => (/* reexport safe */ lit__WEBPACK_IMPORTED_MODULE_0__.css),\n/* harmony export */   \"registerStyles\": () => (/* binding */ registerStyles),\n/* harmony export */   \"unsafeCSS\": () => (/* reexport safe */ lit__WEBPACK_IMPORTED_MODULE_0__.unsafeCSS)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var _vaadin_theme_property_mixin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vaadin-theme-property-mixin.js */ \"./node_modules/@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js\");\n/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n\n\n\n\n/**\n * @typedef {Object} Theme\n * @property {string} themeFor\n * @property {CSSResult[]} styles\n * @property {string | string[]} [include]\n * @property {string} [moduleId]\n *\n * @typedef {CSSResult[] | CSSResult} CSSResultGroup\n */\n\n/**\n * @type {Theme[]}\n */\nconst themeRegistry = [];\n\n/**\n * Registers CSS styles for a component type. Make sure to register the styles before\n * the first instance of a component of the type is attached to DOM.\n *\n * @param {string} themeFor The local/tag name of the component type to register the styles for\n * @param {CSSResultGroup} styles The CSS style rules to be registered for the component type\n * matching themeFor and included in the local scope of each component instance\n * @param {{moduleId?: string, include?: string | string[]}} options Additional options\n * @return {void}\n */\nfunction registerStyles(themeFor, styles, options = {}) {\n  if (themeFor) {\n    if (hasThemes(themeFor)) {\n      console.warn(`The custom element definition for \"${themeFor}\"\n      was finalized before a style module was registered.\n      Make sure to add component specific style modules before\n      importing the corresponding custom element.`);\n    }\n  }\n  styles = flattenStyles(styles);\n  if (window.Vaadin && window.Vaadin.styleModules) {\n    window.Vaadin.styleModules.registerStyles(themeFor, styles, options);\n  } else {\n    themeRegistry.push({\n      themeFor,\n      styles,\n      include: options.include,\n      moduleId: options.moduleId\n    });\n  }\n}\n\n/**\n * Returns all registered themes. By default the themeRegistry is returned as is.\n * In case the style-modules adapter is imported, the themes are obtained from there instead\n * @returns {Theme[]}\n */\nfunction getAllThemes() {\n  if (window.Vaadin && window.Vaadin.styleModules) {\n    return window.Vaadin.styleModules.getAllThemes();\n  }\n  return themeRegistry;\n}\n\n/**\n * Returns true if the themeFor string matches the tag name\n * @param {string} themeFor\n * @param {string} tagName\n * @returns {boolean}\n */\nfunction matchesThemeFor(themeFor, tagName) {\n  return (themeFor || '').split(' ').some(themeForToken => {\n    return new RegExp(`^${themeForToken.split('*').join('.*')}$`).test(tagName);\n  });\n}\n\n/**\n * Maps the moduleName to an include priority number which is used for\n * determining the order in which styles are applied.\n * @param {string} moduleName\n * @returns {number}\n */\nfunction getIncludePriority(moduleName = '') {\n  let includePriority = 0;\n  if (moduleName.startsWith('lumo-') || moduleName.startsWith('material-')) {\n    includePriority = 1;\n  } else if (moduleName.startsWith('vaadin-')) {\n    includePriority = 2;\n  }\n  return includePriority;\n}\n\n/**\n * Flattens the styles into a single array of styles.\n * @param {CSSResultGroup} styles\n * @param {CSSResult[]} result\n * @returns {CSSResult[]}\n */\nfunction flattenStyles(styles = []) {\n  return [styles].flat(Infinity).filter(style => {\n    if (style instanceof lit__WEBPACK_IMPORTED_MODULE_0__.CSSResult) {\n      return true;\n    }\n    console.warn('An item in styles is not of type CSSResult. Use `unsafeCSS` or `css`.');\n    return false;\n  });\n}\n\n/**\n * Gets an array of CSSResults matching the include property of the theme.\n * @param {Theme} theme\n * @returns {CSSResult[]}\n */\nfunction getIncludedStyles(theme) {\n  const includedStyles = [];\n  if (theme.include) {\n    [].concat(theme.include).forEach(includeModuleId => {\n      const includedTheme = getAllThemes().find(s => s.moduleId === includeModuleId);\n      if (includedTheme) {\n        includedStyles.push(...getIncludedStyles(includedTheme), ...includedTheme.styles);\n      } else {\n        console.warn(`Included moduleId ${includeModuleId} not found in style registry`);\n      }\n    }, theme.styles);\n  }\n  return includedStyles;\n}\n\n/**\n * Includes the styles to the template.\n * @param {CSSResult[]} styles\n * @param {HTMLTemplateElement} template\n */\nfunction addStylesToTemplate(styles, template) {\n  const styleEl = document.createElement('style');\n  styleEl.innerHTML = styles.map(style => style.cssText).join('\\n');\n  template.content.appendChild(styleEl);\n}\n\n/**\n * Returns an array of themes that should be used for styling a component matching\n * the tag name. The array is sorted by the include order.\n * @param {string} tagName\n * @returns {Theme[]}\n */\nfunction getThemes(tagName) {\n  const defaultModuleName = `${tagName}-default-theme`;\n  const themes = getAllThemes()\n  // Filter by matching themeFor properties\n  .filter(theme => theme.moduleId !== defaultModuleName && matchesThemeFor(theme.themeFor, tagName)).map(theme => ({\n    ...theme,\n    // Prepend styles from included themes\n    styles: [...getIncludedStyles(theme), ...theme.styles],\n    // Map moduleId to includePriority\n    includePriority: getIncludePriority(theme.moduleId)\n  }))\n  // Sort by includePriority\n  .sort((themeA, themeB) => themeB.includePriority - themeA.includePriority);\n  if (themes.length > 0) {\n    return themes;\n  }\n  // No theme modules found, return the default module if it exists\n  return getAllThemes().filter(theme => theme.moduleId === defaultModuleName);\n}\n\n/**\n * Check if the custom element type has themes applied.\n * @param {string} tagName\n * @returns {boolean}\n */\nfunction hasThemes(tagName) {\n  return classHasThemes(customElements.get(tagName));\n}\n\n/**\n * Check if the custom element type has themes applied.\n * @param {Function} elementClass\n * @returns {boolean}\n */\nfunction classHasThemes(elementClass) {\n  return elementClass && Object.prototype.hasOwnProperty.call(elementClass, '__themes');\n}\n\n/**\n * @polymerMixin\n * @mixes ThemePropertyMixin\n */\nconst ThemableMixin = superClass => class VaadinThemableMixin extends (0,_vaadin_theme_property_mixin_js__WEBPACK_IMPORTED_MODULE_1__.ThemePropertyMixin)(superClass) {\n  /**\n   * Covers PolymerElement based component styling\n   * @protected\n   */\n  static finalize() {\n    super.finalize();\n\n    // Make sure not to run the logic intended for PolymerElement when LitElement is used.\n    if (this.elementStyles) {\n      return;\n    }\n    const template = this.prototype._template;\n    if (!template || classHasThemes(this)) {\n      return;\n    }\n    addStylesToTemplate(this.getStylesForThis(), template);\n  }\n\n  /**\n   * Covers LitElement based component styling\n   *\n   * @protected\n   */\n  static finalizeStyles(styles) {\n    // The \"styles\" object originates from the \"static get styles()\" function of\n    // a LitElement based component. The theme styles are added after it\n    // so that they can override the component styles.\n    const themeStyles = this.getStylesForThis();\n    return styles ? [...super.finalizeStyles(styles), ...themeStyles] : themeStyles;\n  }\n\n  /**\n   * Get styles for the component type\n   *\n   * @private\n   */\n  static getStylesForThis() {\n    const parent = Object.getPrototypeOf(this.prototype);\n    const inheritedThemes = (parent ? parent.constructor.__themes : []) || [];\n    this.__themes = [...inheritedThemes, ...getThemes(this.is)];\n    const themeStyles = this.__themes.flatMap(theme => theme.styles);\n    // Remove duplicates\n    return themeStyles.filter((style, index) => index === themeStyles.lastIndexOf(style));\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js\n");

/***/ }),

/***/ "./node_modules/@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ThemePropertyMixin\": () => (/* binding */ ThemePropertyMixin)\n/* harmony export */ });\n/**\n * @license\n * Copyright (c) 2017 - 2022 Vaadin Ltd.\n * This program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n */\n/**\n * @polymerMixin\n */\nconst ThemePropertyMixin = superClass => class VaadinThemePropertyMixin extends superClass {\n  static get properties() {\n    return {\n      /**\n       * Helper property with theme attribute value facilitating propagation\n       * in shadow DOM.\n       *\n       * Enables the component implementation to propagate the `theme`\n       * attribute value to the sub-components in Shadow DOM by binding\n       * the sub-component’s \"theme\" attribute to the `theme` property of\n       * the host.\n       *\n       * **NOTE:** Extending the mixin only provides the property for binding,\n       * and does not make the propagation alone.\n       *\n       * See [Styling Components: Sub-components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components/#sub-components).\n       * page for more information.\n       *\n       * @deprecated The `theme` property is not supposed for public use and will be dropped in Vaadin 24.\n       * Please, use the `theme` attribute instead.\n       * @protected\n       */\n      theme: {\n        type: String,\n        reflectToAttribute: true,\n        observer: '__deprecatedThemePropertyChanged'\n      },\n      /**\n       * Helper property with theme attribute value facilitating propagation\n       * in shadow DOM.\n       *\n       * Enables the component implementation to propagate the `theme`\n       * attribute value to the sub-components in Shadow DOM by binding\n       * the sub-component’s \"theme\" attribute to the `theme` property of\n       * the host.\n       *\n       * **NOTE:** Extending the mixin only provides the property for binding,\n       * and does not make the propagation alone.\n       *\n       * See [Styling Components: Sub-components](https://vaadin.com/docs/latest/styling/custom-theme/styling-components/#sub-components).\n       * page for more information.\n       *\n       * @protected\n       */\n      _theme: {\n        type: String,\n        readOnly: true\n      }\n    };\n  }\n\n  /** @private */\n  __deprecatedThemePropertyChanged(theme) {\n    this._set_theme(theme);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHZhYWRpbi92YWFkaW4tdGhlbWFibGUtbWl4aW4vdmFhZGluLXRoZW1lLXByb3BlcnR5LW1peGluLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AdmFhZGluL3ZhYWRpbi10aGVtYWJsZS1taXhpbi92YWFkaW4tdGhlbWUtcHJvcGVydHktbWl4aW4uanM/YjhiNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcgLSAyMDIyIFZhYWRpbiBMdGQuXG4gKiBUaGlzIHByb2dyYW0gaXMgYXZhaWxhYmxlIHVuZGVyIEFwYWNoZSBMaWNlbnNlIFZlcnNpb24gMi4wLCBhdmFpbGFibGUgYXQgaHR0cHM6Ly92YWFkaW4uY29tL2xpY2Vuc2UvXG4gKi9cbi8qKlxuICogQHBvbHltZXJNaXhpblxuICovXG5leHBvcnQgY29uc3QgVGhlbWVQcm9wZXJ0eU1peGluID0gKHN1cGVyQ2xhc3MpID0+XG4gIGNsYXNzIFZhYWRpblRoZW1lUHJvcGVydHlNaXhpbiBleHRlbmRzIHN1cGVyQ2xhc3Mge1xuICAgIHN0YXRpYyBnZXQgcHJvcGVydGllcygpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBIZWxwZXIgcHJvcGVydHkgd2l0aCB0aGVtZSBhdHRyaWJ1dGUgdmFsdWUgZmFjaWxpdGF0aW5nIHByb3BhZ2F0aW9uXG4gICAgICAgICAqIGluIHNoYWRvdyBET00uXG4gICAgICAgICAqXG4gICAgICAgICAqIEVuYWJsZXMgdGhlIGNvbXBvbmVudCBpbXBsZW1lbnRhdGlvbiB0byBwcm9wYWdhdGUgdGhlIGB0aGVtZWBcbiAgICAgICAgICogYXR0cmlidXRlIHZhbHVlIHRvIHRoZSBzdWItY29tcG9uZW50cyBpbiBTaGFkb3cgRE9NIGJ5IGJpbmRpbmdcbiAgICAgICAgICogdGhlIHN1Yi1jb21wb25lbnTigJlzIFwidGhlbWVcIiBhdHRyaWJ1dGUgdG8gdGhlIGB0aGVtZWAgcHJvcGVydHkgb2ZcbiAgICAgICAgICogdGhlIGhvc3QuXG4gICAgICAgICAqXG4gICAgICAgICAqICoqTk9URToqKiBFeHRlbmRpbmcgdGhlIG1peGluIG9ubHkgcHJvdmlkZXMgdGhlIHByb3BlcnR5IGZvciBiaW5kaW5nLFxuICAgICAgICAgKiBhbmQgZG9lcyBub3QgbWFrZSB0aGUgcHJvcGFnYXRpb24gYWxvbmUuXG4gICAgICAgICAqXG4gICAgICAgICAqIFNlZSBbU3R5bGluZyBDb21wb25lbnRzOiBTdWItY29tcG9uZW50c10oaHR0cHM6Ly92YWFkaW4uY29tL2RvY3MvbGF0ZXN0L3N0eWxpbmcvY3VzdG9tLXRoZW1lL3N0eWxpbmctY29tcG9uZW50cy8jc3ViLWNvbXBvbmVudHMpLlxuICAgICAgICAgKiBwYWdlIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAZGVwcmVjYXRlZCBUaGUgYHRoZW1lYCBwcm9wZXJ0eSBpcyBub3Qgc3VwcG9zZWQgZm9yIHB1YmxpYyB1c2UgYW5kIHdpbGwgYmUgZHJvcHBlZCBpbiBWYWFkaW4gMjQuXG4gICAgICAgICAqIFBsZWFzZSwgdXNlIHRoZSBgdGhlbWVgIGF0dHJpYnV0ZSBpbnN0ZWFkLlxuICAgICAgICAgKiBAcHJvdGVjdGVkXG4gICAgICAgICAqL1xuICAgICAgICB0aGVtZToge1xuICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICByZWZsZWN0VG9BdHRyaWJ1dGU6IHRydWUsXG4gICAgICAgICAgb2JzZXJ2ZXI6ICdfX2RlcHJlY2F0ZWRUaGVtZVByb3BlcnR5Q2hhbmdlZCcsXG4gICAgICAgIH0sXG5cbiAgICAgICAgLyoqXG4gICAgICAgICAqIEhlbHBlciBwcm9wZXJ0eSB3aXRoIHRoZW1lIGF0dHJpYnV0ZSB2YWx1ZSBmYWNpbGl0YXRpbmcgcHJvcGFnYXRpb25cbiAgICAgICAgICogaW4gc2hhZG93IERPTS5cbiAgICAgICAgICpcbiAgICAgICAgICogRW5hYmxlcyB0aGUgY29tcG9uZW50IGltcGxlbWVudGF0aW9uIHRvIHByb3BhZ2F0ZSB0aGUgYHRoZW1lYFxuICAgICAgICAgKiBhdHRyaWJ1dGUgdmFsdWUgdG8gdGhlIHN1Yi1jb21wb25lbnRzIGluIFNoYWRvdyBET00gYnkgYmluZGluZ1xuICAgICAgICAgKiB0aGUgc3ViLWNvbXBvbmVudOKAmXMgXCJ0aGVtZVwiIGF0dHJpYnV0ZSB0byB0aGUgYHRoZW1lYCBwcm9wZXJ0eSBvZlxuICAgICAgICAgKiB0aGUgaG9zdC5cbiAgICAgICAgICpcbiAgICAgICAgICogKipOT1RFOioqIEV4dGVuZGluZyB0aGUgbWl4aW4gb25seSBwcm92aWRlcyB0aGUgcHJvcGVydHkgZm9yIGJpbmRpbmcsXG4gICAgICAgICAqIGFuZCBkb2VzIG5vdCBtYWtlIHRoZSBwcm9wYWdhdGlvbiBhbG9uZS5cbiAgICAgICAgICpcbiAgICAgICAgICogU2VlIFtTdHlsaW5nIENvbXBvbmVudHM6IFN1Yi1jb21wb25lbnRzXShodHRwczovL3ZhYWRpbi5jb20vZG9jcy9sYXRlc3Qvc3R5bGluZy9jdXN0b20tdGhlbWUvc3R5bGluZy1jb21wb25lbnRzLyNzdWItY29tcG9uZW50cykuXG4gICAgICAgICAqIHBhZ2UgZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gICAgICAgICAqXG4gICAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAgICovXG4gICAgICAgIF90aGVtZToge1xuICAgICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgICByZWFkT25seTogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfVxuXG4gICAgLyoqIEBwcml2YXRlICovXG4gICAgX19kZXByZWNhdGVkVGhlbWVQcm9wZXJ0eUNoYW5nZWQodGhlbWUpIHtcbiAgICAgIHRoaXMuX3NldF90aGVtZSh0aGVtZSk7XG4gICAgfVxuICB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@vaadin/vaadin-themable-mixin/vaadin-theme-property-mixin.js\n");

/***/ })

}]);