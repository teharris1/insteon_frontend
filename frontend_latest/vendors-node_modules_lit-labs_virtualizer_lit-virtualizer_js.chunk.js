"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkinsteon_panel_frontend"] = self["webpackChunkinsteon_panel_frontend"] || []).push([["vendors-node_modules_lit-labs_virtualizer_lit-virtualizer_js"],{

/***/ "./node_modules/@lit-labs/virtualizer/LitVirtualizer.js":
/*!**************************************************************!*\
  !*** ./node_modules/@lit-labs/virtualizer/LitVirtualizer.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LitVirtualizer\": () => (/* binding */ LitVirtualizer)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/decorators/property.js */ \"./node_modules/lit/decorators/property.js\");\n/* harmony import */ var _virtualize_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./virtualize.js */ \"./node_modules/@lit-labs/virtualizer/virtualize.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n\n\n\nclass LitVirtualizer extends lit__WEBPACK_IMPORTED_MODULE_0__.LitElement {\n  constructor() {\n    super(...arguments);\n    this.items = [];\n    this.renderItem = _virtualize_js__WEBPACK_IMPORTED_MODULE_2__.defaultRenderItem;\n    this.keyFunction = _virtualize_js__WEBPACK_IMPORTED_MODULE_2__.defaultKeyFunction;\n    this.layout = {};\n    this.scroller = false;\n  }\n  createRenderRoot() {\n    return this;\n  }\n  render() {\n    const {\n      items,\n      renderItem,\n      keyFunction,\n      layout,\n      scroller\n    } = this;\n    return lit__WEBPACK_IMPORTED_MODULE_0__.html`${(0,_virtualize_js__WEBPACK_IMPORTED_MODULE_2__.virtualize)({\n      items,\n      renderItem,\n      keyFunction,\n      layout,\n      scroller\n    })}`;\n  }\n  element(index) {\n    var _a;\n    return (_a = this[_virtualize_js__WEBPACK_IMPORTED_MODULE_2__.virtualizerRef]) === null || _a === void 0 ? void 0 : _a.element(index);\n  }\n  get layoutComplete() {\n    var _a;\n    return (_a = this[_virtualize_js__WEBPACK_IMPORTED_MODULE_2__.virtualizerRef]) === null || _a === void 0 ? void 0 : _a.layoutComplete;\n  }\n  /**\n   * This scrollToIndex() shim is here to provide backwards compatibility with other 0.x versions of\n   * lit-virtualizer. It is deprecated and will likely be removed in the 1.0.0 release.\n   */\n  scrollToIndex(index, position = 'start') {\n    var _a;\n    (_a = this.element(index)) === null || _a === void 0 ? void 0 : _a.scrollIntoView({\n      block: position\n    });\n  }\n}\n(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,lit_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__.property)({\n  attribute: false\n})], LitVirtualizer.prototype, \"items\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,lit_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__.property)()], LitVirtualizer.prototype, \"renderItem\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,lit_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__.property)()], LitVirtualizer.prototype, \"keyFunction\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,lit_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__.property)({\n  attribute: false\n})], LitVirtualizer.prototype, \"layout\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_3__.__decorate)([(0,lit_decorators_property_js__WEBPACK_IMPORTED_MODULE_1__.property)({\n  reflect: true,\n  type: Boolean\n})], LitVirtualizer.prototype, \"scroller\", void 0);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC1sYWJzL3ZpcnR1YWxpemVyL0xpdFZpcnR1YWxpemVyLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7OztBQU1BO0FBQ0E7QUFHQTtBQVNBO0FBQUE7O0FBRUE7QUFHQTtBQUdBO0FBR0E7QUFHQTtBQW1DQTtBQWpDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOztBQUNBO0FBQ0E7QUFFQTs7QUFDQTtBQUNBO0FBRUE7Ozs7QUFJQTs7QUFJQTtBQUFBO0FBQUE7QUFDQTs7QUE5Q0E7QUFEQTtBQUFBO0FBSUE7QUFHQTtBQUdBO0FBREE7QUFBQTtBQUlBO0FBREE7QUFBQTtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC9zcmMvTGl0VmlydHVhbGl6ZXIudHM/ZDdiMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cblxuaW1wb3J0IHtodG1sLCBMaXRFbGVtZW50fSBmcm9tICdsaXQnO1xuaW1wb3J0IHtwcm9wZXJ0eX0gZnJvbSAnbGl0L2RlY29yYXRvcnMvcHJvcGVydHkuanMnO1xuaW1wb3J0IHtLZXlGbn0gZnJvbSAnbGl0L2RpcmVjdGl2ZXMvcmVwZWF0LmpzJztcbmltcG9ydCB7TGF5b3V0Q29uZmlnVmFsdWV9IGZyb20gJy4vbGF5b3V0cy9zaGFyZWQvTGF5b3V0LmpzJztcbmltcG9ydCB7XG4gIHZpcnR1YWxpemUsXG4gIHZpcnR1YWxpemVyUmVmLFxuICBWaXJ0dWFsaXplckhvc3RFbGVtZW50LFxuICBkZWZhdWx0UmVuZGVySXRlbSxcbiAgZGVmYXVsdEtleUZ1bmN0aW9uLFxuICBSZW5kZXJJdGVtRnVuY3Rpb24sXG59IGZyb20gJy4vdmlydHVhbGl6ZS5qcyc7XG5cbmV4cG9ydCBjbGFzcyBMaXRWaXJ0dWFsaXplcjxUID0gdW5rbm93bj4gZXh0ZW5kcyBMaXRFbGVtZW50IHtcbiAgQHByb3BlcnR5KHthdHRyaWJ1dGU6IGZhbHNlfSlcbiAgaXRlbXM6IFRbXSA9IFtdO1xuXG4gIEBwcm9wZXJ0eSgpXG4gIHJlbmRlckl0ZW06IFJlbmRlckl0ZW1GdW5jdGlvbjxUPiA9IGRlZmF1bHRSZW5kZXJJdGVtO1xuXG4gIEBwcm9wZXJ0eSgpXG4gIGtleUZ1bmN0aW9uOiBLZXlGbjxUPiA9IGRlZmF1bHRLZXlGdW5jdGlvbjtcblxuICBAcHJvcGVydHkoe2F0dHJpYnV0ZTogZmFsc2V9KVxuICBsYXlvdXQ6IExheW91dENvbmZpZ1ZhbHVlID0ge307XG5cbiAgQHByb3BlcnR5KHtyZWZsZWN0OiB0cnVlLCB0eXBlOiBCb29sZWFufSlcbiAgc2Nyb2xsZXIgPSBmYWxzZTtcblxuICBjcmVhdGVSZW5kZXJSb290KCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHtpdGVtcywgcmVuZGVySXRlbSwga2V5RnVuY3Rpb24sIGxheW91dCwgc2Nyb2xsZXJ9ID0gdGhpcztcbiAgICByZXR1cm4gaHRtbGAke3ZpcnR1YWxpemUoe1xuICAgICAgaXRlbXMsXG4gICAgICByZW5kZXJJdGVtLFxuICAgICAga2V5RnVuY3Rpb24sXG4gICAgICBsYXlvdXQsXG4gICAgICBzY3JvbGxlcixcbiAgICB9KX1gO1xuICB9XG5cbiAgZWxlbWVudChpbmRleDogbnVtYmVyKSB7XG4gICAgcmV0dXJuICh0aGlzIGFzIFZpcnR1YWxpemVySG9zdEVsZW1lbnQpW3ZpcnR1YWxpemVyUmVmXT8uZWxlbWVudChpbmRleCk7XG4gIH1cblxuICBnZXQgbGF5b3V0Q29tcGxldGUoKSB7XG4gICAgcmV0dXJuICh0aGlzIGFzIFZpcnR1YWxpemVySG9zdEVsZW1lbnQpW3ZpcnR1YWxpemVyUmVmXT8ubGF5b3V0Q29tcGxldGU7XG4gIH1cblxuICAvKipcbiAgICogVGhpcyBzY3JvbGxUb0luZGV4KCkgc2hpbSBpcyBoZXJlIHRvIHByb3ZpZGUgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgd2l0aCBvdGhlciAwLnggdmVyc2lvbnMgb2ZcbiAgICogbGl0LXZpcnR1YWxpemVyLiBJdCBpcyBkZXByZWNhdGVkIGFuZCB3aWxsIGxpa2VseSBiZSByZW1vdmVkIGluIHRoZSAxLjAuMCByZWxlYXNlLlxuICAgKi9cbiAgc2Nyb2xsVG9JbmRleChcbiAgICBpbmRleDogbnVtYmVyLFxuICAgIHBvc2l0aW9uOiAnc3RhcnQnIHwgJ2NlbnRlcicgfCAnZW5kJyB8ICduZWFyZXN0JyA9ICdzdGFydCdcbiAgKSB7XG4gICAgdGhpcy5lbGVtZW50KGluZGV4KT8uc2Nyb2xsSW50b1ZpZXcoe2Jsb2NrOiBwb3NpdGlvbn0pO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@lit-labs/virtualizer/LitVirtualizer.js\n");

/***/ }),

/***/ "./node_modules/@lit-labs/virtualizer/ScrollerController.js":
/*!******************************************************************!*\
  !*** ./node_modules/@lit-labs/virtualizer/ScrollerController.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ScrollerController\": () => (/* binding */ ScrollerController),\n/* harmony export */   \"ScrollerShim\": () => (/* binding */ ScrollerShim)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nclass ScrollerShim {\n  constructor(element) {\n    this._node = null;\n    this._element = null;\n    const node = element !== null && element !== void 0 ? element : window;\n    this._node = node;\n    if (element) {\n      this._element = element;\n    }\n  }\n  get element() {\n    return this._element || document.scrollingElement || document.documentElement;\n  }\n  get scrollTop() {\n    return this.element.scrollTop || window.scrollY;\n  }\n  get scrollLeft() {\n    return this.element.scrollLeft || window.scrollX;\n  }\n  get scrollHeight() {\n    return this.element.scrollHeight;\n  }\n  get scrollWidth() {\n    return this.element.scrollWidth;\n  }\n  get viewportHeight() {\n    return this._element ? this._element.getBoundingClientRect().height : window.innerHeight;\n  }\n  get viewportWidth() {\n    return this._element ? this._element.getBoundingClientRect().width : window.innerWidth;\n  }\n  get maxScrollTop() {\n    return this.scrollHeight - this.viewportHeight;\n  }\n  get maxScrollLeft() {\n    return this.scrollWidth - this.viewportWidth;\n  }\n}\nclass ScrollerController extends ScrollerShim {\n  constructor(client, element) {\n    super(element);\n    this._originalScrollTo = null;\n    this._originalScrollBy = null;\n    this._originalScroll = null;\n    this._clients = [];\n    this._retarget = null;\n    this._end = null;\n    this.__destination = null;\n    this.correctingScrollError = false;\n    const node = this._node;\n    const instance = ScrollerController._instanceMap.get(node);\n    if (instance) {\n      instance._attach(client);\n      return instance;\n    } else {\n      this._checkForArrival = this._checkForArrival.bind(this);\n      this._updateManagedScrollTo = this._updateManagedScrollTo.bind(this);\n      this.scrollTo = this.scrollTo.bind(this);\n      this.scrollBy = this.scrollBy.bind(this);\n      this._originalScrollTo = node.scrollTo;\n      this._originalScrollBy = node.scrollBy;\n      this._originalScroll = node.scroll;\n      this._attach(client);\n    }\n  }\n  get _destination() {\n    return this.__destination;\n  }\n  get scrolling() {\n    return this._destination !== null;\n  }\n  scrollTo(p1, p2) {\n    const options = typeof p1 === 'number' && typeof p2 === 'number' ? {\n      left: p1,\n      top: p2\n    } : p1;\n    this._scrollTo(options);\n  }\n  scrollBy(p1, p2) {\n    const options = typeof p1 === 'number' && typeof p2 === 'number' ? {\n      left: p1,\n      top: p2\n    } : p1;\n    if (options.top !== undefined) {\n      options.top += this.scrollTop;\n    }\n    if (options.left !== undefined) {\n      options.left += this.scrollLeft;\n    }\n    this._scrollTo(options);\n  }\n  _nativeScrollTo(options) {\n    this._originalScrollTo.bind(this._element || window)(options);\n  }\n  _scrollTo(options, retarget = null, end = null) {\n    if (this._end !== null) {\n      this._end();\n    }\n    if (options.behavior === 'smooth') {\n      this._setDestination(options);\n      this._retarget = retarget;\n      this._end = end;\n    } else {\n      this._resetScrollState();\n    }\n    this._nativeScrollTo(options);\n  }\n  _setDestination(options) {\n    let {\n      top,\n      left\n    } = options;\n    top = top === undefined ? undefined : Math.max(0, Math.min(top, this.maxScrollTop));\n    left = left === undefined ? undefined : Math.max(0, Math.min(left, this.maxScrollLeft));\n    if (this._destination !== null && left === this._destination.left && top === this._destination.top) {\n      return false;\n    }\n    this.__destination = {\n      top,\n      left,\n      behavior: 'smooth'\n    };\n    return true;\n  }\n  _resetScrollState() {\n    this.__destination = null;\n    this._retarget = null;\n    this._end = null;\n  }\n  _updateManagedScrollTo(coordinates) {\n    if (this._destination) {\n      if (this._setDestination(coordinates)) {\n        this._nativeScrollTo(this._destination);\n      }\n    }\n  }\n  managedScrollTo(options, retarget, end) {\n    this._scrollTo(options, retarget, end);\n    return this._updateManagedScrollTo;\n  }\n  correctScrollError(coordinates) {\n    this.correctingScrollError = true;\n    requestAnimationFrame(() => requestAnimationFrame(() => this.correctingScrollError = false));\n    // Correct the error\n    this._nativeScrollTo(coordinates);\n    // Then, if we were headed for a specific destination, we continue scrolling:\n    // First, we update our target destination, if applicable...\n    if (this._retarget) {\n      this._setDestination(this._retarget());\n    }\n    // Then we go ahead and resume scrolling\n    if (this._destination) {\n      this._nativeScrollTo(this._destination);\n    }\n  }\n  _checkForArrival() {\n    if (this._destination !== null) {\n      const {\n        scrollTop,\n        scrollLeft\n      } = this;\n      let {\n        top,\n        left\n      } = this._destination;\n      top = Math.min(top || 0, this.maxScrollTop);\n      left = Math.min(left || 0, this.maxScrollLeft);\n      const topDiff = Math.abs(top - scrollTop);\n      const leftDiff = Math.abs(left - scrollLeft);\n      // We check to see if we've arrived at our destination.\n      if (topDiff < 1 && leftDiff < 1) {\n        if (this._end) {\n          this._end();\n        }\n        this._resetScrollState();\n      }\n    }\n  }\n  detach(client) {\n    this._clients = this._clients.splice(this._clients.indexOf(client), 1);\n    if (this._clients.length === 0) {\n      this._node.scrollTo = this._originalScrollTo;\n      this._node.scrollBy = this._originalScrollBy;\n      this._node.scroll = this._originalScroll;\n      this._node.removeEventListener('scroll', this._checkForArrival);\n    }\n    return null;\n  }\n  _attach(client) {\n    this._clients.push(client);\n    if (this._clients.length === 1) {\n      this._node.scrollTo = this.scrollTo;\n      this._node.scrollBy = this.scrollBy;\n      this._node.scroll = this.scrollTo;\n      this._node.addEventListener('scroll', this._checkForArrival);\n    }\n  }\n}\nScrollerController._instanceMap = new WeakMap();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC1sYWJzL3ZpcnR1YWxpemVyL1Njcm9sbGVyQ29udHJvbGxlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztBQVdBO0FBSUE7QUFIQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBO0FBR0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBR0E7QUFFQTtBQUNBO0FBR0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBR0E7QUFvQkE7QUFDQTtBQWxCQTtBQUlBO0FBSUE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQXFCQTtBQWpCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBSUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFLQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUtBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFJQTtBQUlBO0FBS0E7O0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBRUE7QUFLQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFyTUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnN0ZW9uLXBhbmVsLWZyb250ZW5kL3NyYy9TY3JvbGxlckNvbnRyb2xsZXIudHM/YWQyOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cblxuaW1wb3J0IHtTY3JvbGxUb0Nvb3JkaW5hdGVzfSBmcm9tICcuL2xheW91dHMvc2hhcmVkL0xheW91dC5qcyc7XG5cbnR5cGUgcmV0YXJnZXRTY3JvbGxDYWxsYmFjayA9ICgpID0+IFNjcm9sbFRvQ29vcmRpbmF0ZXM7XG50eXBlIGVuZFNjcm9sbENhbGxiYWNrID0gKCkgPT4gdm9pZDtcblxuZXhwb3J0IGNsYXNzIFNjcm9sbGVyU2hpbSB7XG4gIHByb3RlY3RlZCBfbm9kZTogRWxlbWVudCB8IFdpbmRvdyB8IG51bGwgPSBudWxsO1xuICBwcm90ZWN0ZWQgX2VsZW1lbnQ6IEVsZW1lbnQgfCBudWxsID0gbnVsbDtcblxuICBjb25zdHJ1Y3RvcihlbGVtZW50PzogRWxlbWVudCkge1xuICAgIGNvbnN0IG5vZGUgPSBlbGVtZW50ID8/IHdpbmRvdztcbiAgICB0aGlzLl9ub2RlID0gbm9kZTtcbiAgICBpZiAoZWxlbWVudCkge1xuICAgICAgdGhpcy5fZWxlbWVudCA9IGVsZW1lbnQ7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGdldCBlbGVtZW50KCkge1xuICAgIHJldHVybiAoXG4gICAgICB0aGlzLl9lbGVtZW50IHx8IGRvY3VtZW50LnNjcm9sbGluZ0VsZW1lbnQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XG4gICAgKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgc2Nyb2xsVG9wKCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuc2Nyb2xsVG9wIHx8IHdpbmRvdy5zY3JvbGxZO1xuICB9XG5cbiAgcHVibGljIGdldCBzY3JvbGxMZWZ0KCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuc2Nyb2xsTGVmdCB8fCB3aW5kb3cuc2Nyb2xsWDtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgc2Nyb2xsSGVpZ2h0KCkge1xuICAgIHJldHVybiB0aGlzLmVsZW1lbnQuc2Nyb2xsSGVpZ2h0O1xuICB9XG5cbiAgcHVibGljIGdldCBzY3JvbGxXaWR0aCgpIHtcbiAgICByZXR1cm4gdGhpcy5lbGVtZW50LnNjcm9sbFdpZHRoO1xuICB9XG5cbiAgcHVibGljIGdldCB2aWV3cG9ydEhlaWdodCgpIHtcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudFxuICAgICAgPyB0aGlzLl9lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodFxuICAgICAgOiB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gIH1cblxuICBwdWJsaWMgZ2V0IHZpZXdwb3J0V2lkdGgoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnRcbiAgICAgID8gdGhpcy5fZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aFxuICAgICAgOiB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgbWF4U2Nyb2xsVG9wKCkge1xuICAgIHJldHVybiB0aGlzLnNjcm9sbEhlaWdodCAtIHRoaXMudmlld3BvcnRIZWlnaHQ7XG4gIH1cblxuICBwdWJsaWMgZ2V0IG1heFNjcm9sbExlZnQoKSB7XG4gICAgcmV0dXJuIHRoaXMuc2Nyb2xsV2lkdGggLSB0aGlzLnZpZXdwb3J0V2lkdGg7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFNjcm9sbGVyQ29udHJvbGxlciBleHRlbmRzIFNjcm9sbGVyU2hpbSB7XG4gIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZU1hcDogV2Vha01hcDxFbGVtZW50IHwgV2luZG93LCBTY3JvbGxlckNvbnRyb2xsZXI+ID1cbiAgICBuZXcgV2Vha01hcCgpO1xuICBwcml2YXRlIF9vcmlnaW5hbFNjcm9sbFRvOlxuICAgIHwgdHlwZW9mIEVsZW1lbnQucHJvdG90eXBlLnNjcm9sbFRvXG4gICAgfCB0eXBlb2Ygd2luZG93LnNjcm9sbFRvXG4gICAgfCBudWxsID0gbnVsbDtcbiAgcHJpdmF0ZSBfb3JpZ2luYWxTY3JvbGxCeTpcbiAgICB8IHR5cGVvZiBFbGVtZW50LnByb3RvdHlwZS5zY3JvbGxCeVxuICAgIHwgdHlwZW9mIHdpbmRvdy5zY3JvbGxCeVxuICAgIHwgbnVsbCA9IG51bGw7XG4gIHByaXZhdGUgX29yaWdpbmFsU2Nyb2xsOlxuICAgIHwgdHlwZW9mIEVsZW1lbnQucHJvdG90eXBlLnNjcm9sbFxuICAgIHwgdHlwZW9mIHdpbmRvdy5zY3JvbGxcbiAgICB8IG51bGwgPSBudWxsO1xuICBwcml2YXRlIF9jbGllbnRzOiBBcnJheTx1bmtub3duPiA9IFtdO1xuICBwcml2YXRlIF9yZXRhcmdldDogcmV0YXJnZXRTY3JvbGxDYWxsYmFjayB8IG51bGwgPSBudWxsO1xuICBwcml2YXRlIF9lbmQ6IGVuZFNjcm9sbENhbGxiYWNrIHwgbnVsbCA9IG51bGw7XG4gIHByaXZhdGUgX19kZXN0aW5hdGlvbjogU2Nyb2xsVG9PcHRpb25zIHwgbnVsbCA9IG51bGw7XG5cbiAgY29uc3RydWN0b3IoY2xpZW50OiB1bmtub3duLCBlbGVtZW50PzogRWxlbWVudCkge1xuICAgIHN1cGVyKGVsZW1lbnQpO1xuICAgIGNvbnN0IG5vZGUgPSB0aGlzLl9ub2RlITtcbiAgICBjb25zdCBpbnN0YW5jZSA9IFNjcm9sbGVyQ29udHJvbGxlci5faW5zdGFuY2VNYXAuZ2V0KG5vZGUhKTtcbiAgICBpZiAoaW5zdGFuY2UpIHtcbiAgICAgIGluc3RhbmNlLl9hdHRhY2goY2xpZW50KTtcbiAgICAgIHJldHVybiBpbnN0YW5jZTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fY2hlY2tGb3JBcnJpdmFsID0gdGhpcy5fY2hlY2tGb3JBcnJpdmFsLmJpbmQodGhpcyk7XG4gICAgICB0aGlzLl91cGRhdGVNYW5hZ2VkU2Nyb2xsVG8gPSB0aGlzLl91cGRhdGVNYW5hZ2VkU2Nyb2xsVG8uYmluZCh0aGlzKTtcbiAgICAgIHRoaXMuc2Nyb2xsVG8gPSB0aGlzLnNjcm9sbFRvLmJpbmQodGhpcyk7XG4gICAgICB0aGlzLnNjcm9sbEJ5ID0gdGhpcy5zY3JvbGxCeS5iaW5kKHRoaXMpO1xuICAgICAgdGhpcy5fb3JpZ2luYWxTY3JvbGxUbyA9IG5vZGUuc2Nyb2xsVG87XG4gICAgICB0aGlzLl9vcmlnaW5hbFNjcm9sbEJ5ID0gbm9kZS5zY3JvbGxCeTtcbiAgICAgIHRoaXMuX29yaWdpbmFsU2Nyb2xsID0gbm9kZS5zY3JvbGw7XG4gICAgICB0aGlzLl9hdHRhY2goY2xpZW50KTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgY29ycmVjdGluZ1Njcm9sbEVycm9yID0gZmFsc2U7XG5cbiAgcHJpdmF0ZSBnZXQgX2Rlc3RpbmF0aW9uKCkge1xuICAgIHJldHVybiB0aGlzLl9fZGVzdGluYXRpb247XG4gIH1cblxuICBwdWJsaWMgZ2V0IHNjcm9sbGluZygpIHtcbiAgICByZXR1cm4gdGhpcy5fZGVzdGluYXRpb24gIT09IG51bGw7XG4gIH1cblxuICBwdWJsaWMgc2Nyb2xsVG8ob3B0aW9uczogU2Nyb2xsVG9PcHRpb25zKTogdm9pZDtcbiAgcHVibGljIHNjcm9sbFRvKHg6IG51bWJlciwgeTogbnVtYmVyKTogdm9pZDtcbiAgcHVibGljIHNjcm9sbFRvKHAxOiBTY3JvbGxUb09wdGlvbnMgfCBudW1iZXIsIHAyPzogbnVtYmVyKTogdm9pZDtcbiAgcHVibGljIHNjcm9sbFRvKHAxOiBTY3JvbGxUb09wdGlvbnMgfCBudW1iZXIsIHAyPzogbnVtYmVyKSB7XG4gICAgY29uc3Qgb3B0aW9uczogU2Nyb2xsVG9PcHRpb25zID1cbiAgICAgIHR5cGVvZiBwMSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHAyID09PSAnbnVtYmVyJ1xuICAgICAgICA/IHtsZWZ0OiBwMSwgdG9wOiBwMn1cbiAgICAgICAgOiAocDEgYXMgU2Nyb2xsVG9PcHRpb25zKTtcbiAgICB0aGlzLl9zY3JvbGxUbyhvcHRpb25zKTtcbiAgfVxuXG4gIHB1YmxpYyBzY3JvbGxCeShvcHRpb25zOiBTY3JvbGxUb09wdGlvbnMpOiB2b2lkO1xuICBwdWJsaWMgc2Nyb2xsQnkoeDogbnVtYmVyLCB5OiBudW1iZXIpOiB2b2lkO1xuICBwdWJsaWMgc2Nyb2xsQnkocDE6IFNjcm9sbFRvT3B0aW9ucyB8IG51bWJlciwgcDI/OiBudW1iZXIpOiB2b2lkO1xuICBwdWJsaWMgc2Nyb2xsQnkocDE6IFNjcm9sbFRvT3B0aW9ucyB8IG51bWJlciwgcDI/OiBudW1iZXIpIHtcbiAgICBjb25zdCBvcHRpb25zOiBTY3JvbGxUb09wdGlvbnMgPVxuICAgICAgdHlwZW9mIHAxID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgcDIgPT09ICdudW1iZXInXG4gICAgICAgID8ge2xlZnQ6IHAxLCB0b3A6IHAyfVxuICAgICAgICA6IChwMSBhcyBTY3JvbGxUb09wdGlvbnMpO1xuICAgIGlmIChvcHRpb25zLnRvcCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBvcHRpb25zLnRvcCArPSB0aGlzLnNjcm9sbFRvcDtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMubGVmdCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBvcHRpb25zLmxlZnQgKz0gdGhpcy5zY3JvbGxMZWZ0O1xuICAgIH1cbiAgICB0aGlzLl9zY3JvbGxUbyhvcHRpb25zKTtcbiAgfVxuXG4gIHByaXZhdGUgX25hdGl2ZVNjcm9sbFRvKG9wdGlvbnM6IFNjcm9sbFRvT3B0aW9ucykge1xuICAgIHRoaXMuX29yaWdpbmFsU2Nyb2xsVG8hLmJpbmQodGhpcy5fZWxlbWVudCB8fCB3aW5kb3cpKG9wdGlvbnMpO1xuICB9XG5cbiAgcHJpdmF0ZSBfc2Nyb2xsVG8oXG4gICAgb3B0aW9uczogU2Nyb2xsVG9PcHRpb25zLFxuICAgIHJldGFyZ2V0OiByZXRhcmdldFNjcm9sbENhbGxiYWNrIHwgbnVsbCA9IG51bGwsXG4gICAgZW5kOiBlbmRTY3JvbGxDYWxsYmFjayB8IG51bGwgPSBudWxsXG4gICkge1xuICAgIGlmICh0aGlzLl9lbmQgIT09IG51bGwpIHtcbiAgICAgIHRoaXMuX2VuZCgpO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5iZWhhdmlvciA9PT0gJ3Ntb290aCcpIHtcbiAgICAgIHRoaXMuX3NldERlc3RpbmF0aW9uKG9wdGlvbnMpO1xuICAgICAgdGhpcy5fcmV0YXJnZXQgPSByZXRhcmdldDtcbiAgICAgIHRoaXMuX2VuZCA9IGVuZDtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fcmVzZXRTY3JvbGxTdGF0ZSgpO1xuICAgIH1cbiAgICB0aGlzLl9uYXRpdmVTY3JvbGxUbyhvcHRpb25zKTtcbiAgfVxuXG4gIHByaXZhdGUgX3NldERlc3RpbmF0aW9uKG9wdGlvbnM6IFNjcm9sbFRvT3B0aW9ucykge1xuICAgIGxldCB7dG9wLCBsZWZ0fSA9IG9wdGlvbnM7XG4gICAgdG9wID1cbiAgICAgIHRvcCA9PT0gdW5kZWZpbmVkXG4gICAgICAgID8gdW5kZWZpbmVkXG4gICAgICAgIDogTWF0aC5tYXgoMCwgTWF0aC5taW4odG9wLCB0aGlzLm1heFNjcm9sbFRvcCkpO1xuICAgIGxlZnQgPVxuICAgICAgbGVmdCA9PT0gdW5kZWZpbmVkXG4gICAgICAgID8gdW5kZWZpbmVkXG4gICAgICAgIDogTWF0aC5tYXgoMCwgTWF0aC5taW4obGVmdCwgdGhpcy5tYXhTY3JvbGxMZWZ0KSk7XG4gICAgaWYgKFxuICAgICAgdGhpcy5fZGVzdGluYXRpb24gIT09IG51bGwgJiZcbiAgICAgIGxlZnQgPT09IHRoaXMuX2Rlc3RpbmF0aW9uLmxlZnQgJiZcbiAgICAgIHRvcCA9PT0gdGhpcy5fZGVzdGluYXRpb24udG9wXG4gICAgKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHRoaXMuX19kZXN0aW5hdGlvbiA9IHt0b3AsIGxlZnQsIGJlaGF2aW9yOiAnc21vb3RoJ307XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBwcml2YXRlIF9yZXNldFNjcm9sbFN0YXRlKCkge1xuICAgIHRoaXMuX19kZXN0aW5hdGlvbiA9IG51bGw7XG4gICAgdGhpcy5fcmV0YXJnZXQgPSBudWxsO1xuICAgIHRoaXMuX2VuZCA9IG51bGw7XG4gIH1cblxuICBwcml2YXRlIF91cGRhdGVNYW5hZ2VkU2Nyb2xsVG8oY29vcmRpbmF0ZXM6IFNjcm9sbFRvQ29vcmRpbmF0ZXMpIHtcbiAgICBpZiAodGhpcy5fZGVzdGluYXRpb24pIHtcbiAgICAgIGlmICh0aGlzLl9zZXREZXN0aW5hdGlvbihjb29yZGluYXRlcykpIHtcbiAgICAgICAgdGhpcy5fbmF0aXZlU2Nyb2xsVG8odGhpcy5fZGVzdGluYXRpb24pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBtYW5hZ2VkU2Nyb2xsVG8oXG4gICAgb3B0aW9uczogU2Nyb2xsVG9PcHRpb25zLFxuICAgIHJldGFyZ2V0OiByZXRhcmdldFNjcm9sbENhbGxiYWNrLFxuICAgIGVuZDogZW5kU2Nyb2xsQ2FsbGJhY2tcbiAgKSB7XG4gICAgdGhpcy5fc2Nyb2xsVG8ob3B0aW9ucywgcmV0YXJnZXQsIGVuZCk7XG4gICAgcmV0dXJuIHRoaXMuX3VwZGF0ZU1hbmFnZWRTY3JvbGxUbztcbiAgfVxuXG4gIHB1YmxpYyBjb3JyZWN0U2Nyb2xsRXJyb3IoY29vcmRpbmF0ZXM6IFNjcm9sbFRvQ29vcmRpbmF0ZXMpIHtcbiAgICB0aGlzLmNvcnJlY3RpbmdTY3JvbGxFcnJvciA9IHRydWU7XG4gICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+XG4gICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gKHRoaXMuY29ycmVjdGluZ1Njcm9sbEVycm9yID0gZmFsc2UpKVxuICAgICk7XG4gICAgLy8gQ29ycmVjdCB0aGUgZXJyb3JcbiAgICB0aGlzLl9uYXRpdmVTY3JvbGxUbyhjb29yZGluYXRlcyk7XG4gICAgLy8gVGhlbiwgaWYgd2Ugd2VyZSBoZWFkZWQgZm9yIGEgc3BlY2lmaWMgZGVzdGluYXRpb24sIHdlIGNvbnRpbnVlIHNjcm9sbGluZzpcbiAgICAvLyBGaXJzdCwgd2UgdXBkYXRlIG91ciB0YXJnZXQgZGVzdGluYXRpb24sIGlmIGFwcGxpY2FibGUuLi5cbiAgICBpZiAodGhpcy5fcmV0YXJnZXQpIHtcbiAgICAgIHRoaXMuX3NldERlc3RpbmF0aW9uKHRoaXMuX3JldGFyZ2V0KCkpO1xuICAgIH1cbiAgICAvLyBUaGVuIHdlIGdvIGFoZWFkIGFuZCByZXN1bWUgc2Nyb2xsaW5nXG4gICAgaWYgKHRoaXMuX2Rlc3RpbmF0aW9uKSB7XG4gICAgICB0aGlzLl9uYXRpdmVTY3JvbGxUbyh0aGlzLl9kZXN0aW5hdGlvbik7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBfY2hlY2tGb3JBcnJpdmFsKCkge1xuICAgIGlmICh0aGlzLl9kZXN0aW5hdGlvbiAhPT0gbnVsbCkge1xuICAgICAgY29uc3Qge3Njcm9sbFRvcCwgc2Nyb2xsTGVmdH0gPSB0aGlzO1xuICAgICAgbGV0IHt0b3AsIGxlZnR9ID0gdGhpcy5fZGVzdGluYXRpb247XG4gICAgICB0b3AgPSBNYXRoLm1pbih0b3AgfHwgMCwgdGhpcy5tYXhTY3JvbGxUb3ApO1xuICAgICAgbGVmdCA9IE1hdGgubWluKGxlZnQgfHwgMCwgdGhpcy5tYXhTY3JvbGxMZWZ0KTtcbiAgICAgIGNvbnN0IHRvcERpZmYgPSBNYXRoLmFicyh0b3AgLSBzY3JvbGxUb3ApO1xuICAgICAgY29uc3QgbGVmdERpZmYgPSBNYXRoLmFicyhsZWZ0IC0gc2Nyb2xsTGVmdCk7XG4gICAgICAvLyBXZSBjaGVjayB0byBzZWUgaWYgd2UndmUgYXJyaXZlZCBhdCBvdXIgZGVzdGluYXRpb24uXG4gICAgICBpZiAodG9wRGlmZiA8IDEgJiYgbGVmdERpZmYgPCAxKSB7XG4gICAgICAgIGlmICh0aGlzLl9lbmQpIHtcbiAgICAgICAgICB0aGlzLl9lbmQoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9yZXNldFNjcm9sbFN0YXRlKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcHVibGljIGRldGFjaChjbGllbnQ6IHVua25vd24pIHtcbiAgICB0aGlzLl9jbGllbnRzID0gdGhpcy5fY2xpZW50cy5zcGxpY2UodGhpcy5fY2xpZW50cy5pbmRleE9mKGNsaWVudCksIDEpO1xuICAgIGlmICh0aGlzLl9jbGllbnRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgdGhpcy5fbm9kZSEuc2Nyb2xsVG8gPSB0aGlzLl9vcmlnaW5hbFNjcm9sbFRvITtcbiAgICAgIHRoaXMuX25vZGUhLnNjcm9sbEJ5ID0gdGhpcy5fb3JpZ2luYWxTY3JvbGxCeSE7XG4gICAgICB0aGlzLl9ub2RlIS5zY3JvbGwgPSB0aGlzLl9vcmlnaW5hbFNjcm9sbCE7XG4gICAgICB0aGlzLl9ub2RlIS5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLl9jaGVja0ZvckFycml2YWwpO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHByaXZhdGUgX2F0dGFjaChjbGllbnQ6IHVua25vd24pIHtcbiAgICB0aGlzLl9jbGllbnRzLnB1c2goY2xpZW50KTtcbiAgICBpZiAodGhpcy5fY2xpZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICAgIHRoaXMuX25vZGUhLnNjcm9sbFRvID0gdGhpcy5zY3JvbGxUbztcbiAgICAgIHRoaXMuX25vZGUhLnNjcm9sbEJ5ID0gdGhpcy5zY3JvbGxCeTtcbiAgICAgIHRoaXMuX25vZGUhLnNjcm9sbCA9IHRoaXMuc2Nyb2xsVG87XG4gICAgICB0aGlzLl9ub2RlIS5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLl9jaGVja0ZvckFycml2YWwpO1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@lit-labs/virtualizer/ScrollerController.js\n");

/***/ }),

/***/ "./node_modules/@lit-labs/virtualizer/Virtualizer.js":
/*!***********************************************************!*\
  !*** ./node_modules/@lit-labs/virtualizer/Virtualizer.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Virtualizer\": () => (/* binding */ Virtualizer),\n/* harmony export */   \"virtualizerRef\": () => (/* binding */ virtualizerRef)\n/* harmony export */ });\n/* harmony import */ var _polyfillLoaders_ResizeObserver_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polyfillLoaders/ResizeObserver.js */ \"./node_modules/@lit-labs/virtualizer/polyfillLoaders/ResizeObserver.js\");\n/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./events.js */ \"./node_modules/@lit-labs/virtualizer/events.js\");\n/* harmony import */ var _ScrollerController_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ScrollerController.js */ \"./node_modules/@lit-labs/virtualizer/ScrollerController.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n\n\nconst virtualizerRef = Symbol('virtualizerRef');\nconst SIZER_ATTRIBUTE = 'virtualizer-sizer';\nlet DefaultLayoutConstructor;\n/**\n * Provides virtual scrolling boilerplate.\n *\n * Extensions of this class must set hostElement and layout.\n *\n * Extensions of this class must also override VirtualRepeater's DOM\n * manipulation methods.\n */\nclass Virtualizer {\n  constructor(config) {\n    this._benchmarkStart = null;\n    this._layout = null;\n    this._clippingAncestors = [];\n    /**\n     * Layout provides these values, we set them on _render().\n     * TODO @straversi: Can we find an XOR type, usable for the key here?\n     */\n    this._scrollSize = null;\n    /**\n     * Difference between scroll target's current and required scroll offsets.\n     * Provided by layout.\n     */\n    this._scrollError = null;\n    /**\n     * A list of the positions (top, left) of the children in the current range.\n     */\n    this._childrenPos = null;\n    // TODO: (graynorton): type\n    this._childMeasurements = null;\n    this._toBeMeasured = new Map();\n    this._rangeChanged = true;\n    this._itemsChanged = true;\n    this._visibilityChanged = true;\n    this._scrollerController = null;\n    this._isScroller = false;\n    this._sizer = null;\n    /**\n     * Resize observer attached to hostElement.\n     */\n    this._hostElementRO = null;\n    /**\n     * Resize observer attached to children.\n     */\n    this._childrenRO = null;\n    this._mutationObserver = null;\n    this._scrollEventListeners = [];\n    this._scrollEventListenerOptions = {\n      passive: true\n    };\n    // TODO (graynorton): Rethink, per longer comment below\n    this._loadListener = this._childLoaded.bind(this);\n    /**\n     * Index of element to scroll into view, plus scroll\n     * behavior options, as imperatively specified via\n     * `element(index).scrollIntoView()`\n     */\n    this._scrollIntoViewTarget = null;\n    this._updateScrollIntoViewCoordinates = null;\n    /**\n     * Items to render. Set by items.\n     */\n    this._items = [];\n    /**\n     * Index of the first child in the range, not necessarily the first visible child.\n     * TODO @straversi: Consider renaming these.\n     */\n    this._first = -1;\n    /**\n     * Index of the last child in the range.\n     */\n    this._last = -1;\n    /**\n     * Index of the first item intersecting the viewport.\n     */\n    this._firstVisible = -1;\n    /**\n     * Index of the last item intersecting the viewport.\n     */\n    this._lastVisible = -1;\n    this._scheduled = new WeakSet();\n    /**\n     * Invoked at the end of each render cycle: children in the range are\n     * measured, and their dimensions passed to this callback. Use it to layout\n     * children as needed.\n     */\n    this._measureCallback = null;\n    this._measureChildOverride = null;\n    /**\n     * State for `layoutComplete` promise\n     */\n    this._layoutCompletePromise = null;\n    this._layoutCompleteResolver = null;\n    this._layoutCompleteRejecter = null;\n    this._pendingLayoutComplete = null;\n    if (!config) {\n      throw new Error('Virtualizer constructor requires a configuration object');\n    }\n    if (config.hostElement) {\n      this._init(config);\n    } else {\n      throw new Error('Virtualizer configuration requires the \"hostElement\" property');\n    }\n  }\n  set items(items) {\n    if (Array.isArray(items) && items !== this._items) {\n      this._itemsChanged = true;\n      this._items = items;\n      this._schedule(this._updateLayout);\n    }\n  }\n  _init(config) {\n    this._isScroller = !!config.scroller;\n    this._initHostElement(config);\n    // If no layout is specified, we make an empty\n    // layout config, which will result in the default\n    // layout with default parameters\n    this._initLayout(config.layout || {});\n  }\n  async _initObservers() {\n    this._mutationObserver = new MutationObserver(this._finishDOMUpdate.bind(this));\n    const ResizeObserver = await (0,_polyfillLoaders_ResizeObserver_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n    this._hostElementRO = new ResizeObserver(() => this._hostElementSizeChanged());\n    this._childrenRO = new ResizeObserver(this._childrenSizeChanged.bind(this));\n  }\n  _initHostElement(config) {\n    const hostElement = this._hostElement = config.hostElement;\n    this._applyVirtualizerStyles();\n    hostElement[virtualizerRef] = this;\n  }\n  async connected() {\n    await this._initObservers();\n    const includeSelf = this._isScroller;\n    this._clippingAncestors = getClippingAncestors(this._hostElement, includeSelf);\n    this._scrollerController = new _ScrollerController_js__WEBPACK_IMPORTED_MODULE_2__.ScrollerController(this, this._clippingAncestors[0]);\n    this._schedule(this._updateLayout);\n    this._observeAndListen();\n  }\n  _observeAndListen() {\n    this._mutationObserver.observe(this._hostElement, {\n      childList: true\n    });\n    this._hostElementRO.observe(this._hostElement);\n    this._scrollEventListeners.push(window);\n    window.addEventListener('scroll', this, this._scrollEventListenerOptions);\n    this._clippingAncestors.forEach(ancestor => {\n      ancestor.addEventListener('scroll', this, this._scrollEventListenerOptions);\n      this._scrollEventListeners.push(ancestor);\n      this._hostElementRO.observe(ancestor);\n    });\n    this._hostElementRO.observe(this._scrollerController.element);\n    this._children.forEach(child => this._childrenRO.observe(child));\n    this._scrollEventListeners.forEach(target => target.addEventListener('scroll', this, this._scrollEventListenerOptions));\n  }\n  disconnected() {\n    var _a, _b, _c, _d;\n    this._scrollEventListeners.forEach(target => target.removeEventListener('scroll', this, this._scrollEventListenerOptions));\n    this._scrollEventListeners = [];\n    this._clippingAncestors = [];\n    this._scrollerController = ((_a = this._scrollerController) === null || _a === void 0 ? void 0 : _a.detach(this)) || null;\n    (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.disconnect();\n    (_c = this._hostElementRO) === null || _c === void 0 ? void 0 : _c.disconnect();\n    (_d = this._childrenRO) === null || _d === void 0 ? void 0 : _d.disconnect();\n    this._rejectLayoutCompletePromise('disconnected');\n  }\n  _applyVirtualizerStyles() {\n    const hostElement = this._hostElement;\n    // Would rather set these CSS properties on the host using Shadow Root\n    // style scoping (and falling back to a global stylesheet where native\n    // Shadow DOM is not available), but this Mobile Safari bug is preventing\n    // that from working: https://bugs.webkit.org/show_bug.cgi?id=226195\n    const style = hostElement.style;\n    style.display = style.display || 'block';\n    style.position = style.position || 'relative';\n    style.contain = style.contain || 'size layout';\n    if (this._isScroller) {\n      style.overflow = style.overflow || 'auto';\n      style.minHeight = style.minHeight || '150px';\n    }\n  }\n  _getSizer() {\n    const hostElement = this._hostElement;\n    if (!this._sizer) {\n      // Use a pre-existing sizer element if provided (for better integration\n      // with vDOM renderers)\n      let sizer = hostElement.querySelector(`[${SIZER_ATTRIBUTE}]`);\n      if (!sizer) {\n        sizer = document.createElement('div');\n        sizer.setAttribute(SIZER_ATTRIBUTE, '');\n        hostElement.appendChild(sizer);\n      }\n      // When the scrollHeight is large, the height of this element might be\n      // ignored. Setting content and font-size ensures the element has a size.\n      Object.assign(sizer.style, {\n        position: 'absolute',\n        margin: '-2px 0 0 0',\n        padding: 0,\n        visibility: 'hidden',\n        fontSize: '2px'\n      });\n      sizer.innerHTML = '&nbsp;';\n      sizer.setAttribute(SIZER_ATTRIBUTE, '');\n      this._sizer = sizer;\n    }\n    return this._sizer;\n  }\n  updateLayoutConfig(layoutConfig) {\n    const Ctor = layoutConfig.type || DefaultLayoutConstructor;\n    if (typeof Ctor === 'function' && this._layout instanceof Ctor) {\n      const config = {\n        ...layoutConfig\n      };\n      delete config.type;\n      this._layout.config = config;\n      return true;\n    }\n    return false;\n  }\n  async _initLayout(layoutConfig) {\n    let config;\n    let Ctor;\n    if (typeof layoutConfig.type === 'function') {\n      // If we have a full LayoutSpecifier, the `type` property\n      // gives us our constructor...\n      Ctor = layoutConfig.type;\n      // ...while the rest of the specifier is our layout config\n      const copy = {\n        ...layoutConfig\n      };\n      delete copy.type;\n      config = copy;\n    } else {\n      // If we don't have a full LayoutSpecifier, we just\n      // have a config for the default layout\n      config = layoutConfig;\n    }\n    if (Ctor === undefined) {\n      // If we don't have a constructor yet, load the default\n      DefaultLayoutConstructor = Ctor = (await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_lit-labs_virtualizer_layouts_shared_BaseLayout_js\"), __webpack_require__.e(\"vendors-node_modules_lit-labs_virtualizer_layouts_flow_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! ./layouts/flow.js */ \"./node_modules/@lit-labs/virtualizer/layouts/flow.js\"))).FlowLayout;\n    }\n    this._layout = new Ctor(config);\n    if (this._layout.measureChildren && typeof this._layout.updateItemSizes === 'function') {\n      if (typeof this._layout.measureChildren === 'function') {\n        this._measureChildOverride = this._layout.measureChildren;\n      }\n      this._measureCallback = this._layout.updateItemSizes.bind(this._layout);\n    }\n    this._layout.addEventListener('scrollsizechange', this);\n    this._layout.addEventListener('scrollerrorchange', this);\n    this._layout.addEventListener('itempositionchange', this);\n    this._layout.addEventListener('rangechange', this);\n    this._layout.addEventListener('unpinned', this);\n    if (this._layout.listenForChildLoadEvents) {\n      this._hostElement.addEventListener('load', this._loadListener, true);\n    }\n    this._schedule(this._updateLayout);\n  }\n  // TODO (graynorton): Rework benchmarking so that it has no API and\n  // instead is always on except in production builds\n  startBenchmarking() {\n    if (this._benchmarkStart === null) {\n      this._benchmarkStart = window.performance.now();\n    }\n  }\n  stopBenchmarking() {\n    if (this._benchmarkStart !== null) {\n      const now = window.performance.now();\n      const timeElapsed = now - this._benchmarkStart;\n      const entries = performance.getEntriesByName('uv-virtualizing', 'measure');\n      const virtualizationTime = entries.filter(e => e.startTime >= this._benchmarkStart && e.startTime < now).reduce((t, m) => t + m.duration, 0);\n      this._benchmarkStart = null;\n      return {\n        timeElapsed,\n        virtualizationTime\n      };\n    }\n    return null;\n  }\n  _measureChildren() {\n    const mm = {};\n    const children = this._children;\n    const fn = this._measureChildOverride || this._measureChild;\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      const idx = this._first + i;\n      if (this._itemsChanged || this._toBeMeasured.has(child)) {\n        mm[idx] = fn.call(this, child, this._items[idx]);\n      }\n    }\n    this._childMeasurements = mm;\n    this._schedule(this._updateLayout);\n    this._toBeMeasured.clear();\n  }\n  /**\n   * Returns the width, height, and margins of the given child.\n   */\n  _measureChild(element) {\n    // offsetWidth doesn't take transforms in consideration, so we use\n    // getBoundingClientRect which does.\n    const {\n      width,\n      height\n    } = element.getBoundingClientRect();\n    return Object.assign({\n      width,\n      height\n    }, getMargins(element));\n  }\n  async _schedule(method) {\n    if (!this._scheduled.has(method)) {\n      this._scheduled.add(method);\n      await Promise.resolve();\n      this._scheduled.delete(method);\n      method.call(this);\n    }\n  }\n  async _updateDOM() {\n    const {\n      _rangeChanged,\n      _itemsChanged\n    } = this;\n    if (this._visibilityChanged) {\n      this._notifyVisibility();\n      this._visibilityChanged = false;\n    }\n    if (_rangeChanged || _itemsChanged) {\n      this._notifyRange();\n      this._rangeChanged = false;\n    } else {\n      this._finishDOMUpdate();\n    }\n  }\n  _finishDOMUpdate() {\n    this._children.forEach(child => this._childrenRO.observe(child));\n    this._checkScrollIntoViewTarget(this._childrenPos);\n    this._positionChildren(this._childrenPos);\n    this._sizeHostElement(this._scrollSize);\n    this._correctScrollError();\n    if (this._benchmarkStart && 'mark' in window.performance) {\n      window.performance.mark('uv-end');\n    }\n  }\n  _updateLayout() {\n    if (this._layout) {\n      this._layout.items = this._items;\n      this._updateView();\n      if (this._childMeasurements !== null) {\n        // If the layout has been changed, we may have measurements but no callback\n        if (this._measureCallback) {\n          this._measureCallback(this._childMeasurements);\n        }\n        this._childMeasurements = null;\n      }\n      this._layout.reflowIfNeeded();\n      if (this._benchmarkStart && 'mark' in window.performance) {\n        window.performance.mark('uv-end');\n      }\n    }\n  }\n  _handleScrollEvent() {\n    var _a;\n    if (this._benchmarkStart && 'mark' in window.performance) {\n      try {\n        window.performance.measure('uv-virtualizing', 'uv-start', 'uv-end');\n      } catch (e) {\n        console.warn('Error measuring performance data: ', e);\n      }\n      window.performance.mark('uv-start');\n    }\n    if (this._scrollerController.correctingScrollError === false) {\n      // This is a user-initiated scroll, so we unpin the layout\n      (_a = this._layout) === null || _a === void 0 ? void 0 : _a.unpin();\n    }\n    this._schedule(this._updateLayout);\n  }\n  handleEvent(event) {\n    switch (event.type) {\n      case 'scroll':\n        if (event.currentTarget === window || this._clippingAncestors.includes(event.currentTarget)) {\n          this._handleScrollEvent();\n        }\n        break;\n      case 'scrollsizechange':\n        this._scrollSize = event.detail;\n        this._schedule(this._updateDOM);\n        break;\n      case 'scrollerrorchange':\n        this._scrollError = event.detail;\n        this._schedule(this._updateDOM);\n        break;\n      case 'itempositionchange':\n        this._childrenPos = event.detail;\n        this._schedule(this._updateDOM);\n        break;\n      case 'rangechange':\n        this._adjustRange(event.detail);\n        this._schedule(this._updateDOM);\n        break;\n      case 'unpinned':\n        this._hostElement.dispatchEvent(new _events_js__WEBPACK_IMPORTED_MODULE_1__.UnpinnedEvent());\n        break;\n      default:\n        console.warn('event not handled', event);\n    }\n  }\n  get _children() {\n    const arr = [];\n    let next = this._hostElement.firstElementChild;\n    while (next) {\n      if (!next.hasAttribute(SIZER_ATTRIBUTE)) {\n        arr.push(next);\n      }\n      next = next.nextElementSibling;\n    }\n    return arr;\n  }\n  _updateView() {\n    var _a;\n    const hostElement = this._hostElement;\n    const scrollingElement = (_a = this._scrollerController) === null || _a === void 0 ? void 0 : _a.element;\n    const layout = this._layout;\n    if (hostElement && scrollingElement && layout) {\n      let top, left, bottom, right;\n      const hostElementBounds = hostElement.getBoundingClientRect();\n      top = 0;\n      left = 0;\n      bottom = window.innerHeight;\n      right = window.innerWidth;\n      const ancestorBounds = this._clippingAncestors.map(ancestor => ancestor.getBoundingClientRect());\n      ancestorBounds.unshift(hostElementBounds);\n      for (const bounds of ancestorBounds) {\n        top = Math.max(top, bounds.top);\n        left = Math.max(left, bounds.left);\n        bottom = Math.min(bottom, bounds.bottom);\n        right = Math.min(right, bounds.right);\n      }\n      const scrollingElementBounds = scrollingElement.getBoundingClientRect();\n      const offsetWithinScroller = {\n        left: hostElementBounds.left - scrollingElementBounds.left,\n        top: hostElementBounds.top - scrollingElementBounds.top\n      };\n      const totalScrollSize = {\n        width: scrollingElement.scrollWidth,\n        height: scrollingElement.scrollHeight\n      };\n      const scrollTop = top - hostElementBounds.top + hostElement.scrollTop;\n      const scrollLeft = left - hostElementBounds.left + hostElement.scrollLeft;\n      const height = Math.max(1, bottom - top);\n      const width = Math.max(1, right - left);\n      layout.viewportSize = {\n        width,\n        height\n      };\n      layout.viewportScroll = {\n        top: scrollTop,\n        left: scrollLeft\n      };\n      layout.totalScrollSize = totalScrollSize;\n      layout.offsetWithinScroller = offsetWithinScroller;\n    }\n  }\n  /**\n   * Styles the host element so that its size reflects the\n   * total size of all items.\n   */\n  _sizeHostElement(size) {\n    // Some browsers seem to crap out if the host element gets larger than\n    // a certain size, so we clamp it here (this value based on ad hoc\n    // testing in Chrome / Safari / Firefox Mac)\n    const max = 8200000;\n    const h = size && size.width !== null ? Math.min(max, size.width) : 0;\n    const v = size && size.height !== null ? Math.min(max, size.height) : 0;\n    if (this._isScroller) {\n      this._getSizer().style.transform = `translate(${h}px, ${v}px)`;\n    } else {\n      const style = this._hostElement.style;\n      style.minWidth = h ? `${h}px` : '100%';\n      style.minHeight = v ? `${v}px` : '100%';\n    }\n  }\n  /**\n   * Sets the top and left transform style of the children from the values in\n   * pos.\n   */\n  _positionChildren(pos) {\n    if (pos) {\n      pos.forEach(({\n        top,\n        left,\n        width,\n        height,\n        xOffset,\n        yOffset\n      }, index) => {\n        const child = this._children[index - this._first];\n        if (child) {\n          child.style.position = 'absolute';\n          child.style.boxSizing = 'border-box';\n          child.style.transform = `translate(${left}px, ${top}px)`;\n          if (width !== undefined) {\n            child.style.width = width + 'px';\n          }\n          if (height !== undefined) {\n            child.style.height = height + 'px';\n          }\n          child.style.left = xOffset === undefined ? null : xOffset + 'px';\n          child.style.top = yOffset === undefined ? null : yOffset + 'px';\n        }\n      });\n    }\n  }\n  async _adjustRange(range) {\n    const {\n      _first,\n      _last,\n      _firstVisible,\n      _lastVisible\n    } = this;\n    this._first = range.first;\n    this._last = range.last;\n    this._firstVisible = range.firstVisible;\n    this._lastVisible = range.lastVisible;\n    this._rangeChanged = this._rangeChanged || this._first !== _first || this._last !== _last;\n    this._visibilityChanged = this._visibilityChanged || this._firstVisible !== _firstVisible || this._lastVisible !== _lastVisible;\n  }\n  _correctScrollError() {\n    if (this._scrollError) {\n      const {\n        scrollTop,\n        scrollLeft\n      } = this._scrollerController;\n      const {\n        top,\n        left\n      } = this._scrollError;\n      this._scrollError = null;\n      this._scrollerController.correctScrollError({\n        top: scrollTop - top,\n        left: scrollLeft - left\n      });\n    }\n  }\n  element(index) {\n    var _a;\n    if (index === Infinity) {\n      index = this._items.length - 1;\n    }\n    return ((_a = this._items) === null || _a === void 0 ? void 0 : _a[index]) === undefined ? undefined : {\n      scrollIntoView: (options = {}) => this._scrollElementIntoView({\n        ...options,\n        index\n      })\n    };\n  }\n  _scrollElementIntoView(options) {\n    if (options.index >= this._first && options.index <= this._last) {\n      this._children[options.index - this._first].scrollIntoView(options);\n    } else {\n      options.index = Math.min(options.index, this._items.length - 1);\n      if (options.behavior === 'smooth') {\n        const coordinates = this._layout.getScrollIntoViewCoordinates(options);\n        const {\n          behavior\n        } = options;\n        this._updateScrollIntoViewCoordinates = this._scrollerController.managedScrollTo(Object.assign(coordinates, {\n          behavior\n        }), () => this._layout.getScrollIntoViewCoordinates(options), () => this._scrollIntoViewTarget = null);\n        this._scrollIntoViewTarget = options;\n      } else {\n        this._layout.pin = options;\n      }\n    }\n  }\n  /**\n   * If we are smoothly scrolling to an element and the target element\n   * is in the DOM, we update our target coordinates as needed\n   */\n  _checkScrollIntoViewTarget(pos) {\n    const {\n      index\n    } = this._scrollIntoViewTarget || {};\n    if (index && (pos === null || pos === void 0 ? void 0 : pos.has(index))) {\n      this._updateScrollIntoViewCoordinates(this._layout.getScrollIntoViewCoordinates(this._scrollIntoViewTarget));\n    }\n  }\n  /**\n   * Emits a rangechange event with the current first, last, firstVisible, and\n   * lastVisible.\n   */\n  _notifyRange() {\n    this._hostElement.dispatchEvent(new _events_js__WEBPACK_IMPORTED_MODULE_1__.RangeChangedEvent({\n      first: this._first,\n      last: this._last\n    }));\n  }\n  _notifyVisibility() {\n    this._hostElement.dispatchEvent(new _events_js__WEBPACK_IMPORTED_MODULE_1__.VisibilityChangedEvent({\n      first: this._firstVisible,\n      last: this._lastVisible\n    }));\n  }\n  get layoutComplete() {\n    // Lazily create promise\n    if (!this._layoutCompletePromise) {\n      this._layoutCompletePromise = new Promise((resolve, reject) => {\n        this._layoutCompleteResolver = resolve;\n        this._layoutCompleteRejecter = reject;\n      });\n    }\n    return this._layoutCompletePromise;\n  }\n  _rejectLayoutCompletePromise(reason) {\n    if (this._layoutCompleteRejecter !== null) {\n      this._layoutCompleteRejecter(reason);\n    }\n    this._resetLayoutCompleteState();\n  }\n  _scheduleLayoutComplete() {\n    // Don't do anything unless we have a pending promise\n    // And only request a frame if we haven't already done so\n    if (this._layoutCompletePromise && this._pendingLayoutComplete === null) {\n      // Wait one additional frame to be sure the layout is stable\n      this._pendingLayoutComplete = requestAnimationFrame(() => requestAnimationFrame(() => this._resolveLayoutCompletePromise()));\n    }\n  }\n  _resolveLayoutCompletePromise() {\n    if (this._layoutCompleteResolver !== null) {\n      this._layoutCompleteResolver();\n    }\n    this._resetLayoutCompleteState();\n  }\n  _resetLayoutCompleteState() {\n    this._layoutCompletePromise = null;\n    this._layoutCompleteResolver = null;\n    this._layoutCompleteRejecter = null;\n    this._pendingLayoutComplete = null;\n  }\n  /**\n   * Render and update the view at the next opportunity with the given\n   * hostElement size.\n   */\n  _hostElementSizeChanged() {\n    this._schedule(this._updateLayout);\n  }\n  // TODO (graynorton): Rethink how this works. Probably child loading is too specific\n  // to have dedicated support for; might want some more generic lifecycle hooks for\n  // layouts to use. Possibly handle measurement this way, too, or maybe that remains\n  // a first-class feature?\n  _childLoaded() {}\n  // This is the callback for the ResizeObserver that watches the\n  // virtualizer's children. We land here at the end of every virtualizer\n  // update cycle that results in changes to physical items, and we also\n  // end up here if one or more children change size independently of\n  // the virtualizer update cycle.\n  _childrenSizeChanged(changes) {\n    // Only measure if the layout requires it\n    if (this._layout.measureChildren) {\n      for (const change of changes) {\n        this._toBeMeasured.set(change.target, change.contentRect);\n      }\n      this._measureChildren();\n    }\n    // If this is the end of an update cycle, we need to reset some\n    // internal state. This should be a harmless no-op if we're handling\n    // an out-of-cycle ResizeObserver callback, so we don't need to\n    // distinguish between the two cases.\n    this._scheduleLayoutComplete();\n    this._itemsChanged = false;\n    this._rangeChanged = false;\n  }\n}\nfunction getMargins(el) {\n  const style = window.getComputedStyle(el);\n  return {\n    marginTop: getMarginValue(style.marginTop),\n    marginRight: getMarginValue(style.marginRight),\n    marginBottom: getMarginValue(style.marginBottom),\n    marginLeft: getMarginValue(style.marginLeft)\n  };\n}\nfunction getMarginValue(value) {\n  const float = value ? parseFloat(value) : NaN;\n  return Number.isNaN(float) ? 0 : float;\n}\n// TODO (graynorton): Deal with iframes?\nfunction getParentElement(el) {\n  if (el.assignedSlot !== null) {\n    return el.assignedSlot;\n  }\n  if (el.parentElement !== null) {\n    return el.parentElement;\n  }\n  const parentNode = el.parentNode;\n  if (parentNode && parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    return parentNode.host || null;\n  }\n  return null;\n}\n///\nfunction getElementAncestors(el, includeSelf = false) {\n  const ancestors = [];\n  let parent = includeSelf ? el : getParentElement(el);\n  while (parent !== null) {\n    ancestors.push(parent);\n    parent = getParentElement(parent);\n  }\n  return ancestors;\n}\nfunction getClippingAncestors(el, includeSelf = false) {\n  return getElementAncestors(el, includeSelf).filter(a => getComputedStyle(a).overflow !== 'visible');\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@lit-labs/virtualizer/Virtualizer.js\n");

/***/ }),

/***/ "./node_modules/@lit-labs/virtualizer/events.js":
/*!******************************************************!*\
  !*** ./node_modules/@lit-labs/virtualizer/events.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"RangeChangedEvent\": () => (/* binding */ RangeChangedEvent),\n/* harmony export */   \"UnpinnedEvent\": () => (/* binding */ UnpinnedEvent),\n/* harmony export */   \"VisibilityChangedEvent\": () => (/* binding */ VisibilityChangedEvent)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nclass RangeChangedEvent extends Event {\n  constructor(range) {\n    super(RangeChangedEvent.eventName, {\n      bubbles: true\n    });\n    this.first = range.first;\n    this.last = range.last;\n  }\n}\nRangeChangedEvent.eventName = 'rangeChanged';\nclass VisibilityChangedEvent extends Event {\n  constructor(range) {\n    super(VisibilityChangedEvent.eventName, {\n      bubbles: true\n    });\n    this.first = range.first;\n    this.last = range.last;\n  }\n}\nVisibilityChangedEvent.eventName = 'visibilityChanged';\nclass UnpinnedEvent extends Event {\n  constructor() {\n    super(UnpinnedEvent.eventName, {\n      bubbles: false\n    });\n  }\n}\nUnpinnedEvent.eventName = 'unpinned';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC1sYWJzL3ZpcnR1YWxpemVyL2V2ZW50cy5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7QUFNQTtBQU1BO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQVRBO0FBWUE7QUFNQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFUQTtBQVlBO0FBR0E7QUFDQTtBQUFBO0FBQUE7QUFDQTs7QUFKQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvc3JjL2V2ZW50cy50cz9jM2U4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTENcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBCU0QtMy1DbGF1c2VcbiAqL1xuXG5leHBvcnQgY2xhc3MgUmFuZ2VDaGFuZ2VkRXZlbnQgZXh0ZW5kcyBFdmVudCB7XG4gIHN0YXRpYyBldmVudE5hbWUgPSAncmFuZ2VDaGFuZ2VkJztcblxuICBmaXJzdDogbnVtYmVyO1xuICBsYXN0OiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IocmFuZ2U6IFJhbmdlKSB7XG4gICAgc3VwZXIoUmFuZ2VDaGFuZ2VkRXZlbnQuZXZlbnROYW1lLCB7YnViYmxlczogdHJ1ZX0pO1xuICAgIHRoaXMuZmlyc3QgPSByYW5nZS5maXJzdDtcbiAgICB0aGlzLmxhc3QgPSByYW5nZS5sYXN0O1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBWaXNpYmlsaXR5Q2hhbmdlZEV2ZW50IGV4dGVuZHMgRXZlbnQge1xuICBzdGF0aWMgZXZlbnROYW1lID0gJ3Zpc2liaWxpdHlDaGFuZ2VkJztcblxuICBmaXJzdDogbnVtYmVyO1xuICBsYXN0OiBudW1iZXI7XG5cbiAgY29uc3RydWN0b3IocmFuZ2U6IFJhbmdlKSB7XG4gICAgc3VwZXIoVmlzaWJpbGl0eUNoYW5nZWRFdmVudC5ldmVudE5hbWUsIHtidWJibGVzOiB0cnVlfSk7XG4gICAgdGhpcy5maXJzdCA9IHJhbmdlLmZpcnN0O1xuICAgIHRoaXMubGFzdCA9IHJhbmdlLmxhc3Q7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFVucGlubmVkRXZlbnQgZXh0ZW5kcyBFdmVudCB7XG4gIHN0YXRpYyBldmVudE5hbWUgPSAndW5waW5uZWQnO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKFVucGlubmVkRXZlbnQuZXZlbnROYW1lLCB7YnViYmxlczogZmFsc2V9KTtcbiAgfVxufVxuXG5pbnRlcmZhY2UgUmFuZ2Uge1xuICBmaXJzdDogbnVtYmVyO1xuICBsYXN0OiBudW1iZXI7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@lit-labs/virtualizer/events.js\n");

/***/ }),

/***/ "./node_modules/@lit-labs/virtualizer/lit-virtualizer.js":
/*!***************************************************************!*\
  !*** ./node_modules/@lit-labs/virtualizer/lit-virtualizer.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LitVirtualizer\": () => (/* reexport safe */ _LitVirtualizer_js__WEBPACK_IMPORTED_MODULE_0__.LitVirtualizer),\n/* harmony export */   \"RangeChangedEvent\": () => (/* reexport safe */ _events_js__WEBPACK_IMPORTED_MODULE_1__.RangeChangedEvent),\n/* harmony export */   \"VisibilityChangedEvent\": () => (/* reexport safe */ _events_js__WEBPACK_IMPORTED_MODULE_1__.VisibilityChangedEvent)\n/* harmony export */ });\n/* harmony import */ var _LitVirtualizer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LitVirtualizer.js */ \"./node_modules/@lit-labs/virtualizer/LitVirtualizer.js\");\n/* harmony import */ var _events_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./events.js */ \"./node_modules/@lit-labs/virtualizer/events.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n\n\n/**\n * Import this module to declare the lit-virtualizer custom element.\n */\ncustomElements.define('lit-virtualizer', _LitVirtualizer_js__WEBPACK_IMPORTED_MODULE_0__.LitVirtualizer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC1sYWJzL3ZpcnR1YWxpemVyL2xpdC12aXJ0dWFsaXplci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBOzs7OztBQU1BO0FBQ0E7QUFDQTtBQUVBOzs7QUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvc3JjL2xpdC12aXJ0dWFsaXplci50cz9iMjYxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCAyMDIxIEdvb2dsZSBMTENcbiAqIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBCU0QtMy1DbGF1c2VcbiAqL1xuXG5pbXBvcnQge0xpdFZpcnR1YWxpemVyfSBmcm9tICcuL0xpdFZpcnR1YWxpemVyLmpzJztcbmV4cG9ydCB7TGl0VmlydHVhbGl6ZXJ9O1xuZXhwb3J0IHtSYW5nZUNoYW5nZWRFdmVudCwgVmlzaWJpbGl0eUNoYW5nZWRFdmVudH0gZnJvbSAnLi9ldmVudHMuanMnO1xuXG4vKipcbiAqIEltcG9ydCB0aGlzIG1vZHVsZSB0byBkZWNsYXJlIHRoZSBsaXQtdmlydHVhbGl6ZXIgY3VzdG9tIGVsZW1lbnQuXG4gKi9cbmN1c3RvbUVsZW1lbnRzLmRlZmluZSgnbGl0LXZpcnR1YWxpemVyJywgTGl0VmlydHVhbGl6ZXIpO1xuXG5kZWNsYXJlIGdsb2JhbCB7XG4gIGludGVyZmFjZSBIVE1MRWxlbWVudFRhZ05hbWVNYXAge1xuICAgICdsaXQtdmlydHVhbGl6ZXInOiBMaXRWaXJ0dWFsaXplcjtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@lit-labs/virtualizer/lit-virtualizer.js\n");

/***/ }),

/***/ "./node_modules/@lit-labs/virtualizer/polyfillLoaders/ResizeObserver.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@lit-labs/virtualizer/polyfillLoaders/ResizeObserver.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ResizeObserver)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nlet _RO;\nlet RO;\nasync function ResizeObserver() {\n  return RO || init();\n}\nasync function init() {\n  if (_RO) {\n    return (await _RO).default;\n  } else {\n    _RO = window.ResizeObserver;\n    try {\n      new _RO(function () {});\n    } catch (e) {\n      _RO = __webpack_require__.e(/*! import() */ \"vendors-node_modules_lit-labs_virtualizer_polyfills_resize-observer-polyfill_ResizeObserver_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../polyfills/resize-observer-polyfill/ResizeObserver.js */ \"./node_modules/@lit-labs/virtualizer/polyfills/resize-observer-polyfill/ResizeObserver.js\"));\n      _RO = (await _RO).default;\n    }\n    return RO = _RO;\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC1sYWJzL3ZpcnR1YWxpemVyL3BvbHlmaWxsTG9hZGVycy9SZXNpemVPYnNlcnZlci5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7O0FBVUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBOztBQUVBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC8uLi9zcmMvcG9seWZpbGxMb2FkZXJzL1Jlc2l6ZU9ic2VydmVyLnRzPzQzZWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMjEgR29vZ2xlIExMQ1xuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEJTRC0zLUNsYXVzZVxuICovXG5cbmltcG9ydCB7UmVzaXplT2JzZXJ2ZXJDb25zdHJ1Y3Rvcn0gZnJvbSAnLi4vcG9seWZpbGxzL3Jlc2l6ZS1vYnNlcnZlci1wb2x5ZmlsbC9SZXNpemVPYnNlcnZlci5qcyc7XG50eXBlIFJlc2l6ZU9ic2VydmVyTW9kdWxlID1cbiAgdHlwZW9mIGltcG9ydCgnLi4vcG9seWZpbGxzL3Jlc2l6ZS1vYnNlcnZlci1wb2x5ZmlsbC9SZXNpemVPYnNlcnZlci5qcycpO1xuXG5sZXQgX1JPOiBSZXNpemVPYnNlcnZlck1vZHVsZSB8IFJlc2l6ZU9ic2VydmVyQ29uc3RydWN0b3I7XG5sZXQgUk86IFJlc2l6ZU9ic2VydmVyQ29uc3RydWN0b3I7XG5cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIFJlc2l6ZU9ic2VydmVyKCkge1xuICByZXR1cm4gUk8gfHwgaW5pdCgpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBpbml0KCkge1xuICBpZiAoX1JPKSB7XG4gICAgcmV0dXJuICgoYXdhaXQgX1JPKSBhcyBSZXNpemVPYnNlcnZlck1vZHVsZSkuZGVmYXVsdDtcbiAgfSBlbHNlIHtcbiAgICBfUk8gPSB3aW5kb3cuUmVzaXplT2JzZXJ2ZXI7XG4gICAgdHJ5IHtcbiAgICAgIG5ldyBfUk8oZnVuY3Rpb24gKCkge30pO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIF9STyA9IGltcG9ydChcbiAgICAgICAgJy4uL3BvbHlmaWxscy9yZXNpemUtb2JzZXJ2ZXItcG9seWZpbGwvUmVzaXplT2JzZXJ2ZXIuanMnXG4gICAgICApIGFzIHVua25vd24gYXMgUmVzaXplT2JzZXJ2ZXJNb2R1bGU7XG4gICAgICBfUk8gPSAoYXdhaXQgX1JPKS5kZWZhdWx0O1xuICAgIH1cbiAgICByZXR1cm4gKFJPID0gX1JPKTtcbiAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@lit-labs/virtualizer/polyfillLoaders/ResizeObserver.js\n");

/***/ }),

/***/ "./node_modules/@lit-labs/virtualizer/virtualize.js":
/*!**********************************************************!*\
  !*** ./node_modules/@lit-labs/virtualizer/virtualize.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"defaultKeyFunction\": () => (/* binding */ defaultKeyFunction),\n/* harmony export */   \"defaultRenderItem\": () => (/* binding */ defaultRenderItem),\n/* harmony export */   \"virtualize\": () => (/* binding */ virtualize),\n/* harmony export */   \"virtualizerRef\": () => (/* reexport safe */ _Virtualizer_js__WEBPACK_IMPORTED_MODULE_4__.virtualizerRef)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_directive_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lit/directive.js */ \"./node_modules/lit/directive.js\");\n/* harmony import */ var lit_async_directive_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lit/async-directive.js */ \"./node_modules/lit/async-directive.js\");\n/* harmony import */ var lit_directives_repeat_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lit/directives/repeat.js */ \"./node_modules/lit/directives/repeat.js\");\n/* harmony import */ var _Virtualizer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Virtualizer.js */ \"./node_modules/@lit-labs/virtualizer/Virtualizer.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n\n\n\n\n\nconst defaultKeyFunction = item => item;\nconst defaultRenderItem = (item, idx) => lit__WEBPACK_IMPORTED_MODULE_0__.html`${idx}: ${JSON.stringify(item, null, 2)}`;\nclass VirtualizeDirective extends lit_async_directive_js__WEBPACK_IMPORTED_MODULE_2__.AsyncDirective {\n  constructor(part) {\n    super(part);\n    this._virtualizer = null;\n    this._first = 0;\n    this._last = -1;\n    this._renderItem = (item, idx) => defaultRenderItem(item, idx + this._first);\n    this._keyFunction = (item, idx) => defaultKeyFunction(item, idx + this._first);\n    this._items = [];\n    if (part.type !== lit_directive_js__WEBPACK_IMPORTED_MODULE_1__.PartType.CHILD) {\n      throw new Error('The virtualize directive can only be used in child expressions');\n    }\n  }\n  render(config) {\n    if (config) {\n      this._setFunctions(config);\n    }\n    const itemsToRender = [];\n    // TODO (graynorton): Is this the best / only place to ensure\n    // that _last isn't outside the current bounds of the items array?\n    // Not sure we should ever arrive here with it out of bounds.\n    // Repro case for original issue: https://tinyurl.com/yes8b2e6\n    const lastItem = Math.min(this._items.length, this._last + 1);\n    if (this._first >= 0 && this._last >= this._first) {\n      for (let i = this._first; i < lastItem; i++) {\n        itemsToRender.push(this._items[i]);\n      }\n    }\n    return (0,lit_directives_repeat_js__WEBPACK_IMPORTED_MODULE_3__.repeat)(itemsToRender, this._keyFunction, this._renderItem);\n  }\n  update(part, [config]) {\n    this._setFunctions(config);\n    this._items = config.items || [];\n    if (this._virtualizer) {\n      this._updateVirtualizerConfig(part, config);\n    } else {\n      this._initialize(part, config);\n    }\n    return this.render();\n  }\n  _updateVirtualizerConfig(part, config) {\n    const compatible = this._virtualizer.updateLayoutConfig(config.layout || {});\n    if (!compatible) {\n      const hostElement = part.parentNode;\n      this._makeVirtualizer(hostElement, config);\n    }\n    this._virtualizer.items = this._items;\n  }\n  _setFunctions(config) {\n    const {\n      renderItem,\n      keyFunction\n    } = config;\n    if (renderItem) {\n      this._renderItem = (item, idx) => renderItem(item, idx + this._first);\n    }\n    if (keyFunction) {\n      this._keyFunction = (item, idx) => keyFunction(item, idx + this._first);\n    }\n  }\n  _makeVirtualizer(hostElement, config) {\n    if (this._virtualizer) {\n      this._virtualizer.disconnected();\n    }\n    const {\n      layout,\n      scroller,\n      items\n    } = config;\n    this._virtualizer = new _Virtualizer_js__WEBPACK_IMPORTED_MODULE_4__.Virtualizer({\n      hostElement,\n      layout,\n      scroller\n    });\n    this._virtualizer.items = items;\n    this._virtualizer.connected();\n  }\n  _initialize(part, config) {\n    const hostElement = part.parentNode;\n    if (hostElement && hostElement.nodeType === 1) {\n      hostElement.addEventListener('rangeChanged', e => {\n        e.stopPropagation();\n        this._first = e.first;\n        this._last = e.last;\n        this.setValue(this.render());\n      });\n      this._makeVirtualizer(hostElement, config);\n    }\n  }\n  disconnected() {\n    var _a;\n    (_a = this._virtualizer) === null || _a === void 0 ? void 0 : _a.disconnected();\n  }\n  reconnected() {\n    var _a;\n    (_a = this._virtualizer) === null || _a === void 0 ? void 0 : _a.connected();\n  }\n}\nconst virtualize = (0,lit_directive_js__WEBPACK_IMPORTED_MODULE_1__.directive)(VirtualizeDirective);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGxpdC1sYWJzL3ZpcnR1YWxpemVyL3ZpcnR1YWxpemUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBOEJBO0FBQ0E7QUFLQTtBQVVBO0FBQ0E7QUFWQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFJQTtBQUNBOztBQUlBO0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUlBO0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBRUE7QUFJQTtBQUNBOztBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTs7QUFDQTtBQUNBO0FBRUE7O0FBQ0E7QUFDQTs7QUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvc3JjL3ZpcnR1YWxpemUudHM/ZjY1MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDXG4gKiBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQlNELTMtQ2xhdXNlXG4gKi9cblxuaW1wb3J0IHtUZW1wbGF0ZVJlc3VsdCwgQ2hpbGRQYXJ0LCBodG1sfSBmcm9tICdsaXQnO1xuaW1wb3J0IHtkaXJlY3RpdmUsIERpcmVjdGl2ZVJlc3VsdCwgUGFydEluZm8sIFBhcnRUeXBlfSBmcm9tICdsaXQvZGlyZWN0aXZlLmpzJztcbmltcG9ydCB7QXN5bmNEaXJlY3RpdmV9IGZyb20gJ2xpdC9hc3luYy1kaXJlY3RpdmUuanMnO1xuaW1wb3J0IHtyZXBlYXQsIEtleUZufSBmcm9tICdsaXQvZGlyZWN0aXZlcy9yZXBlYXQuanMnO1xuaW1wb3J0IHtWaXJ0dWFsaXplcn0gZnJvbSAnLi9WaXJ0dWFsaXplci5qcyc7XG5pbXBvcnQge1JhbmdlQ2hhbmdlZEV2ZW50fSBmcm9tICcuL2V2ZW50cy5qcyc7XG5pbXBvcnQge0xheW91dENvbmZpZ1ZhbHVlfSBmcm9tICcuL2xheW91dHMvc2hhcmVkL0xheW91dC5qcyc7XG5cbmV4cG9ydCB7dmlydHVhbGl6ZXJSZWYsIFZpcnR1YWxpemVySG9zdEVsZW1lbnR9IGZyb20gJy4vVmlydHVhbGl6ZXIuanMnO1xuXG4vKipcbiAqIENvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgdGhlIHZpcnR1YWxpemUgZGlyZWN0aXZlLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFZpcnR1YWxpemVEaXJlY3RpdmVDb25maWc8VD4ge1xuICAvKipcbiAgICogQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYSBsaXQtaHRtbCBUZW1wbGF0ZVJlc3VsdC4gSXQgd2lsbCBiZSB1c2VkXG4gICAqIHRvIGdlbmVyYXRlIHRoZSBET00gZm9yIGVhY2ggaXRlbSBpbiB0aGUgdmlydHVhbCBsaXN0LlxuICAgKi9cbiAgcmVuZGVySXRlbT86IFJlbmRlckl0ZW1GdW5jdGlvbjxUPjtcblxuICBrZXlGdW5jdGlvbj86IEtleUZuPFQ+O1xuXG4gIHNjcm9sbGVyPzogYm9vbGVhbjtcblxuICAvLyBUT0RPIChncmF5bm9ydG9uKTogRG9jdW1lbnQuLi5cbiAgbGF5b3V0PzogTGF5b3V0Q29uZmlnVmFsdWU7XG5cbiAgLyoqXG4gICAqIFRoZSBsaXN0IG9mIGl0ZW1zIHRvIGRpc3BsYXkgdmlhIHRoZSByZW5kZXJJdGVtIGZ1bmN0aW9uLlxuICAgKi9cbiAgaXRlbXM/OiBBcnJheTxUPjtcbn1cblxuZXhwb3J0IHR5cGUgUmVuZGVySXRlbUZ1bmN0aW9uPFQgPSB1bmtub3duPiA9IChcbiAgaXRlbTogVCxcbiAgaW5kZXg6IG51bWJlclxuKSA9PiBUZW1wbGF0ZVJlc3VsdDtcblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRLZXlGdW5jdGlvbjogS2V5Rm48dW5rbm93bj4gPSAoaXRlbTogdW5rbm93bikgPT4gaXRlbTtcbmV4cG9ydCBjb25zdCBkZWZhdWx0UmVuZGVySXRlbTogUmVuZGVySXRlbUZ1bmN0aW9uPHVua25vd24+ID0gKFxuICBpdGVtOiB1bmtub3duLFxuICBpZHg6IG51bWJlclxuKSA9PiBodG1sYCR7aWR4fTogJHtKU09OLnN0cmluZ2lmeShpdGVtLCBudWxsLCAyKX1gO1xuXG5jbGFzcyBWaXJ0dWFsaXplRGlyZWN0aXZlPFQgPSB1bmtub3duPiBleHRlbmRzIEFzeW5jRGlyZWN0aXZlIHtcbiAgX3ZpcnR1YWxpemVyOiBWaXJ0dWFsaXplciB8IG51bGwgPSBudWxsO1xuICBfZmlyc3QgPSAwO1xuICBfbGFzdCA9IC0xO1xuICBfcmVuZGVySXRlbTogUmVuZGVySXRlbUZ1bmN0aW9uPFQ+ID0gKGl0ZW06IFQsIGlkeDogbnVtYmVyKSA9PlxuICAgIGRlZmF1bHRSZW5kZXJJdGVtKGl0ZW0sIGlkeCArIHRoaXMuX2ZpcnN0KTtcbiAgX2tleUZ1bmN0aW9uOiBLZXlGbjxUPiA9IChpdGVtOiBULCBpZHg6IG51bWJlcikgPT5cbiAgICBkZWZhdWx0S2V5RnVuY3Rpb24oaXRlbSwgaWR4ICsgdGhpcy5fZmlyc3QpO1xuICBfaXRlbXM6IEFycmF5PFQ+ID0gW107XG5cbiAgY29uc3RydWN0b3IocGFydDogUGFydEluZm8pIHtcbiAgICBzdXBlcihwYXJ0KTtcbiAgICBpZiAocGFydC50eXBlICE9PSBQYXJ0VHlwZS5DSElMRCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnVGhlIHZpcnR1YWxpemUgZGlyZWN0aXZlIGNhbiBvbmx5IGJlIHVzZWQgaW4gY2hpbGQgZXhwcmVzc2lvbnMnXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIHJlbmRlcihjb25maWc/OiBWaXJ0dWFsaXplRGlyZWN0aXZlQ29uZmlnPFQ+KSB7XG4gICAgaWYgKGNvbmZpZykge1xuICAgICAgdGhpcy5fc2V0RnVuY3Rpb25zKGNvbmZpZyk7XG4gICAgfVxuICAgIGNvbnN0IGl0ZW1zVG9SZW5kZXI6IEFycmF5PFQ+ID0gW107XG4gICAgLy8gVE9ETyAoZ3JheW5vcnRvbik6IElzIHRoaXMgdGhlIGJlc3QgLyBvbmx5IHBsYWNlIHRvIGVuc3VyZVxuICAgIC8vIHRoYXQgX2xhc3QgaXNuJ3Qgb3V0c2lkZSB0aGUgY3VycmVudCBib3VuZHMgb2YgdGhlIGl0ZW1zIGFycmF5P1xuICAgIC8vIE5vdCBzdXJlIHdlIHNob3VsZCBldmVyIGFycml2ZSBoZXJlIHdpdGggaXQgb3V0IG9mIGJvdW5kcy5cbiAgICAvLyBSZXBybyBjYXNlIGZvciBvcmlnaW5hbCBpc3N1ZTogaHR0cHM6Ly90aW55dXJsLmNvbS95ZXM4YjJlNlxuICAgIGNvbnN0IGxhc3RJdGVtID0gTWF0aC5taW4odGhpcy5faXRlbXMubGVuZ3RoLCB0aGlzLl9sYXN0ICsgMSk7XG5cbiAgICBpZiAodGhpcy5fZmlyc3QgPj0gMCAmJiB0aGlzLl9sYXN0ID49IHRoaXMuX2ZpcnN0KSB7XG4gICAgICBmb3IgKGxldCBpID0gdGhpcy5fZmlyc3Q7IGkgPCBsYXN0SXRlbTsgaSsrKSB7XG4gICAgICAgIGl0ZW1zVG9SZW5kZXIucHVzaCh0aGlzLl9pdGVtc1tpXSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXBlYXQoaXRlbXNUb1JlbmRlciwgdGhpcy5fa2V5RnVuY3Rpb24sIHRoaXMuX3JlbmRlckl0ZW0pO1xuICB9XG5cbiAgdXBkYXRlKHBhcnQ6IENoaWxkUGFydCwgW2NvbmZpZ106IFtWaXJ0dWFsaXplRGlyZWN0aXZlQ29uZmlnPFQ+XSkge1xuICAgIHRoaXMuX3NldEZ1bmN0aW9ucyhjb25maWcpO1xuICAgIHRoaXMuX2l0ZW1zID0gY29uZmlnLml0ZW1zIHx8IFtdO1xuICAgIGlmICh0aGlzLl92aXJ0dWFsaXplcikge1xuICAgICAgdGhpcy5fdXBkYXRlVmlydHVhbGl6ZXJDb25maWcocGFydCwgY29uZmlnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5faW5pdGlhbGl6ZShwYXJ0LCBjb25maWcpO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy5yZW5kZXIoKTtcbiAgfVxuXG4gIHByaXZhdGUgX3VwZGF0ZVZpcnR1YWxpemVyQ29uZmlnKFxuICAgIHBhcnQ6IENoaWxkUGFydCxcbiAgICBjb25maWc6IFZpcnR1YWxpemVEaXJlY3RpdmVDb25maWc8VD5cbiAgKSB7XG4gICAgY29uc3QgY29tcGF0aWJsZSA9IHRoaXMuX3ZpcnR1YWxpemVyIS51cGRhdGVMYXlvdXRDb25maWcoXG4gICAgICBjb25maWcubGF5b3V0IHx8IHt9XG4gICAgKTtcbiAgICBpZiAoIWNvbXBhdGlibGUpIHtcbiAgICAgIGNvbnN0IGhvc3RFbGVtZW50ID0gcGFydC5wYXJlbnROb2RlIGFzIEhUTUxFbGVtZW50O1xuICAgICAgdGhpcy5fbWFrZVZpcnR1YWxpemVyKGhvc3RFbGVtZW50LCBjb25maWcpO1xuICAgIH1cbiAgICB0aGlzLl92aXJ0dWFsaXplciEuaXRlbXMgPSB0aGlzLl9pdGVtcztcbiAgfVxuXG4gIHByaXZhdGUgX3NldEZ1bmN0aW9ucyhjb25maWc6IFZpcnR1YWxpemVEaXJlY3RpdmVDb25maWc8VD4pIHtcbiAgICBjb25zdCB7cmVuZGVySXRlbSwga2V5RnVuY3Rpb259ID0gY29uZmlnO1xuICAgIGlmIChyZW5kZXJJdGVtKSB7XG4gICAgICB0aGlzLl9yZW5kZXJJdGVtID0gKGl0ZW0sIGlkeCkgPT4gcmVuZGVySXRlbShpdGVtLCBpZHggKyB0aGlzLl9maXJzdCk7XG4gICAgfVxuICAgIGlmIChrZXlGdW5jdGlvbikge1xuICAgICAgdGhpcy5fa2V5RnVuY3Rpb24gPSAoaXRlbSwgaWR4KSA9PiBrZXlGdW5jdGlvbihpdGVtLCBpZHggKyB0aGlzLl9maXJzdCk7XG4gICAgfVxuICB9XG5cbiAgcHJpdmF0ZSBfbWFrZVZpcnR1YWxpemVyKFxuICAgIGhvc3RFbGVtZW50OiBIVE1MRWxlbWVudCxcbiAgICBjb25maWc6IFZpcnR1YWxpemVEaXJlY3RpdmVDb25maWc8VD5cbiAgKSB7XG4gICAgaWYgKHRoaXMuX3ZpcnR1YWxpemVyKSB7XG4gICAgICB0aGlzLl92aXJ0dWFsaXplci5kaXNjb25uZWN0ZWQoKTtcbiAgICB9XG4gICAgY29uc3Qge2xheW91dCwgc2Nyb2xsZXIsIGl0ZW1zfSA9IGNvbmZpZztcbiAgICB0aGlzLl92aXJ0dWFsaXplciA9IG5ldyBWaXJ0dWFsaXplcih7aG9zdEVsZW1lbnQsIGxheW91dCwgc2Nyb2xsZXJ9KTtcbiAgICB0aGlzLl92aXJ0dWFsaXplci5pdGVtcyA9IGl0ZW1zO1xuICAgIHRoaXMuX3ZpcnR1YWxpemVyIS5jb25uZWN0ZWQoKTtcbiAgfVxuXG4gIHByaXZhdGUgX2luaXRpYWxpemUocGFydDogQ2hpbGRQYXJ0LCBjb25maWc6IFZpcnR1YWxpemVEaXJlY3RpdmVDb25maWc8VD4pIHtcbiAgICBjb25zdCBob3N0RWxlbWVudCA9IHBhcnQucGFyZW50Tm9kZSBhcyBIVE1MRWxlbWVudDtcbiAgICBpZiAoaG9zdEVsZW1lbnQgJiYgaG9zdEVsZW1lbnQubm9kZVR5cGUgPT09IDEpIHtcbiAgICAgIGhvc3RFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3JhbmdlQ2hhbmdlZCcsIChlOiBSYW5nZUNoYW5nZWRFdmVudCkgPT4ge1xuICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICB0aGlzLl9maXJzdCA9IGUuZmlyc3Q7XG4gICAgICAgIHRoaXMuX2xhc3QgPSBlLmxhc3Q7XG4gICAgICAgIHRoaXMuc2V0VmFsdWUodGhpcy5yZW5kZXIoKSk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuX21ha2VWaXJ0dWFsaXplcihob3N0RWxlbWVudCwgY29uZmlnKTtcbiAgICB9XG4gIH1cblxuICBkaXNjb25uZWN0ZWQoKSB7XG4gICAgdGhpcy5fdmlydHVhbGl6ZXI/LmRpc2Nvbm5lY3RlZCgpO1xuICB9XG5cbiAgcmVjb25uZWN0ZWQoKSB7XG4gICAgdGhpcy5fdmlydHVhbGl6ZXI/LmNvbm5lY3RlZCgpO1xuICB9XG59XG5cbmV4cG9ydCBjb25zdCB2aXJ0dWFsaXplID0gZGlyZWN0aXZlKFZpcnR1YWxpemVEaXJlY3RpdmUpIGFzIDxUPihcbiAgY29uZmlnPzogVmlydHVhbGl6ZURpcmVjdGl2ZUNvbmZpZzxUPlxuKSA9PiBEaXJlY3RpdmVSZXN1bHQ8dHlwZW9mIFZpcnR1YWxpemVEaXJlY3RpdmU+O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@lit-labs/virtualizer/virtualize.js\n");

/***/ }),

/***/ "./node_modules/lit/decorators/property.js":
/*!*************************************************!*\
  !*** ./node_modules/lit/decorators/property.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "property": () => (/* reexport safe */ _lit_reactive_element_decorators_property_js__WEBPACK_IMPORTED_MODULE_0__.property)
/* harmony export */ });
/* harmony import */ var _lit_reactive_element_decorators_property_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @lit/reactive-element/decorators/property.js */ "./node_modules/@lit/reactive-element/development/decorators/property.js");


/***/ })

}]);