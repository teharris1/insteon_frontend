"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkinsteon_panel_frontend"] = self["webpackChunkinsteon_panel_frontend"] || []).push([["vendors-node_modules_material_top-app-bar_dist_mdc_top-app-bar_min_css-node_modules_lit-labs_-32df50"],{

/***/ "./node_modules/@material/top-app-bar/dist/mdc.top-app-bar.min.css":
/*!*************************************************************************!*\
  !*** ./node_modules/@material/top-app-bar/dist/mdc.top-app-bar.min.css ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = "/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/material-components/material-components-web/blob/master/LICENSE\n */\n.mdc-top-app-bar{background-color:#6200ee;background-color:var(--mdc-theme-primary, #6200ee);color:white;display:flex;position:fixed;flex-direction:column;justify-content:space-between;box-sizing:border-box;width:100%;z-index:4}.mdc-top-app-bar .mdc-top-app-bar__action-item,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon{color:#fff;color:var(--mdc-theme-on-primary, #fff)}.mdc-top-app-bar .mdc-top-app-bar__action-item::before,.mdc-top-app-bar .mdc-top-app-bar__action-item::after,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon::before,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon::after{background-color:#fff;background-color:var(--mdc-ripple-color, var(--mdc-theme-on-primary, #fff))}.mdc-top-app-bar .mdc-top-app-bar__action-item:hover::before,.mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-surface--hover::before,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon:hover::before,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-surface--hover::before{opacity:0.08;opacity:var(--mdc-ripple-hover-opacity, 0.08)}.mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded--background-focused::before,.mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):focus::before,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded--background-focused::before,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):focus::before{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-focus-opacity, 0.24)}.mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded)::after,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded)::after{transition:opacity 150ms linear}.mdc-top-app-bar .mdc-top-app-bar__action-item:not(.mdc-ripple-upgraded):active::after,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon:not(.mdc-ripple-upgraded):active::after{transition-duration:75ms;opacity:0.24;opacity:var(--mdc-ripple-press-opacity, 0.24)}.mdc-top-app-bar .mdc-top-app-bar__action-item.mdc-ripple-upgraded,.mdc-top-app-bar .mdc-top-app-bar__navigation-icon.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.24)}.mdc-top-app-bar__row{display:flex;position:relative;box-sizing:border-box;width:100%;height:64px}.mdc-top-app-bar__section{display:inline-flex;flex:1 1 auto;align-items:center;min-width:0;padding:8px 12px;z-index:1}.mdc-top-app-bar__section--align-start{justify-content:flex-start;order:-1}.mdc-top-app-bar__section--align-end{justify-content:flex-end;order:1}.mdc-top-app-bar__title{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-headline6-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:1.25rem;font-size:var(--mdc-typography-headline6-font-size, 1.25rem);line-height:2rem;line-height:var(--mdc-typography-headline6-line-height, 2rem);font-weight:500;font-weight:var(--mdc-typography-headline6-font-weight, 500);letter-spacing:0.0125em;letter-spacing:var(--mdc-typography-headline6-letter-spacing, 0.0125em);text-decoration:inherit;-webkit-text-decoration:var(--mdc-typography-headline6-text-decoration, inherit);text-decoration:var(--mdc-typography-headline6-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-headline6-text-transform, inherit);padding-left:20px;padding-right:0;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;z-index:1}[dir=rtl] .mdc-top-app-bar__title,.mdc-top-app-bar__title[dir=rtl]{padding-left:0;padding-right:20px}.mdc-top-app-bar--short-collapsed{border-top-left-radius:0;border-top-right-radius:0;border-bottom-right-radius:24px;border-bottom-left-radius:0}[dir=rtl] .mdc-top-app-bar--short-collapsed,.mdc-top-app-bar--short-collapsed[dir=rtl]{border-top-left-radius:0;border-top-right-radius:0;border-bottom-right-radius:0;border-bottom-left-radius:24px}.mdc-top-app-bar--short{top:0;right:auto;left:0;width:100%;transition:width 250ms cubic-bezier(0.4, 0, 0.2, 1)}[dir=rtl] .mdc-top-app-bar--short,.mdc-top-app-bar--short[dir=rtl]{right:0;left:auto}.mdc-top-app-bar--short .mdc-top-app-bar__row{height:56px}.mdc-top-app-bar--short .mdc-top-app-bar__section{padding:4px}.mdc-top-app-bar--short .mdc-top-app-bar__title{transition:opacity 200ms cubic-bezier(0.4, 0, 0.2, 1);opacity:1}.mdc-top-app-bar--short-collapsed{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0,0,0,.12);width:56px;transition:width 300ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-top-app-bar--short-collapsed .mdc-top-app-bar__title{display:none}.mdc-top-app-bar--short-collapsed .mdc-top-app-bar__action-item{transition:padding 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item{width:112px}.mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item .mdc-top-app-bar__section--align-end{padding-left:0;padding-right:12px}[dir=rtl] .mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item .mdc-top-app-bar__section--align-end,.mdc-top-app-bar--short-collapsed.mdc-top-app-bar--short-has-action-item .mdc-top-app-bar__section--align-end[dir=rtl]{padding-left:12px;padding-right:0}.mdc-top-app-bar--dense .mdc-top-app-bar__row{height:48px}.mdc-top-app-bar--dense .mdc-top-app-bar__section{padding:0 4px}.mdc-top-app-bar--dense .mdc-top-app-bar__title{padding-left:12px;padding-right:0}[dir=rtl] .mdc-top-app-bar--dense .mdc-top-app-bar__title,.mdc-top-app-bar--dense .mdc-top-app-bar__title[dir=rtl]{padding-left:0;padding-right:12px}.mdc-top-app-bar--prominent .mdc-top-app-bar__row{height:128px}.mdc-top-app-bar--prominent .mdc-top-app-bar__title{align-self:flex-end;padding-bottom:2px}.mdc-top-app-bar--prominent .mdc-top-app-bar__action-item,.mdc-top-app-bar--prominent .mdc-top-app-bar__navigation-icon{align-self:flex-start}.mdc-top-app-bar--fixed{transition:box-shadow 200ms linear}.mdc-top-app-bar--fixed-scrolled{box-shadow:0px 2px 4px -1px rgba(0, 0, 0, 0.2),0px 4px 5px 0px rgba(0, 0, 0, 0.14),0px 1px 10px 0px rgba(0,0,0,.12);transition:box-shadow 200ms linear}.mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__row{height:96px}.mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__section{padding:0 12px}.mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__title{padding-left:20px;padding-right:0;padding-bottom:9px}[dir=rtl] .mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__title,.mdc-top-app-bar--dense.mdc-top-app-bar--prominent .mdc-top-app-bar__title[dir=rtl]{padding-left:0;padding-right:20px}.mdc-top-app-bar--fixed-adjust{padding-top:64px}.mdc-top-app-bar--dense-fixed-adjust{padding-top:48px}.mdc-top-app-bar--short-fixed-adjust{padding-top:56px}.mdc-top-app-bar--prominent-fixed-adjust{padding-top:128px}.mdc-top-app-bar--dense-prominent-fixed-adjust{padding-top:96px}@media(max-width: 599px){.mdc-top-app-bar__row{height:56px}.mdc-top-app-bar__section{padding:4px}.mdc-top-app-bar--short{transition:width 200ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-top-app-bar--short-collapsed{transition:width 250ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-top-app-bar--short-collapsed .mdc-top-app-bar__section--align-end{padding-left:0;padding-right:12px}[dir=rtl] .mdc-top-app-bar--short-collapsed .mdc-top-app-bar__section--align-end,.mdc-top-app-bar--short-collapsed .mdc-top-app-bar__section--align-end[dir=rtl]{padding-left:12px;padding-right:0}.mdc-top-app-bar--prominent .mdc-top-app-bar__title{padding-bottom:6px}.mdc-top-app-bar--fixed-adjust{padding-top:56px}}\n\n/*# sourceMappingURL=mdc.top-app-bar.min.css.map*/";

/***/ }),

/***/ "./node_modules/@lit-labs/virtualizer/layouts/grid.js":
/*!************************************************************!*\
  !*** ./node_modules/@lit-labs/virtualizer/layouts/grid.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GridLayout\": () => (/* binding */ GridLayout),\n/* harmony export */   \"grid\": () => (/* binding */ grid)\n/* harmony export */ });\n/* harmony import */ var _shared_SizeGapPaddingBaseLayout_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared/SizeGapPaddingBaseLayout.js */ \"./node_modules/@lit-labs/virtualizer/layouts/shared/SizeGapPaddingBaseLayout.js\");\n/* harmony import */ var _shared_BaseLayout_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shared/BaseLayout.js */ \"./node_modules/@lit-labs/virtualizer/layouts/shared/BaseLayout.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n\nconst grid = config => Object.assign({\n  type: GridLayout\n}, config); ///\n\nclass GridLayout extends _shared_SizeGapPaddingBaseLayout_js__WEBPACK_IMPORTED_MODULE_0__.SizeGapPaddingBaseLayout {\n  constructor() {\n    super(...arguments);\n    /**\n     * Initial estimate of item size\n     */\n    // protected _rolumns: number = 1;\n    // protected _size1: number | null = null;\n    // protected _size2: number | null = null;\n\n    this._metrics = null;\n    this.flex = null;\n    this.justify = null;\n  }\n\n  get _defaultConfig() {\n    return Object.assign({}, super._defaultConfig, {\n      flex: false,\n      justify: 'start'\n    });\n  }\n\n  set gap(spec) {\n    this._setGap(spec);\n  }\n\n  _updateLayout() {\n    const justify = this.justify;\n    const [padding1Start, padding1End] = this._padding1;\n    const [padding2Start, padding2End] = this._padding2; // TODO (graynorton): Omit these checks in production mode\n\n    ['_gap1', '_gap2'].forEach(gap => {\n      const gapValue = this[gap];\n\n      if (gapValue === Infinity && !['space-between', 'space-around', 'space-evenly'].includes(justify)) {\n        throw new Error(`grid layout: gap can only be set to 'auto' when justify is set to 'space-between', 'space-around' or 'space-evenly'`);\n      }\n\n      if (gapValue === Infinity && gap === '_gap2') {\n        throw new Error(`grid layout: ${(0,_shared_SizeGapPaddingBaseLayout_js__WEBPACK_IMPORTED_MODULE_0__.gap2)(this.direction)}-gap cannot be set to 'auto' when direction is set to ${this.direction}`);\n      }\n    });\n    const metrics = {\n      rolumns: -1,\n      itemSize1: -1,\n      itemSize2: -1,\n      // Infinity represents 'auto', so we set an invalid placeholder until we can calculate\n      gap1: this._gap1 === Infinity ? -1 : this._gap1,\n      gap2: this._gap2,\n      // Infinity represents 'match-gap', so we set padding to match gap\n      padding1: {\n        start: padding1Start === Infinity ? this._gap1 : padding1Start,\n        end: padding1End === Infinity ? this._gap1 : padding1End\n      },\n      padding2: {\n        start: padding2Start === Infinity ? this._gap2 : padding2Start,\n        end: padding2End === Infinity ? this._gap2 : padding2End\n      },\n      positions: []\n    };\n    let availableSpace = this._viewDim2; // 1. Adjust available space to account for gaps and padding\n\n    if (this.flex || ['start', 'center', 'end'].includes(justify)) {\n      // If we're flexing item size or packing items around start / center / end,\n      // we'll use the specified padding, so we subtract padding from available space\n      availableSpace -= metrics.padding2.start;\n      availableSpace -= metrics.padding2.end;\n    } else if (justify === 'space-between') {\n      // 'space-between' packs items right up to the edges, so we have more space to work with\n      availableSpace += metrics.gap2;\n    } else if (justify === 'space-evenly') {\n      // 'space-evenly' requires a full share of space on the outside edges, so we have less space to work with\n      availableSpace -= metrics.gap2;\n    } // 2. Calculate roughly how many \"rolumns\" fit in the available space\n\n\n    const spacePerRolumn = this._idealSize2 + metrics.gap2;\n    const fractionalRolumns = availableSpace / spacePerRolumn; // 3. Calculate item size (if we're flexing) and finalize the number of rolumns accordingly\n\n    if (this.flex) {\n      // Round fractionalRolumns up or down so we match ideal size as closely as we can\n      metrics.rolumns = Math.round(fractionalRolumns); // Calculate the flexed item size\n\n      metrics.itemSize2 = Math.round((availableSpace - metrics.gap2 * (metrics.rolumns - 1)) / metrics.rolumns); // Calculate item size in the other dimension, preserving area (the default), aspect ratio or ideal size in that dimension as specified\n\n      let preserve = this.flex === true ? 'area' : this.flex.preserve;\n\n      switch (preserve) {\n        case 'aspect-ratio':\n          metrics.itemSize1 = Math.round(this._idealSize1 / this._idealSize2 * metrics.itemSize2);\n          break;\n\n        case (0,_shared_BaseLayout_js__WEBPACK_IMPORTED_MODULE_1__.dim1)(this.direction):\n          metrics.itemSize1 = Math.round(this._idealSize1);\n          break;\n\n        case 'area':\n        default:\n          metrics.itemSize1 = Math.round(this._idealSize1 * this._idealSize2 / metrics.itemSize2);\n      }\n    } else {\n      // We're not flexing, so use the specified sizes unmodified\n      metrics.itemSize1 = this._idealSize1;\n      metrics.itemSize2 = this._idealSize2; // And since we can't reduce item sizes to fit in another rolumn, we go with the lower number\n\n      metrics.rolumns = Math.floor(fractionalRolumns);\n    } // 4. Calculate the position for each item in a template rolumn\n\n\n    let pos, space;\n\n    if (this.flex || ['start', 'center', 'end'].includes(justify)) {\n      const spaceTaken = metrics.rolumns * metrics.itemSize2 + (metrics.rolumns - 1) * metrics.gap2;\n      pos = this.flex || justify === 'start' ? metrics.padding2.start : justify === 'end' ? this._viewDim2 - metrics.padding2.end - spaceTaken : Math.round(this._viewDim2 / 2 - spaceTaken / 2);\n      space = metrics.gap2;\n    } else {\n      const spaceToDivide = availableSpace - metrics.rolumns * metrics.itemSize2;\n\n      if (justify === 'space-between') {\n        space = Math.round(spaceToDivide / (metrics.rolumns - 1));\n        pos = 0;\n      } else if (justify === 'space-around') {\n        space = Math.round(spaceToDivide / metrics.rolumns);\n        pos = Math.round(space / 2);\n      } else {\n        // justify == 'space-evenly'\n        space = Math.round(spaceToDivide / (metrics.rolumns + 1));\n        pos = space;\n      } // If primary-axis gap was set to 'auto', provide the value now\n      // (and set 'match-gap' padding values transitively)\n\n\n      if (this._gap1 === Infinity) {\n        metrics.gap1 = space;\n\n        if (padding1Start === Infinity) {\n          metrics.padding1.start = pos;\n        }\n\n        if (padding1End === Infinity) {\n          metrics.padding1.end = pos;\n        }\n      }\n    }\n\n    for (let i = 0; i < metrics.rolumns; i++) {\n      metrics.positions.push(pos);\n      pos += metrics.itemSize2 + space;\n    }\n\n    this._metrics = metrics;\n  }\n  /**\n   * Returns the average size (precise or estimated) of an item in the scrolling direction,\n   * including any surrounding space.\n   */\n\n\n  get _delta() {\n    return this._metrics.itemSize1 + this._metrics.gap1;\n  }\n\n  _getItemSize(_idx) {\n    return {\n      [this._sizeDim]: this._metrics.itemSize1,\n      [this._secondarySizeDim]: this._metrics.itemSize2\n    };\n  }\n\n  _getActiveItems() {\n    // const [startPadding1, endPadding1] = this._padding1;\n    const {\n      padding1\n    } = this._metrics;\n    const min = Math.max(0, this._scrollPosition - this._overhang);\n    const max = Math.min(this._scrollSize, this._scrollPosition + this._viewDim1 + this._overhang);\n    const firstCow = Math.max(0, Math.floor((min - padding1.start) / this._delta));\n    const lastCow = Math.max(0, Math.ceil((max - padding1.start) / this._delta));\n    this._first = firstCow * this._metrics.rolumns;\n    this._last = Math.min(lastCow * this._metrics.rolumns - 1, this._totalItems - 1);\n    this._physicalMin = padding1.start + this._delta * firstCow;\n    this._physicalMax = padding1.start + this._delta * lastCow;\n  }\n\n  _getItemPosition(idx) {\n    const {\n      rolumns,\n      padding1,\n      positions,\n      itemSize1,\n      itemSize2\n    } = this._metrics;\n    return {\n      [this._positionDim]: padding1.start + Math.floor(idx / rolumns) * this._delta,\n      [this._secondaryPositionDim]: positions[idx % rolumns],\n      [(0,_shared_BaseLayout_js__WEBPACK_IMPORTED_MODULE_1__.dim1)(this.direction)]: itemSize1,\n      [(0,_shared_BaseLayout_js__WEBPACK_IMPORTED_MODULE_1__.dim2)(this.direction)]: itemSize2\n    };\n  }\n\n  _updateScrollSize() {\n    this._scrollSize = Math.max(1, Math.ceil(this._totalItems / this._metrics.rolumns) * this._delta + this._gap);\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@lit-labs/virtualizer/layouts/grid.js\n");

/***/ }),

/***/ "./node_modules/@lit-labs/virtualizer/layouts/shared/SizeGapPaddingBaseLayout.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@lit-labs/virtualizer/layouts/shared/SizeGapPaddingBaseLayout.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SizeGapPaddingBaseLayout\": () => (/* binding */ SizeGapPaddingBaseLayout),\n/* harmony export */   \"gap1\": () => (/* binding */ gap1),\n/* harmony export */   \"gap2\": () => (/* binding */ gap2),\n/* harmony export */   \"padding1\": () => (/* binding */ padding1),\n/* harmony export */   \"padding2\": () => (/* binding */ padding2)\n/* harmony export */ });\n/* harmony import */ var _BaseLayout_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseLayout.js */ \"./node_modules/@lit-labs/virtualizer/layouts/shared/BaseLayout.js\");\n// import { dimension } from './Layout.js';\n // function numberToPixelSize(n: number): PixelSize {\n//     return n === 0 ? '0' : `${n}px`;\n// }\n\nfunction paddingValueToNumber(v) {\n  if (v === 'match-gap') {\n    return Infinity;\n  }\n\n  return parseInt(v);\n}\n\nfunction gapValueToNumber(v) {\n  if (v === 'auto') {\n    return Infinity;\n  }\n\n  return parseInt(v);\n}\n\nfunction gap1(direction) {\n  return direction === 'horizontal' ? 'column' : 'row';\n}\nfunction gap2(direction) {\n  return direction === 'horizontal' ? 'row' : 'column';\n}\nfunction padding1(direction) {\n  return direction === 'horizontal' ? ['left', 'right'] : ['top', 'bottom'];\n}\nfunction padding2(direction) {\n  return direction === 'horizontal' ? ['top', 'bottom'] : ['left', 'right'];\n}\nclass SizeGapPaddingBaseLayout extends _BaseLayout_js__WEBPACK_IMPORTED_MODULE_0__.BaseLayout {\n  constructor() {\n    super(...arguments);\n    this._itemSize = {};\n    this._gaps = {};\n    this._padding = {};\n  }\n\n  get _defaultConfig() {\n    return Object.assign({}, super._defaultConfig, {\n      itemSize: {\n        width: '300px',\n        height: '300px'\n      },\n      gap: '8px',\n      padding: 'match-gap'\n    });\n  } // Temp\n\n\n  get _gap() {\n    return this._gaps.row;\n  } // Temp\n\n\n  get _idealSize() {\n    return this._itemSize[(0,_BaseLayout_js__WEBPACK_IMPORTED_MODULE_0__.dim1)(this.direction)];\n  }\n\n  get _idealSize1() {\n    return this._itemSize[(0,_BaseLayout_js__WEBPACK_IMPORTED_MODULE_0__.dim1)(this.direction)];\n  }\n\n  get _idealSize2() {\n    return this._itemSize[(0,_BaseLayout_js__WEBPACK_IMPORTED_MODULE_0__.dim2)(this.direction)];\n  }\n\n  get _gap1() {\n    return this._gaps[gap1(this.direction)];\n  }\n\n  get _gap2() {\n    return this._gaps[gap2(this.direction)];\n  }\n\n  get _padding1() {\n    const padding = this._padding;\n    const [start, end] = padding1(this.direction);\n    return [padding[start], padding[end]];\n  }\n\n  get _padding2() {\n    const padding = this._padding;\n    const [start, end] = padding2(this.direction);\n    return [padding[start], padding[end]];\n  }\n\n  set itemSize(dims) {\n    const size = this._itemSize;\n    const width = parseInt(dims.width);\n    const height = parseInt(dims.height);\n\n    if (width !== size.width) {\n      size.width = width;\n\n      this._triggerReflow();\n    }\n\n    if (height !== size.height) {\n      size.height = height;\n\n      this._triggerReflow();\n    }\n  }\n  /**\n   * Amount of space in between items.\n   */\n  // get gap(): GapSpec {\n  //     const gaps = this._gaps as Gaps;\n  //     return (gaps.row === gaps.column\n  //         ? numberToPixelSize(gaps.row)\n  //         : `${numberToPixelSize(gaps.row)} ${numberToPixelSize(gaps.column)}`\n  //     ) as GapSpec;\n  // }\n  // set gap(spec: GapSpec) {\n  //     this._setGap(spec);\n  // }\n\n\n  _setGap(spec) {\n    const values = spec.split(' ').map(v => gapValueToNumber(v));\n    const gaps = this._gaps;\n\n    if (values[0] !== gaps.row) {\n      gaps.row = values[0];\n\n      this._triggerReflow();\n    }\n\n    if (values[1] === undefined) {\n      if (values[0] !== gaps.column) {\n        gaps.column = values[0];\n\n        this._triggerReflow();\n      }\n    } else {\n      if (values[1] !== gaps.column) {\n        gaps.column = values[1];\n\n        this._triggerReflow();\n      }\n    }\n  }\n\n  set padding(spec) {\n    const padding = this._padding;\n    const values = spec.split(' ').map(v => paddingValueToNumber(v));\n\n    if (values.length === 1) {\n      padding.top = padding.right = padding.bottom = padding.left = values[0];\n    } else if (values.length === 2) {\n      padding.top = padding.bottom = values[0];\n      padding.right = padding.left = values[1];\n    } else if (values.length === 3) {\n      padding.top = values[0];\n      padding.right = padding.left = values[1];\n      padding.bottom = values[2];\n    } else if (values.length === 4) {\n      ['top', 'right', 'bottom', 'left'].forEach((side, idx) => padding[side] = values[idx]);\n    }\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@lit-labs/virtualizer/layouts/shared/SizeGapPaddingBaseLayout.js\n");

/***/ })

}]);