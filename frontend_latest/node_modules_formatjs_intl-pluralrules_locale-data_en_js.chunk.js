/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkinsteon_panel_frontend"] = self["webpackChunkinsteon_panel_frontend"] || []).push([["node_modules_formatjs_intl-pluralrules_locale-data_en_js"],{

/***/ "./node_modules/@formatjs/intl-pluralrules/locale-data/en.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@formatjs/intl-pluralrules/locale-data/en.js ***!
  \*******************************************************************/
/***/ (() => {

eval("/* @generated */\n// prettier-ignore\nif (Intl.PluralRules && typeof Intl.PluralRules.__addLocaleData === 'function') {\n  Intl.PluralRules.__addLocaleData({\n    \"data\": {\n      \"categories\": {\n        \"cardinal\": [\"one\", \"other\"],\n        \"ordinal\": [\"one\", \"two\", \"few\", \"other\"]\n      },\n      \"fn\": function (n, ord) {\n        var s = String(n).split('.'),\n            v0 = !s[1],\n            t0 = Number(s[0]) == n,\n            n10 = t0 && s[0].slice(-1),\n            n100 = t0 && s[0].slice(-2);\n        if (ord) return n10 == 1 && n100 != 11 ? 'one' : n10 == 2 && n100 != 12 ? 'two' : n10 == 3 && n100 != 13 ? 'few' : 'other';\n        return n == 1 && v0 ? 'one' : 'other';\n      }\n    },\n    \"locale\": \"en\"\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGZvcm1hdGpzL2ludGwtcGx1cmFscnVsZXMvbG9jYWxlLWRhdGEvZW4uanMuanMiLCJuYW1lcyI6WyJJbnRsIiwiUGx1cmFsUnVsZXMiLCJfX2FkZExvY2FsZURhdGEiLCJuIiwib3JkIiwicyIsIlN0cmluZyIsInNwbGl0IiwidjAiLCJ0MCIsIk51bWJlciIsIm4xMCIsInNsaWNlIiwibjEwMCJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AZm9ybWF0anMvaW50bC1wbHVyYWxydWxlcy9sb2NhbGUtZGF0YS9lbi5qcz8zZDc0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIEBnZW5lcmF0ZWQgKi9cbi8vIHByZXR0aWVyLWlnbm9yZVxuaWYgKEludGwuUGx1cmFsUnVsZXMgJiYgdHlwZW9mIEludGwuUGx1cmFsUnVsZXMuX19hZGRMb2NhbGVEYXRhID09PSAnZnVuY3Rpb24nKSB7XG4gIEludGwuUGx1cmFsUnVsZXMuX19hZGRMb2NhbGVEYXRhKHtcImRhdGFcIjp7XCJjYXRlZ29yaWVzXCI6e1wiY2FyZGluYWxcIjpbXCJvbmVcIixcIm90aGVyXCJdLFwib3JkaW5hbFwiOltcIm9uZVwiLFwidHdvXCIsXCJmZXdcIixcIm90aGVyXCJdfSxcImZuXCI6ZnVuY3Rpb24obiwgb3JkKSB7XG4gIHZhciBzID0gU3RyaW5nKG4pLnNwbGl0KCcuJyksIHYwID0gIXNbMV0sIHQwID0gTnVtYmVyKHNbMF0pID09IG4sIG4xMCA9IHQwICYmIHNbMF0uc2xpY2UoLTEpLCBuMTAwID0gdDAgJiYgc1swXS5zbGljZSgtMik7XG4gIGlmIChvcmQpIHJldHVybiBuMTAgPT0gMSAmJiBuMTAwICE9IDExID8gJ29uZSdcbiAgICA6IG4xMCA9PSAyICYmIG4xMDAgIT0gMTIgPyAndHdvJ1xuICAgIDogbjEwID09IDMgJiYgbjEwMCAhPSAxMyA/ICdmZXcnXG4gICAgOiAnb3RoZXInO1xuICByZXR1cm4gbiA9PSAxICYmIHYwID8gJ29uZScgOiAnb3RoZXInO1xufX0sXCJsb2NhbGVcIjpcImVuXCJ9KVxufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsSUFBSUEsSUFBSSxDQUFDQyxXQUFMLElBQW9CLE9BQU9ELElBQUksQ0FBQ0MsV0FBTCxDQUFpQkMsZUFBeEIsS0FBNEMsVUFBcEUsRUFBZ0Y7RUFDOUVGLElBQUksQ0FBQ0MsV0FBTCxDQUFpQkMsZUFBakIsQ0FBaUM7SUFBQyxRQUFPO01BQUMsY0FBYTtRQUFDLFlBQVcsQ0FBQyxLQUFELEVBQU8sT0FBUCxDQUFaO1FBQTRCLFdBQVUsQ0FBQyxLQUFELEVBQU8sS0FBUCxFQUFhLEtBQWIsRUFBbUIsT0FBbkI7TUFBdEMsQ0FBZDtNQUFpRixNQUFLLFVBQVNDLENBQVQsRUFBWUMsR0FBWixFQUFpQjtRQUNoSixJQUFJQyxDQUFDLEdBQUdDLE1BQU0sQ0FBQ0gsQ0FBRCxDQUFOLENBQVVJLEtBQVYsQ0FBZ0IsR0FBaEIsQ0FBUjtRQUFBLElBQThCQyxFQUFFLEdBQUcsQ0FBQ0gsQ0FBQyxDQUFDLENBQUQsQ0FBckM7UUFBQSxJQUEwQ0ksRUFBRSxHQUFHQyxNQUFNLENBQUNMLENBQUMsQ0FBQyxDQUFELENBQUYsQ0FBTixJQUFnQkYsQ0FBL0Q7UUFBQSxJQUFrRVEsR0FBRyxHQUFHRixFQUFFLElBQUlKLENBQUMsQ0FBQyxDQUFELENBQUQsQ0FBS08sS0FBTCxDQUFXLENBQUMsQ0FBWixDQUE5RTtRQUFBLElBQThGQyxJQUFJLEdBQUdKLEVBQUUsSUFBSUosQ0FBQyxDQUFDLENBQUQsQ0FBRCxDQUFLTyxLQUFMLENBQVcsQ0FBQyxDQUFaLENBQTNHO1FBQ0EsSUFBSVIsR0FBSixFQUFTLE9BQU9PLEdBQUcsSUFBSSxDQUFQLElBQVlFLElBQUksSUFBSSxFQUFwQixHQUF5QixLQUF6QixHQUNaRixHQUFHLElBQUksQ0FBUCxJQUFZRSxJQUFJLElBQUksRUFBcEIsR0FBeUIsS0FBekIsR0FDQUYsR0FBRyxJQUFJLENBQVAsSUFBWUUsSUFBSSxJQUFJLEVBQXBCLEdBQXlCLEtBQXpCLEdBQ0EsT0FISztRQUlULE9BQU9WLENBQUMsSUFBSSxDQUFMLElBQVVLLEVBQVYsR0FBZSxLQUFmLEdBQXVCLE9BQTlCO01BQ0Q7SUFQMEMsQ0FBUjtJQU9oQyxVQUFTO0VBUHVCLENBQWpDO0FBUUQifQ==\n//# sourceURL=webpack-internal:///./node_modules/@formatjs/intl-pluralrules/locale-data/en.js\n");

/***/ })

}]);