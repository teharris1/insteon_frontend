/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkinsteon_panel_frontend"] = self["webpackChunkinsteon_panel_frontend"] || []).push([["vendors-node_modules_material_mwc-dialog_mwc-dialog-base_js-node_modules_material_mwc-dialog_-be868e"],{

/***/ "./node_modules/@material/animation/animationframe.js":
/*!************************************************************!*\
  !*** ./node_modules/@material/animation/animationframe.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AnimationFrame\": () => (/* binding */ AnimationFrame)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * AnimationFrame provides a user-friendly abstraction around requesting\n * and canceling animation frames.\n */\nvar AnimationFrame = /** @class */function () {\n  function AnimationFrame() {\n    this.rafIDs = new Map();\n  }\n  /**\n   * Requests an animation frame. Cancels any existing frame with the same key.\n   * @param {string} key The key for this callback.\n   * @param {FrameRequestCallback} callback The callback to be executed.\n   */\n  AnimationFrame.prototype.request = function (key, callback) {\n    var _this = this;\n    this.cancel(key);\n    var frameID = requestAnimationFrame(function (frame) {\n      _this.rafIDs.delete(key);\n      // Callback must come *after* the key is deleted so that nested calls to\n      // request with the same key are not deleted.\n      callback(frame);\n    });\n    this.rafIDs.set(key, frameID);\n  };\n  /**\n   * Cancels a queued callback with the given key.\n   * @param {string} key The key for this callback.\n   */\n  AnimationFrame.prototype.cancel = function (key) {\n    var rafID = this.rafIDs.get(key);\n    if (rafID) {\n      cancelAnimationFrame(rafID);\n      this.rafIDs.delete(key);\n    }\n  };\n  /**\n   * Cancels all queued callback.\n   */\n  AnimationFrame.prototype.cancelAll = function () {\n    var _this = this;\n    // Need to use forEach because it's the only iteration method supported\n    // by IE11. Suppress the underscore because we don't need it.\n    // tslint:disable-next-line:enforce-name-casing\n    this.rafIDs.forEach(function (_, key) {\n      _this.cancel(key);\n    });\n  };\n  /**\n   * Returns the queue of unexecuted callback keys.\n   */\n  AnimationFrame.prototype.getQueue = function () {\n    var queue = [];\n    // Need to use forEach because it's the only iteration method supported\n    // by IE11. Suppress the underscore because we don't need it.\n    // tslint:disable-next-line:enforce-name-casing\n    this.rafIDs.forEach(function (_, key) {\n      queue.push(key);\n    });\n    return queue;\n  };\n  return AnimationFrame;\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2FuaW1hdGlvbi9hbmltYXRpb25mcmFtZS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1QkE7Ozs7QUFJQTtBQUFBO0FBQ0E7QUF1REE7QUFyREE7Ozs7O0FBS0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBOzs7QUFHQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC9hbmltYXRpb25mcmFtZS50cz9iYzc0Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@material/animation/animationframe.js\n");

/***/ }),

/***/ "./node_modules/@material/dialog/constants.js":
/*!****************************************************!*\
  !*** ./node_modules/@material/dialog/constants.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cssClasses\": () => (/* binding */ cssClasses),\n/* harmony export */   \"numbers\": () => (/* binding */ numbers),\n/* harmony export */   \"strings\": () => (/* binding */ strings)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nvar cssClasses = {\n  CLOSING: 'mdc-dialog--closing',\n  OPEN: 'mdc-dialog--open',\n  OPENING: 'mdc-dialog--opening',\n  SCROLLABLE: 'mdc-dialog--scrollable',\n  SCROLL_LOCK: 'mdc-dialog-scroll-lock',\n  STACKED: 'mdc-dialog--stacked',\n  FULLSCREEN: 'mdc-dialog--fullscreen',\n  // Class for showing a scroll divider on full-screen dialog header element.\n  // Should only be displayed on scrollable content, when the dialog content is\n  // scrolled \"underneath\" the header.\n  SCROLL_DIVIDER_HEADER: 'mdc-dialog-scroll-divider-header',\n  // Class for showing a scroll divider on a full-screen dialog footer element.\n  // Should only be displayed on scrolalble content, when the dialog content is\n  // obscured \"underneath\" the footer.\n  SCROLL_DIVIDER_FOOTER: 'mdc-dialog-scroll-divider-footer',\n  // The \"surface scrim\" is a scrim covering only the surface of a dialog. This\n  // is used in situations where a confirmation dialog is shown over an already\n  // opened full-screen dialog. On larger screen-sizes, the full-screen dialog\n  // is sized as a modal and so in these situations we display a \"surface scrim\"\n  // to prevent a \"double scrim\" (where the scrim from the secondary\n  // confirmation dialog would overlap with the scrim from the full-screen\n  // dialog).\n  SURFACE_SCRIM_SHOWN: 'mdc-dialog__surface-scrim--shown',\n  // \"Showing\" animating class for the surface-scrim.\n  SURFACE_SCRIM_SHOWING: 'mdc-dialog__surface-scrim--showing',\n  // \"Hiding\" animating class for the surface-scrim.\n  SURFACE_SCRIM_HIDING: 'mdc-dialog__surface-scrim--hiding',\n  // Class to hide a dialog's scrim (used in conjunction with a surface-scrim).\n  // Note that we only hide the original scrim rather than removing it entirely\n  // to prevent interactions with the content behind this scrim, and to capture\n  // scrim clicks.\n  SCRIM_HIDDEN: 'mdc-dialog__scrim--hidden'\n};\nvar strings = {\n  ACTION_ATTRIBUTE: 'data-mdc-dialog-action',\n  BUTTON_DEFAULT_ATTRIBUTE: 'data-mdc-dialog-button-default',\n  BUTTON_SELECTOR: '.mdc-dialog__button',\n  CLOSED_EVENT: 'MDCDialog:closed',\n  CLOSE_ACTION: 'close',\n  CLOSING_EVENT: 'MDCDialog:closing',\n  CONTAINER_SELECTOR: '.mdc-dialog__container',\n  CONTENT_SELECTOR: '.mdc-dialog__content',\n  DESTROY_ACTION: 'destroy',\n  INITIAL_FOCUS_ATTRIBUTE: 'data-mdc-dialog-initial-focus',\n  OPENED_EVENT: 'MDCDialog:opened',\n  OPENING_EVENT: 'MDCDialog:opening',\n  SCRIM_SELECTOR: '.mdc-dialog__scrim',\n  SUPPRESS_DEFAULT_PRESS_SELECTOR: ['textarea', '.mdc-menu .mdc-list-item', '.mdc-menu .mdc-deprecated-list-item'].join(', '),\n  SURFACE_SELECTOR: '.mdc-dialog__surface'\n};\nvar numbers = {\n  DIALOG_ANIMATION_CLOSE_TIME_MS: 75,\n  DIALOG_ANIMATION_OPEN_TIME_MS: 150\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2RpYWxvZy9jb25zdGFudHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUF1QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnN0ZW9uLXBhbmVsLWZyb250ZW5kL2NvbnN0YW50cy50cz85YmJmIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@material/dialog/constants.js\n");

/***/ }),

/***/ "./node_modules/@material/dialog/foundation.js":
/*!*****************************************************!*\
  !*** ./node_modules/@material/dialog/foundation.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MDCDialogFoundation\": () => (/* binding */ MDCDialogFoundation),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _material_animation_animationframe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material/animation/animationframe */ \"./node_modules/@material/animation/animationframe.js\");\n/* harmony import */ var _material_base_foundation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @material/base/foundation */ \"./node_modules/@material/base/foundation.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./node_modules/@material/dialog/constants.js\");\n/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n\n\n\nvar AnimationKeys;\n(function (AnimationKeys) {\n  AnimationKeys[\"POLL_SCROLL_POS\"] = \"poll_scroll_position\";\n  AnimationKeys[\"POLL_LAYOUT_CHANGE\"] = \"poll_layout_change\";\n})(AnimationKeys || (AnimationKeys = {}));\nvar MDCDialogFoundation = /** @class */function (_super) {\n  (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(MDCDialogFoundation, _super);\n  function MDCDialogFoundation(adapter) {\n    var _this = _super.call(this, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({}, MDCDialogFoundation.defaultAdapter), adapter)) || this;\n    _this.dialogOpen = false;\n    _this.isFullscreen = false;\n    _this.animationFrame = 0;\n    _this.animationTimer = 0;\n    _this.escapeKeyAction = _constants__WEBPACK_IMPORTED_MODULE_1__.strings.CLOSE_ACTION;\n    _this.scrimClickAction = _constants__WEBPACK_IMPORTED_MODULE_1__.strings.CLOSE_ACTION;\n    _this.autoStackButtons = true;\n    _this.areButtonsStacked = false;\n    _this.suppressDefaultPressSelector = _constants__WEBPACK_IMPORTED_MODULE_1__.strings.SUPPRESS_DEFAULT_PRESS_SELECTOR;\n    _this.animFrame = new _material_animation_animationframe__WEBPACK_IMPORTED_MODULE_2__.AnimationFrame();\n    _this.contentScrollHandler = function () {\n      _this.handleScrollEvent();\n    };\n    _this.windowResizeHandler = function () {\n      _this.layout();\n    };\n    _this.windowOrientationChangeHandler = function () {\n      _this.layout();\n    };\n    return _this;\n  }\n  Object.defineProperty(MDCDialogFoundation, \"cssClasses\", {\n    get: function () {\n      return _constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCDialogFoundation, \"strings\", {\n    get: function () {\n      return _constants__WEBPACK_IMPORTED_MODULE_1__.strings;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCDialogFoundation, \"numbers\", {\n    get: function () {\n      return _constants__WEBPACK_IMPORTED_MODULE_1__.numbers;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCDialogFoundation, \"defaultAdapter\", {\n    get: function () {\n      return {\n        addBodyClass: function () {\n          return undefined;\n        },\n        addClass: function () {\n          return undefined;\n        },\n        areButtonsStacked: function () {\n          return false;\n        },\n        clickDefaultButton: function () {\n          return undefined;\n        },\n        eventTargetMatches: function () {\n          return false;\n        },\n        getActionFromEvent: function () {\n          return '';\n        },\n        getInitialFocusEl: function () {\n          return null;\n        },\n        hasClass: function () {\n          return false;\n        },\n        isContentScrollable: function () {\n          return false;\n        },\n        notifyClosed: function () {\n          return undefined;\n        },\n        notifyClosing: function () {\n          return undefined;\n        },\n        notifyOpened: function () {\n          return undefined;\n        },\n        notifyOpening: function () {\n          return undefined;\n        },\n        releaseFocus: function () {\n          return undefined;\n        },\n        removeBodyClass: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        reverseButtons: function () {\n          return undefined;\n        },\n        trapFocus: function () {\n          return undefined;\n        },\n        registerContentEventHandler: function () {\n          return undefined;\n        },\n        deregisterContentEventHandler: function () {\n          return undefined;\n        },\n        isScrollableContentAtTop: function () {\n          return false;\n        },\n        isScrollableContentAtBottom: function () {\n          return false;\n        },\n        registerWindowEventHandler: function () {\n          return undefined;\n        },\n        deregisterWindowEventHandler: function () {\n          return undefined;\n        }\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  MDCDialogFoundation.prototype.init = function () {\n    if (this.adapter.hasClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.STACKED)) {\n      this.setAutoStackButtons(false);\n    }\n    this.isFullscreen = this.adapter.hasClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.FULLSCREEN);\n  };\n  MDCDialogFoundation.prototype.destroy = function () {\n    if (this.animationTimer) {\n      clearTimeout(this.animationTimer);\n      this.handleAnimationTimerEnd();\n    }\n    if (this.isFullscreen) {\n      this.adapter.deregisterContentEventHandler('scroll', this.contentScrollHandler);\n    }\n    this.animFrame.cancelAll();\n    this.adapter.deregisterWindowEventHandler('resize', this.windowResizeHandler);\n    this.adapter.deregisterWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n  };\n  MDCDialogFoundation.prototype.open = function (dialogOptions) {\n    var _this = this;\n    this.dialogOpen = true;\n    this.adapter.notifyOpening();\n    this.adapter.addClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.OPENING);\n    if (this.isFullscreen) {\n      // A scroll event listener is registered even if the dialog is not\n      // scrollable on open, since the window resize event, or orientation\n      // change may make the dialog scrollable after it is opened.\n      this.adapter.registerContentEventHandler('scroll', this.contentScrollHandler);\n    }\n    if (dialogOptions && dialogOptions.isAboveFullscreenDialog) {\n      this.adapter.addClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SCRIM_HIDDEN);\n    }\n    this.adapter.registerWindowEventHandler('resize', this.windowResizeHandler);\n    this.adapter.registerWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n    // Wait a frame once display is no longer \"none\", to establish basis for\n    // animation\n    this.runNextAnimationFrame(function () {\n      _this.adapter.addClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.OPEN);\n      _this.adapter.addBodyClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SCROLL_LOCK);\n      _this.layout();\n      _this.animationTimer = setTimeout(function () {\n        _this.handleAnimationTimerEnd();\n        _this.adapter.trapFocus(_this.adapter.getInitialFocusEl());\n        _this.adapter.notifyOpened();\n      }, _constants__WEBPACK_IMPORTED_MODULE_1__.numbers.DIALOG_ANIMATION_OPEN_TIME_MS);\n    });\n  };\n  MDCDialogFoundation.prototype.close = function (action) {\n    var _this = this;\n    if (action === void 0) {\n      action = '';\n    }\n    if (!this.dialogOpen) {\n      // Avoid redundant close calls (and events), e.g. from keydown on elements\n      // that inherently emit click\n      return;\n    }\n    this.dialogOpen = false;\n    this.adapter.notifyClosing(action);\n    this.adapter.addClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.CLOSING);\n    this.adapter.removeClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.OPEN);\n    this.adapter.removeBodyClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SCROLL_LOCK);\n    if (this.isFullscreen) {\n      this.adapter.deregisterContentEventHandler('scroll', this.contentScrollHandler);\n    }\n    this.adapter.deregisterWindowEventHandler('resize', this.windowResizeHandler);\n    this.adapter.deregisterWindowEventHandler('orientationchange', this.windowOrientationChangeHandler);\n    cancelAnimationFrame(this.animationFrame);\n    this.animationFrame = 0;\n    clearTimeout(this.animationTimer);\n    this.animationTimer = setTimeout(function () {\n      _this.adapter.releaseFocus();\n      _this.handleAnimationTimerEnd();\n      _this.adapter.notifyClosed(action);\n    }, _constants__WEBPACK_IMPORTED_MODULE_1__.numbers.DIALOG_ANIMATION_CLOSE_TIME_MS);\n  };\n  /**\n   * Used only in instances of showing a secondary dialog over a full-screen\n   * dialog. Shows the \"surface scrim\" displayed over the full-screen dialog.\n   */\n  MDCDialogFoundation.prototype.showSurfaceScrim = function () {\n    var _this = this;\n    this.adapter.addClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SURFACE_SCRIM_SHOWING);\n    this.runNextAnimationFrame(function () {\n      _this.adapter.addClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SURFACE_SCRIM_SHOWN);\n    });\n  };\n  /**\n   * Used only in instances of showing a secondary dialog over a full-screen\n   * dialog. Hides the \"surface scrim\" displayed over the full-screen dialog.\n   */\n  MDCDialogFoundation.prototype.hideSurfaceScrim = function () {\n    this.adapter.removeClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SURFACE_SCRIM_SHOWN);\n    this.adapter.addClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SURFACE_SCRIM_HIDING);\n  };\n  /**\n   * Handles `transitionend` event triggered when surface scrim animation is\n   * finished.\n   */\n  MDCDialogFoundation.prototype.handleSurfaceScrimTransitionEnd = function () {\n    this.adapter.removeClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SURFACE_SCRIM_HIDING);\n    this.adapter.removeClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SURFACE_SCRIM_SHOWING);\n  };\n  MDCDialogFoundation.prototype.isOpen = function () {\n    return this.dialogOpen;\n  };\n  MDCDialogFoundation.prototype.getEscapeKeyAction = function () {\n    return this.escapeKeyAction;\n  };\n  MDCDialogFoundation.prototype.setEscapeKeyAction = function (action) {\n    this.escapeKeyAction = action;\n  };\n  MDCDialogFoundation.prototype.getScrimClickAction = function () {\n    return this.scrimClickAction;\n  };\n  MDCDialogFoundation.prototype.setScrimClickAction = function (action) {\n    this.scrimClickAction = action;\n  };\n  MDCDialogFoundation.prototype.getAutoStackButtons = function () {\n    return this.autoStackButtons;\n  };\n  MDCDialogFoundation.prototype.setAutoStackButtons = function (autoStack) {\n    this.autoStackButtons = autoStack;\n  };\n  MDCDialogFoundation.prototype.getSuppressDefaultPressSelector = function () {\n    return this.suppressDefaultPressSelector;\n  };\n  MDCDialogFoundation.prototype.setSuppressDefaultPressSelector = function (selector) {\n    this.suppressDefaultPressSelector = selector;\n  };\n  MDCDialogFoundation.prototype.layout = function () {\n    var _this = this;\n    this.animFrame.request(AnimationKeys.POLL_LAYOUT_CHANGE, function () {\n      _this.layoutInternal();\n    });\n  };\n  /** Handles click on the dialog root element. */\n  MDCDialogFoundation.prototype.handleClick = function (evt) {\n    var isScrim = this.adapter.eventTargetMatches(evt.target, _constants__WEBPACK_IMPORTED_MODULE_1__.strings.SCRIM_SELECTOR);\n    // Check for scrim click first since it doesn't require querying ancestors.\n    if (isScrim && this.scrimClickAction !== '') {\n      this.close(this.scrimClickAction);\n    } else {\n      var action = this.adapter.getActionFromEvent(evt);\n      if (action) {\n        this.close(action);\n      }\n    }\n  };\n  /** Handles keydown on the dialog root element. */\n  MDCDialogFoundation.prototype.handleKeydown = function (evt) {\n    var isEnter = evt.key === 'Enter' || evt.keyCode === 13;\n    if (!isEnter) {\n      return;\n    }\n    var action = this.adapter.getActionFromEvent(evt);\n    if (action) {\n      // Action button callback is handled in `handleClick`,\n      // since space/enter keydowns on buttons trigger click events.\n      return;\n    }\n    // `composedPath` is used here, when available, to account for use cases\n    // where a target meant to suppress the default press behaviour\n    // may exist in a shadow root.\n    // For example, a textarea inside a web component:\n    // <mwc-dialog>\n    //   <horizontal-layout>\n    //     #shadow-root (open)\n    //       <mwc-textarea>\n    //         #shadow-root (open)\n    //           <textarea></textarea>\n    //       </mwc-textarea>\n    //   </horizontal-layout>\n    // </mwc-dialog>\n    var target = evt.composedPath ? evt.composedPath()[0] : evt.target;\n    var isDefault = this.suppressDefaultPressSelector ? !this.adapter.eventTargetMatches(target, this.suppressDefaultPressSelector) : true;\n    if (isEnter && isDefault) {\n      this.adapter.clickDefaultButton();\n    }\n  };\n  /** Handles keydown on the document. */\n  MDCDialogFoundation.prototype.handleDocumentKeydown = function (evt) {\n    var isEscape = evt.key === 'Escape' || evt.keyCode === 27;\n    if (isEscape && this.escapeKeyAction !== '') {\n      this.close(this.escapeKeyAction);\n    }\n  };\n  /**\n   * Handles scroll event on the dialog's content element -- showing a scroll\n   * divider on the header or footer based on the scroll position. This handler\n   * should only be registered on full-screen dialogs with scrollable content.\n   */\n  MDCDialogFoundation.prototype.handleScrollEvent = function () {\n    var _this = this;\n    // Since scroll events can fire at a high rate, we throttle these events by\n    // using requestAnimationFrame.\n    this.animFrame.request(AnimationKeys.POLL_SCROLL_POS, function () {\n      _this.toggleScrollDividerHeader();\n      _this.toggleScrollDividerFooter();\n    });\n  };\n  MDCDialogFoundation.prototype.layoutInternal = function () {\n    if (this.autoStackButtons) {\n      this.detectStackedButtons();\n    }\n    this.toggleScrollableClasses();\n  };\n  MDCDialogFoundation.prototype.handleAnimationTimerEnd = function () {\n    this.animationTimer = 0;\n    this.adapter.removeClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.OPENING);\n    this.adapter.removeClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.CLOSING);\n  };\n  /**\n   * Runs the given logic on the next animation frame, using setTimeout to\n   * factor in Firefox reflow behavior.\n   */\n  MDCDialogFoundation.prototype.runNextAnimationFrame = function (callback) {\n    var _this = this;\n    cancelAnimationFrame(this.animationFrame);\n    this.animationFrame = requestAnimationFrame(function () {\n      _this.animationFrame = 0;\n      clearTimeout(_this.animationTimer);\n      _this.animationTimer = setTimeout(callback, 0);\n    });\n  };\n  MDCDialogFoundation.prototype.detectStackedButtons = function () {\n    // Remove the class first to let us measure the buttons' natural positions.\n    this.adapter.removeClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.STACKED);\n    var areButtonsStacked = this.adapter.areButtonsStacked();\n    if (areButtonsStacked) {\n      this.adapter.addClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.STACKED);\n    }\n    if (areButtonsStacked !== this.areButtonsStacked) {\n      this.adapter.reverseButtons();\n      this.areButtonsStacked = areButtonsStacked;\n    }\n  };\n  MDCDialogFoundation.prototype.toggleScrollableClasses = function () {\n    // Remove the class first to let us measure the natural height of the\n    // content.\n    this.adapter.removeClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SCROLLABLE);\n    if (this.adapter.isContentScrollable()) {\n      this.adapter.addClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SCROLLABLE);\n      if (this.isFullscreen) {\n        // If dialog is full-screen and scrollable, check if a scroll divider\n        // should be shown.\n        this.toggleScrollDividerHeader();\n        this.toggleScrollDividerFooter();\n      }\n    }\n  };\n  MDCDialogFoundation.prototype.toggleScrollDividerHeader = function () {\n    if (!this.adapter.isScrollableContentAtTop()) {\n      this.adapter.addClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SCROLL_DIVIDER_HEADER);\n    } else if (this.adapter.hasClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SCROLL_DIVIDER_HEADER)) {\n      this.adapter.removeClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SCROLL_DIVIDER_HEADER);\n    }\n  };\n  MDCDialogFoundation.prototype.toggleScrollDividerFooter = function () {\n    if (!this.adapter.isScrollableContentAtBottom()) {\n      this.adapter.addClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SCROLL_DIVIDER_FOOTER);\n    } else if (this.adapter.hasClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SCROLL_DIVIDER_FOOTER)) {\n      this.adapter.removeClass(_constants__WEBPACK_IMPORTED_MODULE_1__.cssClasses.SCROLL_DIVIDER_FOOTER);\n    }\n  };\n  return MDCDialogFoundation;\n}(_material_base_foundation__WEBPACK_IMPORTED_MODULE_3__.MDCFoundation);\n\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MDCDialogFoundation);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2RpYWxvZy9mb3VuZGF0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVCQTtBQUNBO0FBSUE7QUFHQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQTBEQTtBQUFBO0FBaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBeEVBO0FBQUE7QUFDQTtBQUNBOzs7O0FBRUE7QUFBQTtBQUNBO0FBQ0E7Ozs7QUFFQTtBQUFBO0FBQ0E7QUFDQTs7OztBQUVBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7Ozs7QUFtQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBOztBQUlBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBR0E7QUFDQTs7QUFHQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBR0E7QUFFQTtBQUdBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7O0FBSUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBOztBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBOzs7OztBQUtBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7O0FBSUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUFBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnN0ZW9uLXBhbmVsLWZyb250ZW5kL2ZvdW5kYXRpb24udHM/Y2Q4MyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@material/dialog/foundation.js\n");

/***/ }),

/***/ "./node_modules/@material/dom/events.js":
/*!**********************************************!*\
  !*** ./node_modules/@material/dom/events.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"applyPassive\": () => (/* binding */ applyPassive)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2019 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Determine whether the current browser supports passive event listeners, and\n * if so, use them.\n */\nfunction applyPassive(globalObj) {\n  if (globalObj === void 0) {\n    globalObj = window;\n  }\n  return supportsPassiveOption(globalObj) ? {\n    passive: true\n  } : false;\n}\nfunction supportsPassiveOption(globalObj) {\n  if (globalObj === void 0) {\n    globalObj = window;\n  }\n  // See\n  // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n  var passiveSupported = false;\n  try {\n    var options = {\n      // This function will be called when the browser\n      // attempts to access the passive property.\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    var handler = function () {};\n    globalObj.document.addEventListener('test', handler, options);\n    globalObj.document.removeEventListener('test', handler, options);\n  } catch (err) {\n    passiveSupported = false;\n  }\n  return passiveSupported;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL2RvbS9ldmVudHMuanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUJBOzs7O0FBSUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFHQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC9ldmVudHMudHM/ZmU2NSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@material/dom/events.js\n");

/***/ }),

/***/ "./node_modules/@material/mwc-dialog/mwc-dialog-base.js":
/*!**************************************************************!*\
  !*** ./node_modules/@material/mwc-dialog/mwc-dialog-base.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DialogBase\": () => (/* binding */ DialogBase)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var blocking_elements__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! blocking-elements */ \"./node_modules/blocking-elements/dist/blocking-elements.js\");\n/* harmony import */ var blocking_elements__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(blocking_elements__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var wicg_inert__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! wicg-inert */ \"./node_modules/wicg-inert/dist/inert.esm.js\");\n/* harmony import */ var wicg_inert__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(wicg_inert__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _material_dialog_constants_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @material/dialog/constants.js */ \"./node_modules/@material/dialog/constants.js\");\n/* harmony import */ var _material_dialog_foundation_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @material/dialog/foundation.js */ \"./node_modules/@material/dialog/foundation.js\");\n/* harmony import */ var _material_dom_events_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @material/dom/events.js */ \"./node_modules/@material/dom/events.js\");\n/* harmony import */ var _material_dom_ponyfill_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @material/dom/ponyfill.js */ \"./node_modules/@material/dom/ponyfill.js\");\n/* harmony import */ var _material_mwc_base_base_element_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @material/mwc-base/base-element.js */ \"./node_modules/@material/mwc-base/base-element.js\");\n/* harmony import */ var _material_mwc_base_observer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @material/mwc-base/observer.js */ \"./node_modules/@material/mwc-base/observer.js\");\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/* harmony import */ var lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lit/decorators.js */ \"./node_modules/lit/decorators.js\");\n/* harmony import */ var lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lit/directives/class-map.js */ \"./node_modules/lit/directives/class-map.js\");\n/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n// Style preference for leading underscores.\n// tslint:disable:strip-private-property-underscore\n\n\n\n\n\n\n\n\n\n\n\nconst blockingElements = document.$blockingElements;\nclass DialogBase extends _material_mwc_base_base_element_js__WEBPACK_IMPORTED_MODULE_2__.BaseElement {\n  constructor() {\n    super(...arguments);\n    this.hideActions = false;\n    this.stacked = false;\n    this.heading = '';\n    this.scrimClickAction = 'close';\n    this.escapeKeyAction = 'close';\n    this.open = false;\n    this.defaultAction = 'close';\n    this.actionAttribute = 'dialogAction';\n    this.initialFocusAttribute = 'dialogInitialFocus';\n    this.initialSupressDefaultPressSelector = '';\n    this.mdcFoundationClass = _material_dialog_foundation_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\n    this.boundHandleClick = null;\n    this.boundHandleKeydown = null;\n    this.boundHandleDocumentKeydown = null;\n  }\n  set suppressDefaultPressSelector(selector) {\n    if (this.mdcFoundation) {\n      this.mdcFoundation.setSuppressDefaultPressSelector(selector);\n    } else {\n      this.initialSupressDefaultPressSelector = selector;\n    }\n  }\n  /**\n   * @export\n   */\n  get suppressDefaultPressSelector() {\n    return this.mdcFoundation ? this.mdcFoundation.getSuppressDefaultPressSelector() : this.initialSupressDefaultPressSelector;\n  }\n  get primaryButton() {\n    let assignedNodes = this.primarySlot.assignedNodes();\n    assignedNodes = assignedNodes.filter(node => node instanceof HTMLElement);\n    const button = assignedNodes[0];\n    return button ? button : null;\n  }\n  emitNotification(name, action) {\n    const init = {\n      detail: action ? {\n        action\n      } : {}\n    };\n    const ev = new CustomEvent(name, init);\n    this.dispatchEvent(ev);\n  }\n  getInitialFocusEl() {\n    const initFocusSelector = `[${this.initialFocusAttribute}]`;\n    // only search light DOM. This typically handles all the cases\n    const lightDomQs = this.querySelector(initFocusSelector);\n    if (lightDomQs) {\n      return lightDomQs;\n    }\n    // if not in light dom, search each flattened distributed node.\n    const primarySlot = this.primarySlot;\n    const primaryNodes = primarySlot.assignedNodes({\n      flatten: true\n    });\n    const primaryFocusElement = this.searchNodeTreesForAttribute(primaryNodes, this.initialFocusAttribute);\n    if (primaryFocusElement) {\n      return primaryFocusElement;\n    }\n    const secondarySlot = this.secondarySlot;\n    const secondaryNodes = secondarySlot.assignedNodes({\n      flatten: true\n    });\n    const secondaryFocusElement = this.searchNodeTreesForAttribute(secondaryNodes, this.initialFocusAttribute);\n    if (secondaryFocusElement) {\n      return secondaryFocusElement;\n    }\n    const contentSlot = this.contentSlot;\n    const contentNodes = contentSlot.assignedNodes({\n      flatten: true\n    });\n    const initFocusElement = this.searchNodeTreesForAttribute(contentNodes, this.initialFocusAttribute);\n    return initFocusElement;\n  }\n  searchNodeTreesForAttribute(nodes, attribute) {\n    for (const node of nodes) {\n      if (!(node instanceof HTMLElement)) {\n        continue;\n      }\n      if (node.hasAttribute(attribute)) {\n        return node;\n      } else {\n        const selection = node.querySelector(`[${attribute}]`);\n        if (selection) {\n          return selection;\n        }\n      }\n    }\n    return null;\n  }\n  createAdapter() {\n    return Object.assign(Object.assign({}, (0,_material_mwc_base_base_element_js__WEBPACK_IMPORTED_MODULE_2__.addHasRemoveClass)(this.mdcRoot)), {\n      addBodyClass: () => document.body.style.overflow = 'hidden',\n      removeBodyClass: () => document.body.style.overflow = '',\n      areButtonsStacked: () => this.stacked,\n      clickDefaultButton: () => {\n        const primary = this.primaryButton;\n        if (primary) {\n          primary.click();\n        }\n      },\n      eventTargetMatches: (target, selector) => target ? (0,_material_dom_ponyfill_js__WEBPACK_IMPORTED_MODULE_8__.matches)(target, selector) : false,\n      getActionFromEvent: e => {\n        if (!e.target) {\n          return '';\n        }\n        const element = (0,_material_dom_ponyfill_js__WEBPACK_IMPORTED_MODULE_8__.closest)(e.target, `[${this.actionAttribute}]`);\n        const action = element && element.getAttribute(this.actionAttribute);\n        return action;\n      },\n      getInitialFocusEl: () => {\n        return this.getInitialFocusEl();\n      },\n      isContentScrollable: () => {\n        const el = this.contentElement;\n        return el ? el.scrollHeight > el.offsetHeight : false;\n      },\n      notifyClosed: action => this.emitNotification('closed', action),\n      notifyClosing: action => {\n        if (!this.closingDueToDisconnect) {\n          // Don't set our open state to closed just because we were\n          // disconnected. That way if we get reconnected, we'll know to\n          // re-open.\n          this.open = false;\n        }\n        this.emitNotification('closing', action);\n      },\n      notifyOpened: () => this.emitNotification('opened'),\n      notifyOpening: () => {\n        this.open = true;\n        this.emitNotification('opening');\n      },\n      reverseButtons: () => {},\n      releaseFocus: () => {\n        blockingElements.remove(this);\n      },\n      trapFocus: el => {\n        if (!this.isConnected) {\n          // this is the case where it is opened and closed and then removed\n          // from DOM before the animation has completed. Blocking Elements will\n          // throw if this is the case\n          return;\n        }\n        blockingElements.push(this);\n        if (el) {\n          el.focus();\n        }\n      },\n      registerContentEventHandler: (evtType, handler) => {\n        const el = this.contentElement;\n        el.addEventListener(evtType, handler);\n      },\n      deregisterContentEventHandler: (evtType, handler) => {\n        const el = this.contentElement;\n        el.removeEventListener(evtType, handler);\n      },\n      isScrollableContentAtTop: () => {\n        const el = this.contentElement;\n        return el ? el.scrollTop === 0 : false;\n      },\n      isScrollableContentAtBottom: () => {\n        const el = this.contentElement;\n        return el ? Math.ceil(el.scrollHeight - el.scrollTop) === el.clientHeight : false;\n      },\n      registerWindowEventHandler: (evtType, handler) => {\n        window.addEventListener(evtType, handler, (0,_material_dom_events_js__WEBPACK_IMPORTED_MODULE_9__.applyPassive)());\n      },\n      deregisterWindowEventHandler: (evtType, handler) => {\n        window.removeEventListener(evtType, handler, (0,_material_dom_events_js__WEBPACK_IMPORTED_MODULE_9__.applyPassive)());\n      }\n    });\n  }\n  render() {\n    const classes = {\n      [_material_dialog_constants_js__WEBPACK_IMPORTED_MODULE_10__.cssClasses.STACKED]: this.stacked\n    };\n    let heading = lit__WEBPACK_IMPORTED_MODULE_4__.html``;\n    if (this.heading) {\n      heading = this.renderHeading();\n    }\n    const actionsClasses = {\n      'mdc-dialog__actions': !this.hideActions\n    };\n    return lit__WEBPACK_IMPORTED_MODULE_4__.html`\n    <div class=\"mdc-dialog ${(0,lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_6__.classMap)(classes)}\"\n        role=\"alertdialog\"\n        aria-modal=\"true\"\n        aria-labelledby=\"title\"\n        aria-describedby=\"content\">\n      <div class=\"mdc-dialog__container\">\n        <div class=\"mdc-dialog__surface\">\n          ${heading}\n          <div id=\"content\" class=\"mdc-dialog__content\">\n            <slot id=\"contentSlot\"></slot>\n          </div>\n          <footer\n              id=\"actions\"\n              class=\"${(0,lit_directives_class_map_js__WEBPACK_IMPORTED_MODULE_6__.classMap)(actionsClasses)}\">\n            <span>\n              <slot name=\"secondaryAction\"></slot>\n            </span>\n            <span>\n             <slot name=\"primaryAction\"></slot>\n            </span>\n          </footer>\n        </div>\n      </div>\n      <div class=\"mdc-dialog__scrim\"></div>\n    </div>`;\n  }\n  renderHeading() {\n    return lit__WEBPACK_IMPORTED_MODULE_4__.html`\n      <h2 id=\"title\" class=\"mdc-dialog__title\">${this.heading}</h2>`;\n  }\n  firstUpdated() {\n    super.firstUpdated();\n    this.mdcFoundation.setAutoStackButtons(true);\n    if (this.initialSupressDefaultPressSelector) {\n      this.suppressDefaultPressSelector = this.initialSupressDefaultPressSelector;\n    } else {\n      this.suppressDefaultPressSelector = [this.suppressDefaultPressSelector, 'mwc-textarea', 'mwc-menu mwc-list-item', 'mwc-select mwc-list-item'].join(', ');\n    }\n    this.boundHandleClick = this.mdcFoundation.handleClick.bind(this.mdcFoundation);\n    this.boundHandleKeydown = this.mdcFoundation.handleKeydown.bind(this.mdcFoundation);\n    this.boundHandleDocumentKeydown = this.mdcFoundation.handleDocumentKeydown.bind(this.mdcFoundation);\n  }\n  connectedCallback() {\n    super.connectedCallback();\n    if (this.open && this.mdcFoundation && !this.mdcFoundation.isOpen()) {\n      // We probably got disconnected while we were still open. Re-open,\n      // matching the behavior of native <dialog>.\n      this.setEventListeners();\n      this.mdcFoundation.open();\n    }\n  }\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    if (this.open && this.mdcFoundation) {\n      // If this dialog is opened and then disconnected, we want to close\n      // the foundation, so that 1) any pending timers are cancelled\n      // (in particular for trapFocus), and 2) if we reconnect, we can open\n      // the foundation again to retrigger animations and focus.\n      this.removeEventListeners();\n      this.closingDueToDisconnect = true;\n      this.mdcFoundation.close(this.currentAction || this.defaultAction);\n      this.closingDueToDisconnect = false;\n      this.currentAction = undefined;\n      // When we close normally, the releaseFocus callback handles removing\n      // ourselves from the blocking elements stack. However, that callback\n      // happens on a delay, and when we are closing due to a disconnect we\n      // need to remove ourselves before the blocking element polyfill's\n      // mutation observer notices and logs a warning, since it's not valid to\n      // be in the blocking elements stack while disconnected.\n      blockingElements.remove(this);\n    }\n  }\n  forceLayout() {\n    this.mdcFoundation.layout();\n  }\n  focus() {\n    const initialFocusEl = this.getInitialFocusEl();\n    initialFocusEl && initialFocusEl.focus();\n  }\n  blur() {\n    if (!this.shadowRoot) {\n      return;\n    }\n    const activeEl = this.shadowRoot.activeElement;\n    if (activeEl) {\n      if (activeEl instanceof HTMLElement) {\n        activeEl.blur();\n      }\n    } else {\n      const root = this.getRootNode();\n      const activeEl = root instanceof Document ? root.activeElement : null;\n      if (activeEl instanceof HTMLElement) {\n        activeEl.blur();\n      }\n    }\n  }\n  setEventListeners() {\n    if (this.boundHandleClick) {\n      this.mdcRoot.addEventListener('click', this.boundHandleClick);\n    }\n    if (this.boundHandleKeydown) {\n      this.mdcRoot.addEventListener('keydown', this.boundHandleKeydown, (0,_material_dom_events_js__WEBPACK_IMPORTED_MODULE_9__.applyPassive)());\n    }\n    if (this.boundHandleDocumentKeydown) {\n      document.addEventListener('keydown', this.boundHandleDocumentKeydown, (0,_material_dom_events_js__WEBPACK_IMPORTED_MODULE_9__.applyPassive)());\n    }\n  }\n  removeEventListeners() {\n    if (this.boundHandleClick) {\n      this.mdcRoot.removeEventListener('click', this.boundHandleClick);\n    }\n    if (this.boundHandleKeydown) {\n      this.mdcRoot.removeEventListener('keydown', this.boundHandleKeydown);\n    }\n    if (this.boundHandleDocumentKeydown) {\n      document.removeEventListener('keydown', this.boundHandleDocumentKeydown);\n    }\n  }\n  close() {\n    this.open = false;\n  }\n  show() {\n    this.open = true;\n  }\n}\n(0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__.query)('.mdc-dialog')], DialogBase.prototype, \"mdcRoot\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__.query)('slot[name=\"primaryAction\"]')], DialogBase.prototype, \"primarySlot\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__.query)('slot[name=\"secondaryAction\"]')], DialogBase.prototype, \"secondarySlot\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__.query)('#contentSlot')], DialogBase.prototype, \"contentSlot\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__.query)('.mdc-dialog__content')], DialogBase.prototype, \"contentElement\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__.query)('.mdc-container')], DialogBase.prototype, \"conatinerElement\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__.property)({\n  type: Boolean\n})], DialogBase.prototype, \"hideActions\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__.property)({\n  type: Boolean\n}), (0,_material_mwc_base_observer_js__WEBPACK_IMPORTED_MODULE_3__.observer)(function () {\n  this.forceLayout();\n})], DialogBase.prototype, \"stacked\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__.property)({\n  type: String\n})], DialogBase.prototype, \"heading\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__.property)({\n  type: String\n}), (0,_material_mwc_base_observer_js__WEBPACK_IMPORTED_MODULE_3__.observer)(function (newAction) {\n  this.mdcFoundation.setScrimClickAction(newAction);\n})], DialogBase.prototype, \"scrimClickAction\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__.property)({\n  type: String\n}), (0,_material_mwc_base_observer_js__WEBPACK_IMPORTED_MODULE_3__.observer)(function (newAction) {\n  this.mdcFoundation.setEscapeKeyAction(newAction);\n})], DialogBase.prototype, \"escapeKeyAction\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__.property)({\n  type: Boolean,\n  reflect: true\n}), (0,_material_mwc_base_observer_js__WEBPACK_IMPORTED_MODULE_3__.observer)(function (isOpen) {\n  // Check isConnected because we could have been disconnected before first\n  // update. If we're now closed, then we shouldn't start the MDC foundation\n  // opening animation. If we're now closed, then we've already closed the\n  // foundation in disconnectedCallback.\n  if (this.mdcFoundation && this.isConnected) {\n    if (isOpen) {\n      this.setEventListeners();\n      this.mdcFoundation.open();\n    } else {\n      this.removeEventListeners();\n      this.mdcFoundation.close(this.currentAction || this.defaultAction);\n      this.currentAction = undefined;\n    }\n  }\n})], DialogBase.prototype, \"open\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__.property)()], DialogBase.prototype, \"defaultAction\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__.property)()], DialogBase.prototype, \"actionAttribute\", void 0);\n(0,tslib__WEBPACK_IMPORTED_MODULE_11__.__decorate)([(0,lit_decorators_js__WEBPACK_IMPORTED_MODULE_5__.property)()], DialogBase.prototype, \"initialFocusAttribute\", void 0);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQG1hdGVyaWFsL213Yy1kaWFsb2cvbXdjLWRpYWxvZy1iYXNlLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7QUFNQTtBQUNBO0FBRUE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUlBO0FBR0E7QUFBQTs7QUFxQkE7QUFNQTtBQUVBO0FBTUE7QUFNQTtBQW1CQTtBQUVBO0FBQ0E7QUFDQTtBQW9CQTtBQVVBO0FBRUE7QUFDQTtBQUNBO0FBZ1VBO0FBaFdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTs7O0FBR0E7QUFDQTtBQUdBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBVUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBOztBQUdBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7O0FBR0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7O0FBSUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFLQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBR0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7O0FBR0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7Ozs7OztBQU9BOzs7Ozs7QUFNQTs7Ozs7Ozs7Ozs7QUFXQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFLQTtBQUVBO0FBRUE7QUFHQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUdBO0FBQ0E7O0FBR0E7QUFFQTtBQUNBO0FBQ0E7O0FBR0E7QUFDQTs7QUFHQTtBQUNBOztBQUVBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQWhhQTtBQU1BO0FBTUE7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUFBO0FBQUE7QUFNQTtBQUpBO0FBQUE7QUFFQTtBQUNBO0FBR0E7QUFBQTtBQUFBO0FBTUE7QUFKQTtBQUFBO0FBRUE7QUFDQTtBQU9BO0FBSkE7QUFBQTtBQUVBO0FBQ0E7QUFvQkE7QUFqQkE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUdBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc3Rlb24tcGFuZWwtZnJvbnRlbmQvbXdjLWRpYWxvZy1iYXNlLnRzPzkxNzIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xuICogU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbiAqL1xuXG4vLyBTdHlsZSBwcmVmZXJlbmNlIGZvciBsZWFkaW5nIHVuZGVyc2NvcmVzLlxuLy8gdHNsaW50OmRpc2FibGU6c3RyaXAtcHJpdmF0ZS1wcm9wZXJ0eS11bmRlcnNjb3JlXG5cbmltcG9ydCAnYmxvY2tpbmctZWxlbWVudHMnO1xuaW1wb3J0ICd3aWNnLWluZXJ0JztcblxuaW1wb3J0IHtNRENEaWFsb2dBZGFwdGVyfSBmcm9tICdAbWF0ZXJpYWwvZGlhbG9nL2FkYXB0ZXIuanMnO1xuaW1wb3J0IHtjc3NDbGFzc2VzfSBmcm9tICdAbWF0ZXJpYWwvZGlhbG9nL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgTURDRGlhbG9nRm91bmRhdGlvbiBmcm9tICdAbWF0ZXJpYWwvZGlhbG9nL2ZvdW5kYXRpb24uanMnO1xuaW1wb3J0IHthcHBseVBhc3NpdmV9IGZyb20gJ0BtYXRlcmlhbC9kb20vZXZlbnRzLmpzJztcbmltcG9ydCB7Y2xvc2VzdCwgbWF0Y2hlc30gZnJvbSAnQG1hdGVyaWFsL2RvbS9wb255ZmlsbC5qcyc7XG5pbXBvcnQge2FkZEhhc1JlbW92ZUNsYXNzLCBCYXNlRWxlbWVudH0gZnJvbSAnQG1hdGVyaWFsL213Yy1iYXNlL2Jhc2UtZWxlbWVudC5qcyc7XG5pbXBvcnQge29ic2VydmVyfSBmcm9tICdAbWF0ZXJpYWwvbXdjLWJhc2Uvb2JzZXJ2ZXIuanMnO1xuaW1wb3J0IHtEb2N1bWVudFdpdGhCbG9ja2luZ0VsZW1lbnRzfSBmcm9tICdibG9ja2luZy1lbGVtZW50cyc7XG5pbXBvcnQge2h0bWx9IGZyb20gJ2xpdCc7XG5pbXBvcnQge3Byb3BlcnR5LCBxdWVyeX0gZnJvbSAnbGl0L2RlY29yYXRvcnMuanMnO1xuaW1wb3J0IHtjbGFzc01hcH0gZnJvbSAnbGl0L2RpcmVjdGl2ZXMvY2xhc3MtbWFwLmpzJztcblxuZXhwb3J0IHtNRENEaWFsb2dDbG9zZUV2ZW50RGV0YWlsfSBmcm9tICdAbWF0ZXJpYWwvZGlhbG9nL3R5cGVzLmpzJztcblxuY29uc3QgYmxvY2tpbmdFbGVtZW50cyA9XG4gICAgKGRvY3VtZW50IGFzIERvY3VtZW50V2l0aEJsb2NraW5nRWxlbWVudHMpLiRibG9ja2luZ0VsZW1lbnRzO1xuXG5leHBvcnQgY2xhc3MgRGlhbG9nQmFzZSBleHRlbmRzIEJhc2VFbGVtZW50IHtcbiAgQHF1ZXJ5KCcubWRjLWRpYWxvZycpIHByb3RlY3RlZCBtZGNSb290ITogSFRNTERpdkVsZW1lbnQ7XG5cbiAgLy8gX2FjdGlvbkl0ZW1zU2xvdCBzaG91bGQgaGF2ZSB0eXBlIEhUTUxTbG90RWxlbWVudCwgYnV0IHdoZW4gVHlwZVNjcmlwdCdzXG4gIC8vIGVtaXREZWNvcmF0b3JNZXRhZGF0YSBpcyBlbmFibGVkLCB0aGUgSFRNTFNsb3RFbGVtZW50IGNvbnN0cnVjdG9yIHdpbGxcbiAgLy8gYmUgZW1pdHRlZCBpbnRvIHRoZSBydW50aW1lLCB3aGljaCB3aWxsIGNhdXNlIGFuIFwiSFRNTFNsb3RFbGVtZW50IGlzXG4gIC8vIHVuZGVmaW5lZFwiIGVycm9yIGluIGJyb3dzZXJzIHRoYXQgZG9uJ3QgZGVmaW5lIGl0IChlLmcuIElFMTEpLlxuICBAcXVlcnkoJ3Nsb3RbbmFtZT1cInByaW1hcnlBY3Rpb25cIl0nKSBwcm90ZWN0ZWQgcHJpbWFyeVNsb3QhOiBIVE1MRWxlbWVudDtcblxuICAvLyBfYWN0aW9uSXRlbXNTbG90IHNob3VsZCBoYXZlIHR5cGUgSFRNTFNsb3RFbGVtZW50LCBidXQgd2hlbiBUeXBlU2NyaXB0J3NcbiAgLy8gZW1pdERlY29yYXRvck1ldGFkYXRhIGlzIGVuYWJsZWQsIHRoZSBIVE1MU2xvdEVsZW1lbnQgY29uc3RydWN0b3Igd2lsbFxuICAvLyBiZSBlbWl0dGVkIGludG8gdGhlIHJ1bnRpbWUsIHdoaWNoIHdpbGwgY2F1c2UgYW4gXCJIVE1MU2xvdEVsZW1lbnQgaXNcbiAgLy8gdW5kZWZpbmVkXCIgZXJyb3IgaW4gYnJvd3NlcnMgdGhhdCBkb24ndCBkZWZpbmUgaXQgKGUuZy4gSUUxMSkuXG4gIEBxdWVyeSgnc2xvdFtuYW1lPVwic2Vjb25kYXJ5QWN0aW9uXCJdJykgcHJvdGVjdGVkIHNlY29uZGFyeVNsb3QhOiBIVE1MRWxlbWVudDtcblxuICBAcXVlcnkoJyNjb250ZW50U2xvdCcpIHByb3RlY3RlZCBjb250ZW50U2xvdCE6IEhUTUxFbGVtZW50O1xuXG4gIEBxdWVyeSgnLm1kYy1kaWFsb2dfX2NvbnRlbnQnKSBwcm90ZWN0ZWQgY29udGVudEVsZW1lbnQhOiBIVE1MRGl2RWxlbWVudDtcblxuICBAcXVlcnkoJy5tZGMtY29udGFpbmVyJykgcHJvdGVjdGVkIGNvbmF0aW5lckVsZW1lbnQhOiBIVE1MRGl2RWxlbWVudDtcblxuICBAcHJvcGVydHkoe3R5cGU6IEJvb2xlYW59KSBoaWRlQWN0aW9ucyA9IGZhbHNlO1xuXG4gIEBwcm9wZXJ0eSh7dHlwZTogQm9vbGVhbn0pXG4gIEBvYnNlcnZlcihmdW5jdGlvbih0aGlzOiBEaWFsb2dCYXNlKSB7XG4gICAgdGhpcy5mb3JjZUxheW91dCgpO1xuICB9KVxuICBzdGFja2VkID0gZmFsc2U7XG5cbiAgQHByb3BlcnR5KHt0eXBlOiBTdHJpbmd9KSBoZWFkaW5nID0gJyc7XG5cbiAgQHByb3BlcnR5KHt0eXBlOiBTdHJpbmd9KVxuICBAb2JzZXJ2ZXIoZnVuY3Rpb24odGhpczogRGlhbG9nQmFzZSwgbmV3QWN0aW9uOiBzdHJpbmcpIHtcbiAgICB0aGlzLm1kY0ZvdW5kYXRpb24uc2V0U2NyaW1DbGlja0FjdGlvbihuZXdBY3Rpb24pO1xuICB9KVxuICBzY3JpbUNsaWNrQWN0aW9uID0gJ2Nsb3NlJztcblxuICBAcHJvcGVydHkoe3R5cGU6IFN0cmluZ30pXG4gIEBvYnNlcnZlcihmdW5jdGlvbih0aGlzOiBEaWFsb2dCYXNlLCBuZXdBY3Rpb246IHN0cmluZykge1xuICAgIHRoaXMubWRjRm91bmRhdGlvbi5zZXRFc2NhcGVLZXlBY3Rpb24obmV3QWN0aW9uKTtcbiAgfSlcbiAgZXNjYXBlS2V5QWN0aW9uID0gJ2Nsb3NlJztcblxuICBAcHJvcGVydHkoe3R5cGU6IEJvb2xlYW4sIHJlZmxlY3Q6IHRydWV9KVxuICBAb2JzZXJ2ZXIoZnVuY3Rpb24odGhpczogRGlhbG9nQmFzZSwgaXNPcGVuOiBib29sZWFuKSB7XG4gICAgLy8gQ2hlY2sgaXNDb25uZWN0ZWQgYmVjYXVzZSB3ZSBjb3VsZCBoYXZlIGJlZW4gZGlzY29ubmVjdGVkIGJlZm9yZSBmaXJzdFxuICAgIC8vIHVwZGF0ZS4gSWYgd2UncmUgbm93IGNsb3NlZCwgdGhlbiB3ZSBzaG91bGRuJ3Qgc3RhcnQgdGhlIE1EQyBmb3VuZGF0aW9uXG4gICAgLy8gb3BlbmluZyBhbmltYXRpb24uIElmIHdlJ3JlIG5vdyBjbG9zZWQsIHRoZW4gd2UndmUgYWxyZWFkeSBjbG9zZWQgdGhlXG4gICAgLy8gZm91bmRhdGlvbiBpbiBkaXNjb25uZWN0ZWRDYWxsYmFjay5cbiAgICBpZiAodGhpcy5tZGNGb3VuZGF0aW9uICYmIHRoaXMuaXNDb25uZWN0ZWQpIHtcbiAgICAgIGlmIChpc09wZW4pIHtcbiAgICAgICAgdGhpcy5zZXRFdmVudExpc3RlbmVycygpO1xuICAgICAgICB0aGlzLm1kY0ZvdW5kYXRpb24ub3BlbigpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5yZW1vdmVFdmVudExpc3RlbmVycygpO1xuICAgICAgICB0aGlzLm1kY0ZvdW5kYXRpb24uY2xvc2UodGhpcy5jdXJyZW50QWN0aW9uIHx8IHRoaXMuZGVmYXVsdEFjdGlvbik7XG4gICAgICAgIHRoaXMuY3VycmVudEFjdGlvbiA9IHVuZGVmaW5lZDtcbiAgICAgIH1cbiAgICB9XG4gIH0pXG4gIG9wZW4gPSBmYWxzZTtcblxuICBAcHJvcGVydHkoKSBkZWZhdWx0QWN0aW9uID0gJ2Nsb3NlJztcbiAgQHByb3BlcnR5KCkgYWN0aW9uQXR0cmlidXRlID0gJ2RpYWxvZ0FjdGlvbic7XG4gIEBwcm9wZXJ0eSgpIGluaXRpYWxGb2N1c0F0dHJpYnV0ZSA9ICdkaWFsb2dJbml0aWFsRm9jdXMnO1xuXG4gIHNldCBzdXBwcmVzc0RlZmF1bHRQcmVzc1NlbGVjdG9yKHNlbGVjdG9yOiBzdHJpbmcpIHtcbiAgICBpZiAodGhpcy5tZGNGb3VuZGF0aW9uKSB7XG4gICAgICB0aGlzLm1kY0ZvdW5kYXRpb24uc2V0U3VwcHJlc3NEZWZhdWx0UHJlc3NTZWxlY3RvcihzZWxlY3Rvcik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuaW5pdGlhbFN1cHJlc3NEZWZhdWx0UHJlc3NTZWxlY3RvciA9IHNlbGVjdG9yO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAZXhwb3J0XG4gICAqL1xuICBnZXQgc3VwcHJlc3NEZWZhdWx0UHJlc3NTZWxlY3RvcigpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLm1kY0ZvdW5kYXRpb24gP1xuICAgICAgICB0aGlzLm1kY0ZvdW5kYXRpb24uZ2V0U3VwcHJlc3NEZWZhdWx0UHJlc3NTZWxlY3RvcigpIDpcbiAgICAgICAgdGhpcy5pbml0aWFsU3VwcmVzc0RlZmF1bHRQcmVzc1NlbGVjdG9yO1xuICB9XG5cbiAgcHJvdGVjdGVkIGNsb3NpbmdEdWVUb0Rpc2Nvbm5lY3Q/OiBib29sZWFuO1xuICBwcm90ZWN0ZWQgaW5pdGlhbFN1cHJlc3NEZWZhdWx0UHJlc3NTZWxlY3RvciA9ICcnO1xuXG4gIHByb3RlY3RlZCBnZXQgcHJpbWFyeUJ1dHRvbigpOiBIVE1MRWxlbWVudHxudWxsIHtcbiAgICBsZXQgYXNzaWduZWROb2RlcyA9ICh0aGlzLnByaW1hcnlTbG90IGFzIEhUTUxTbG90RWxlbWVudCkuYXNzaWduZWROb2RlcygpO1xuICAgIGFzc2lnbmVkTm9kZXMgPSBhc3NpZ25lZE5vZGVzLmZpbHRlcigobm9kZSkgPT4gbm9kZSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KTtcbiAgICBjb25zdCBidXR0b24gPSBhc3NpZ25lZE5vZGVzWzBdIGFzIEhUTUxFbGVtZW50IHwgdW5kZWZpbmVkO1xuICAgIHJldHVybiBidXR0b24gPyBidXR0b24gOiBudWxsO1xuICB9XG5cbiAgcHJvdGVjdGVkIGN1cnJlbnRBY3Rpb246IHN0cmluZ3x1bmRlZmluZWQ7XG4gIHByb3RlY3RlZCBtZGNGb3VuZGF0aW9uQ2xhc3MgPSBNRENEaWFsb2dGb3VuZGF0aW9uO1xuICBwcm90ZWN0ZWQgbWRjRm91bmRhdGlvbiE6IE1EQ0RpYWxvZ0ZvdW5kYXRpb247XG4gIHByb3RlY3RlZCBib3VuZEhhbmRsZUNsaWNrOiAoKGV2OiBNb3VzZUV2ZW50KSA9PiB2b2lkKXxudWxsID0gbnVsbDtcbiAgcHJvdGVjdGVkIGJvdW5kSGFuZGxlS2V5ZG93bjogKChldjogS2V5Ym9hcmRFdmVudCkgPT4gdm9pZCl8bnVsbCA9IG51bGw7XG4gIHByb3RlY3RlZCBib3VuZEhhbmRsZURvY3VtZW50S2V5ZG93bjpcbiAgICAgICgoZXY6IEtleWJvYXJkRXZlbnQpID0+IHZvaWQpfG51bGwgPSBudWxsO1xuXG4gIHByb3RlY3RlZCBlbWl0Tm90aWZpY2F0aW9uKG5hbWU6IHN0cmluZywgYWN0aW9uPzogc3RyaW5nKSB7XG4gICAgY29uc3QgaW5pdDogQ3VzdG9tRXZlbnRJbml0ID0ge2RldGFpbDogYWN0aW9uID8ge2FjdGlvbn0gOiB7fX07XG4gICAgY29uc3QgZXYgPSBuZXcgQ3VzdG9tRXZlbnQobmFtZSwgaW5pdCk7XG4gICAgdGhpcy5kaXNwYXRjaEV2ZW50KGV2KTtcbiAgfVxuXG4gIHByb3RlY3RlZCBnZXRJbml0aWFsRm9jdXNFbCgpOiBIVE1MRWxlbWVudHxudWxsIHtcbiAgICBjb25zdCBpbml0Rm9jdXNTZWxlY3RvciA9IGBbJHt0aGlzLmluaXRpYWxGb2N1c0F0dHJpYnV0ZX1dYDtcblxuICAgIC8vIG9ubHkgc2VhcmNoIGxpZ2h0IERPTS4gVGhpcyB0eXBpY2FsbHkgaGFuZGxlcyBhbGwgdGhlIGNhc2VzXG4gICAgY29uc3QgbGlnaHREb21RcyA9IHRoaXMucXVlcnlTZWxlY3Rvcihpbml0Rm9jdXNTZWxlY3Rvcik7XG5cbiAgICBpZiAobGlnaHREb21Rcykge1xuICAgICAgcmV0dXJuIGxpZ2h0RG9tUXMgYXMgSFRNTEVsZW1lbnQ7XG4gICAgfVxuXG4gICAgLy8gaWYgbm90IGluIGxpZ2h0IGRvbSwgc2VhcmNoIGVhY2ggZmxhdHRlbmVkIGRpc3RyaWJ1dGVkIG5vZGUuXG4gICAgY29uc3QgcHJpbWFyeVNsb3QgPSB0aGlzLnByaW1hcnlTbG90IGFzIEhUTUxTbG90RWxlbWVudDtcbiAgICBjb25zdCBwcmltYXJ5Tm9kZXMgPSBwcmltYXJ5U2xvdC5hc3NpZ25lZE5vZGVzKHtmbGF0dGVuOiB0cnVlfSk7XG4gICAgY29uc3QgcHJpbWFyeUZvY3VzRWxlbWVudCA9IHRoaXMuc2VhcmNoTm9kZVRyZWVzRm9yQXR0cmlidXRlKFxuICAgICAgICBwcmltYXJ5Tm9kZXMsIHRoaXMuaW5pdGlhbEZvY3VzQXR0cmlidXRlKTtcbiAgICBpZiAocHJpbWFyeUZvY3VzRWxlbWVudCkge1xuICAgICAgcmV0dXJuIHByaW1hcnlGb2N1c0VsZW1lbnQ7XG4gICAgfVxuXG4gICAgY29uc3Qgc2Vjb25kYXJ5U2xvdCA9IHRoaXMuc2Vjb25kYXJ5U2xvdCBhcyBIVE1MU2xvdEVsZW1lbnQ7XG4gICAgY29uc3Qgc2Vjb25kYXJ5Tm9kZXMgPSBzZWNvbmRhcnlTbG90LmFzc2lnbmVkTm9kZXMoe2ZsYXR0ZW46IHRydWV9KTtcbiAgICBjb25zdCBzZWNvbmRhcnlGb2N1c0VsZW1lbnQgPSB0aGlzLnNlYXJjaE5vZGVUcmVlc0ZvckF0dHJpYnV0ZShcbiAgICAgICAgc2Vjb25kYXJ5Tm9kZXMsIHRoaXMuaW5pdGlhbEZvY3VzQXR0cmlidXRlKTtcbiAgICBpZiAoc2Vjb25kYXJ5Rm9jdXNFbGVtZW50KSB7XG4gICAgICByZXR1cm4gc2Vjb25kYXJ5Rm9jdXNFbGVtZW50O1xuICAgIH1cblxuXG4gICAgY29uc3QgY29udGVudFNsb3QgPSB0aGlzLmNvbnRlbnRTbG90IGFzIEhUTUxTbG90RWxlbWVudDtcbiAgICBjb25zdCBjb250ZW50Tm9kZXMgPSBjb250ZW50U2xvdC5hc3NpZ25lZE5vZGVzKHtmbGF0dGVuOiB0cnVlfSk7XG4gICAgY29uc3QgaW5pdEZvY3VzRWxlbWVudCA9IHRoaXMuc2VhcmNoTm9kZVRyZWVzRm9yQXR0cmlidXRlKFxuICAgICAgICBjb250ZW50Tm9kZXMsIHRoaXMuaW5pdGlhbEZvY3VzQXR0cmlidXRlKTtcbiAgICByZXR1cm4gaW5pdEZvY3VzRWxlbWVudDtcbiAgfVxuXG4gIHByb3RlY3RlZCBzZWFyY2hOb2RlVHJlZXNGb3JBdHRyaWJ1dGUobm9kZXM6IE5vZGVbXSwgYXR0cmlidXRlOiBzdHJpbmcpOlxuICAgICAgSFRNTEVsZW1lbnR8bnVsbCB7XG4gICAgZm9yIChjb25zdCBub2RlIG9mIG5vZGVzKSB7XG4gICAgICBpZiAoIShub2RlIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobm9kZS5oYXNBdHRyaWJ1dGUoYXR0cmlidXRlKSkge1xuICAgICAgICByZXR1cm4gbm9kZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IHNlbGVjdGlvbiA9IG5vZGUucXVlcnlTZWxlY3RvcihgWyR7YXR0cmlidXRlfV1gKTtcbiAgICAgICAgaWYgKHNlbGVjdGlvbikge1xuICAgICAgICAgIHJldHVybiBzZWxlY3Rpb24gYXMgSFRNTEVsZW1lbnQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHByb3RlY3RlZCBjcmVhdGVBZGFwdGVyKCk6IE1EQ0RpYWxvZ0FkYXB0ZXIge1xuICAgIHJldHVybiB7XG4gICAgICAuLi5hZGRIYXNSZW1vdmVDbGFzcyh0aGlzLm1kY1Jvb3QpLFxuICAgICAgYWRkQm9keUNsYXNzOiAoKSA9PiBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbicsXG4gICAgICByZW1vdmVCb2R5Q2xhc3M6ICgpID0+IGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSAnJyxcbiAgICAgIGFyZUJ1dHRvbnNTdGFja2VkOiAoKSA9PiB0aGlzLnN0YWNrZWQsXG4gICAgICBjbGlja0RlZmF1bHRCdXR0b246ICgpID0+IHtcbiAgICAgICAgY29uc3QgcHJpbWFyeSA9IHRoaXMucHJpbWFyeUJ1dHRvbjtcbiAgICAgICAgaWYgKHByaW1hcnkpIHtcbiAgICAgICAgICBwcmltYXJ5LmNsaWNrKCk7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBldmVudFRhcmdldE1hdGNoZXM6ICh0YXJnZXQsIHNlbGVjdG9yKSA9PlxuICAgICAgICAgIHRhcmdldCA/IG1hdGNoZXModGFyZ2V0IGFzIEVsZW1lbnQsIHNlbGVjdG9yKSA6IGZhbHNlLFxuICAgICAgZ2V0QWN0aW9uRnJvbUV2ZW50OiAoZTogRXZlbnQpID0+IHtcbiAgICAgICAgaWYgKCFlLnRhcmdldCkge1xuICAgICAgICAgIHJldHVybiAnJztcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGVsZW1lbnQgPVxuICAgICAgICAgICAgY2xvc2VzdChlLnRhcmdldCBhcyBFbGVtZW50LCBgWyR7dGhpcy5hY3Rpb25BdHRyaWJ1dGV9XWApO1xuICAgICAgICBjb25zdCBhY3Rpb24gPSBlbGVtZW50ICYmIGVsZW1lbnQuZ2V0QXR0cmlidXRlKHRoaXMuYWN0aW9uQXR0cmlidXRlKTtcbiAgICAgICAgcmV0dXJuIGFjdGlvbjtcbiAgICAgIH0sXG4gICAgICBnZXRJbml0aWFsRm9jdXNFbDogKCkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRJbml0aWFsRm9jdXNFbCgpO1xuICAgICAgfSxcbiAgICAgIGlzQ29udGVudFNjcm9sbGFibGU6ICgpID0+IHtcbiAgICAgICAgY29uc3QgZWwgPSB0aGlzLmNvbnRlbnRFbGVtZW50O1xuICAgICAgICByZXR1cm4gZWwgPyBlbC5zY3JvbGxIZWlnaHQgPiBlbC5vZmZzZXRIZWlnaHQgOiBmYWxzZTtcbiAgICAgIH0sXG4gICAgICBub3RpZnlDbG9zZWQ6IChhY3Rpb24pID0+IHRoaXMuZW1pdE5vdGlmaWNhdGlvbignY2xvc2VkJywgYWN0aW9uKSxcbiAgICAgIG5vdGlmeUNsb3Npbmc6IChhY3Rpb24pID0+IHtcbiAgICAgICAgaWYgKCF0aGlzLmNsb3NpbmdEdWVUb0Rpc2Nvbm5lY3QpIHtcbiAgICAgICAgICAvLyBEb24ndCBzZXQgb3VyIG9wZW4gc3RhdGUgdG8gY2xvc2VkIGp1c3QgYmVjYXVzZSB3ZSB3ZXJlXG4gICAgICAgICAgLy8gZGlzY29ubmVjdGVkLiBUaGF0IHdheSBpZiB3ZSBnZXQgcmVjb25uZWN0ZWQsIHdlJ2xsIGtub3cgdG9cbiAgICAgICAgICAvLyByZS1vcGVuLlxuICAgICAgICAgIHRoaXMub3BlbiA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZW1pdE5vdGlmaWNhdGlvbignY2xvc2luZycsIGFjdGlvbik7XG4gICAgICB9LFxuICAgICAgbm90aWZ5T3BlbmVkOiAoKSA9PiB0aGlzLmVtaXROb3RpZmljYXRpb24oJ29wZW5lZCcpLFxuICAgICAgbm90aWZ5T3BlbmluZzogKCkgPT4ge1xuICAgICAgICB0aGlzLm9wZW4gPSB0cnVlO1xuICAgICAgICB0aGlzLmVtaXROb3RpZmljYXRpb24oJ29wZW5pbmcnKTtcbiAgICAgIH0sXG4gICAgICByZXZlcnNlQnV0dG9uczogKCkgPT4geyAvKiBoYW5kbGVkIGJ5IHJlbmRlciBmbiAqLyB9LFxuICAgICAgcmVsZWFzZUZvY3VzOiAoKSA9PiB7XG4gICAgICAgIGJsb2NraW5nRWxlbWVudHMucmVtb3ZlKHRoaXMpO1xuICAgICAgfSxcbiAgICAgIHRyYXBGb2N1czogKGVsKSA9PiB7XG4gICAgICAgIGlmICghdGhpcy5pc0Nvbm5lY3RlZCkge1xuICAgICAgICAgIC8vIHRoaXMgaXMgdGhlIGNhc2Ugd2hlcmUgaXQgaXMgb3BlbmVkIGFuZCBjbG9zZWQgYW5kIHRoZW4gcmVtb3ZlZFxuICAgICAgICAgIC8vIGZyb20gRE9NIGJlZm9yZSB0aGUgYW5pbWF0aW9uIGhhcyBjb21wbGV0ZWQuIEJsb2NraW5nIEVsZW1lbnRzIHdpbGxcbiAgICAgICAgICAvLyB0aHJvdyBpZiB0aGlzIGlzIHRoZSBjYXNlXG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGJsb2NraW5nRWxlbWVudHMucHVzaCh0aGlzKTtcblxuICAgICAgICBpZiAoZWwpIHtcbiAgICAgICAgICBlbC5mb2N1cygpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgcmVnaXN0ZXJDb250ZW50RXZlbnRIYW5kbGVyOiAoZXZ0VHlwZSwgaGFuZGxlcikgPT4ge1xuICAgICAgICBjb25zdCBlbCA9IHRoaXMuY29udGVudEVsZW1lbnQ7XG4gICAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlcik7XG4gICAgICB9LFxuICAgICAgZGVyZWdpc3RlckNvbnRlbnRFdmVudEhhbmRsZXI6IChldnRUeXBlLCBoYW5kbGVyKSA9PiB7XG4gICAgICAgIGNvbnN0IGVsID0gdGhpcy5jb250ZW50RWxlbWVudDtcbiAgICAgICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcihldnRUeXBlLCBoYW5kbGVyKTtcbiAgICAgIH0sXG4gICAgICBpc1Njcm9sbGFibGVDb250ZW50QXRUb3A6ICgpID0+IHtcbiAgICAgICAgY29uc3QgZWwgPSB0aGlzLmNvbnRlbnRFbGVtZW50O1xuICAgICAgICByZXR1cm4gZWwgPyBlbC5zY3JvbGxUb3AgPT09IDAgOiBmYWxzZTtcbiAgICAgIH0sXG4gICAgICBpc1Njcm9sbGFibGVDb250ZW50QXRCb3R0b206ICgpID0+IHtcbiAgICAgICAgY29uc3QgZWwgPSB0aGlzLmNvbnRlbnRFbGVtZW50O1xuICAgICAgICByZXR1cm4gZWwgP1xuICAgICAgICAgICAgTWF0aC5jZWlsKGVsLnNjcm9sbEhlaWdodCAtIGVsLnNjcm9sbFRvcCkgPT09IGVsLmNsaWVudEhlaWdodCA6XG4gICAgICAgICAgICBmYWxzZTtcbiAgICAgIH0sXG4gICAgICByZWdpc3RlcldpbmRvd0V2ZW50SGFuZGxlcjogKGV2dFR5cGUsIGhhbmRsZXIpID0+IHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoZXZ0VHlwZSwgaGFuZGxlciwgYXBwbHlQYXNzaXZlKCkpO1xuICAgICAgfSxcbiAgICAgIGRlcmVnaXN0ZXJXaW5kb3dFdmVudEhhbmRsZXI6IChldnRUeXBlLCBoYW5kbGVyKSA9PiB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKGV2dFR5cGUsIGhhbmRsZXIsIGFwcGx5UGFzc2l2ZSgpKTtcbiAgICAgIH0sXG5cbiAgICB9O1xuICB9XG5cbiAgcHJvdGVjdGVkIG92ZXJyaWRlIHJlbmRlcigpIHtcbiAgICBjb25zdCBjbGFzc2VzID0ge1xuICAgICAgW2Nzc0NsYXNzZXMuU1RBQ0tFRF06IHRoaXMuc3RhY2tlZCxcbiAgICB9O1xuXG4gICAgbGV0IGhlYWRpbmcgPSBodG1sYGA7XG5cbiAgICBpZiAodGhpcy5oZWFkaW5nKSB7XG4gICAgICBoZWFkaW5nID0gdGhpcy5yZW5kZXJIZWFkaW5nKCk7XG4gICAgfVxuXG4gICAgY29uc3QgYWN0aW9uc0NsYXNzZXMgPSB7XG4gICAgICAnbWRjLWRpYWxvZ19fYWN0aW9ucyc6ICF0aGlzLmhpZGVBY3Rpb25zLFxuICAgIH07XG5cbiAgICByZXR1cm4gaHRtbGBcbiAgICA8ZGl2IGNsYXNzPVwibWRjLWRpYWxvZyAke2NsYXNzTWFwKGNsYXNzZXMpfVwiXG4gICAgICAgIHJvbGU9XCJhbGVydGRpYWxvZ1wiXG4gICAgICAgIGFyaWEtbW9kYWw9XCJ0cnVlXCJcbiAgICAgICAgYXJpYS1sYWJlbGxlZGJ5PVwidGl0bGVcIlxuICAgICAgICBhcmlhLWRlc2NyaWJlZGJ5PVwiY29udGVudFwiPlxuICAgICAgPGRpdiBjbGFzcz1cIm1kYy1kaWFsb2dfX2NvbnRhaW5lclwiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwibWRjLWRpYWxvZ19fc3VyZmFjZVwiPlxuICAgICAgICAgICR7aGVhZGluZ31cbiAgICAgICAgICA8ZGl2IGlkPVwiY29udGVudFwiIGNsYXNzPVwibWRjLWRpYWxvZ19fY29udGVudFwiPlxuICAgICAgICAgICAgPHNsb3QgaWQ9XCJjb250ZW50U2xvdFwiPjwvc2xvdD5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8Zm9vdGVyXG4gICAgICAgICAgICAgIGlkPVwiYWN0aW9uc1wiXG4gICAgICAgICAgICAgIGNsYXNzPVwiJHtjbGFzc01hcChhY3Rpb25zQ2xhc3Nlcyl9XCI+XG4gICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAgPHNsb3QgbmFtZT1cInNlY29uZGFyeUFjdGlvblwiPjwvc2xvdD5cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAgIDxzbG90IG5hbWU9XCJwcmltYXJ5QWN0aW9uXCI+PC9zbG90PlxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgIDwvZm9vdGVyPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cIm1kYy1kaWFsb2dfX3NjcmltXCI+PC9kaXY+XG4gICAgPC9kaXY+YDtcbiAgfVxuXG4gIHByb3RlY3RlZCByZW5kZXJIZWFkaW5nKCkge1xuICAgIHJldHVybiBodG1sYFxuICAgICAgPGgyIGlkPVwidGl0bGVcIiBjbGFzcz1cIm1kYy1kaWFsb2dfX3RpdGxlXCI+JHt0aGlzLmhlYWRpbmd9PC9oMj5gO1xuICB9XG5cbiAgcHJvdGVjdGVkIG92ZXJyaWRlIGZpcnN0VXBkYXRlZCgpIHtcbiAgICBzdXBlci5maXJzdFVwZGF0ZWQoKTtcbiAgICB0aGlzLm1kY0ZvdW5kYXRpb24uc2V0QXV0b1N0YWNrQnV0dG9ucyh0cnVlKTtcbiAgICBpZiAodGhpcy5pbml0aWFsU3VwcmVzc0RlZmF1bHRQcmVzc1NlbGVjdG9yKSB7XG4gICAgICB0aGlzLnN1cHByZXNzRGVmYXVsdFByZXNzU2VsZWN0b3IgPVxuICAgICAgICAgIHRoaXMuaW5pdGlhbFN1cHJlc3NEZWZhdWx0UHJlc3NTZWxlY3RvcjtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zdXBwcmVzc0RlZmF1bHRQcmVzc1NlbGVjdG9yID0gW1xuICAgICAgICB0aGlzLnN1cHByZXNzRGVmYXVsdFByZXNzU2VsZWN0b3IsICdtd2MtdGV4dGFyZWEnLFxuICAgICAgICAnbXdjLW1lbnUgbXdjLWxpc3QtaXRlbScsICdtd2Mtc2VsZWN0IG13Yy1saXN0LWl0ZW0nXG4gICAgICBdLmpvaW4oJywgJyk7XG4gICAgfVxuICAgIHRoaXMuYm91bmRIYW5kbGVDbGljayA9IHRoaXMubWRjRm91bmRhdGlvbi5oYW5kbGVDbGljay5iaW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLm1kY0ZvdW5kYXRpb24pIGFzIEV2ZW50TGlzdGVuZXI7XG4gICAgdGhpcy5ib3VuZEhhbmRsZUtleWRvd24gPSB0aGlzLm1kY0ZvdW5kYXRpb24uaGFuZGxlS2V5ZG93bi5iaW5kKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubWRjRm91bmRhdGlvbikgYXMgRXZlbnRMaXN0ZW5lcjtcbiAgICB0aGlzLmJvdW5kSGFuZGxlRG9jdW1lbnRLZXlkb3duID1cbiAgICAgICAgdGhpcy5tZGNGb3VuZGF0aW9uLmhhbmRsZURvY3VtZW50S2V5ZG93bi5iaW5kKHRoaXMubWRjRm91bmRhdGlvbikgYXNcbiAgICAgICAgRXZlbnRMaXN0ZW5lcjtcbiAgfVxuXG4gIG92ZXJyaWRlIGNvbm5lY3RlZENhbGxiYWNrKCkge1xuICAgIHN1cGVyLmNvbm5lY3RlZENhbGxiYWNrKCk7XG4gICAgaWYgKHRoaXMub3BlbiAmJiB0aGlzLm1kY0ZvdW5kYXRpb24gJiYgIXRoaXMubWRjRm91bmRhdGlvbi5pc09wZW4oKSkge1xuICAgICAgLy8gV2UgcHJvYmFibHkgZ290IGRpc2Nvbm5lY3RlZCB3aGlsZSB3ZSB3ZXJlIHN0aWxsIG9wZW4uIFJlLW9wZW4sXG4gICAgICAvLyBtYXRjaGluZyB0aGUgYmVoYXZpb3Igb2YgbmF0aXZlIDxkaWFsb2c+LlxuICAgICAgdGhpcy5zZXRFdmVudExpc3RlbmVycygpO1xuICAgICAgdGhpcy5tZGNGb3VuZGF0aW9uLm9wZW4oKTtcbiAgICB9XG4gIH1cblxuICBvdmVycmlkZSBkaXNjb25uZWN0ZWRDYWxsYmFjaygpIHtcbiAgICBzdXBlci5kaXNjb25uZWN0ZWRDYWxsYmFjaygpO1xuICAgIGlmICh0aGlzLm9wZW4gJiYgdGhpcy5tZGNGb3VuZGF0aW9uKSB7XG4gICAgICAvLyBJZiB0aGlzIGRpYWxvZyBpcyBvcGVuZWQgYW5kIHRoZW4gZGlzY29ubmVjdGVkLCB3ZSB3YW50IHRvIGNsb3NlXG4gICAgICAvLyB0aGUgZm91bmRhdGlvbiwgc28gdGhhdCAxKSBhbnkgcGVuZGluZyB0aW1lcnMgYXJlIGNhbmNlbGxlZFxuICAgICAgLy8gKGluIHBhcnRpY3VsYXIgZm9yIHRyYXBGb2N1cyksIGFuZCAyKSBpZiB3ZSByZWNvbm5lY3QsIHdlIGNhbiBvcGVuXG4gICAgICAvLyB0aGUgZm91bmRhdGlvbiBhZ2FpbiB0byByZXRyaWdnZXIgYW5pbWF0aW9ucyBhbmQgZm9jdXMuXG4gICAgICB0aGlzLnJlbW92ZUV2ZW50TGlzdGVuZXJzKCk7XG4gICAgICB0aGlzLmNsb3NpbmdEdWVUb0Rpc2Nvbm5lY3QgPSB0cnVlO1xuICAgICAgdGhpcy5tZGNGb3VuZGF0aW9uLmNsb3NlKHRoaXMuY3VycmVudEFjdGlvbiB8fCB0aGlzLmRlZmF1bHRBY3Rpb24pO1xuICAgICAgdGhpcy5jbG9zaW5nRHVlVG9EaXNjb25uZWN0ID0gZmFsc2U7XG4gICAgICB0aGlzLmN1cnJlbnRBY3Rpb24gPSB1bmRlZmluZWQ7XG5cbiAgICAgIC8vIFdoZW4gd2UgY2xvc2Ugbm9ybWFsbHksIHRoZSByZWxlYXNlRm9jdXMgY2FsbGJhY2sgaGFuZGxlcyByZW1vdmluZ1xuICAgICAgLy8gb3Vyc2VsdmVzIGZyb20gdGhlIGJsb2NraW5nIGVsZW1lbnRzIHN0YWNrLiBIb3dldmVyLCB0aGF0IGNhbGxiYWNrXG4gICAgICAvLyBoYXBwZW5zIG9uIGEgZGVsYXksIGFuZCB3aGVuIHdlIGFyZSBjbG9zaW5nIGR1ZSB0byBhIGRpc2Nvbm5lY3Qgd2VcbiAgICAgIC8vIG5lZWQgdG8gcmVtb3ZlIG91cnNlbHZlcyBiZWZvcmUgdGhlIGJsb2NraW5nIGVsZW1lbnQgcG9seWZpbGwnc1xuICAgICAgLy8gbXV0YXRpb24gb2JzZXJ2ZXIgbm90aWNlcyBhbmQgbG9ncyBhIHdhcm5pbmcsIHNpbmNlIGl0J3Mgbm90IHZhbGlkIHRvXG4gICAgICAvLyBiZSBpbiB0aGUgYmxvY2tpbmcgZWxlbWVudHMgc3RhY2sgd2hpbGUgZGlzY29ubmVjdGVkLlxuICAgICAgYmxvY2tpbmdFbGVtZW50cy5yZW1vdmUodGhpcyk7XG4gICAgfVxuICB9XG5cbiAgZm9yY2VMYXlvdXQoKSB7XG4gICAgdGhpcy5tZGNGb3VuZGF0aW9uLmxheW91dCgpO1xuICB9XG5cbiAgb3ZlcnJpZGUgZm9jdXMoKSB7XG4gICAgY29uc3QgaW5pdGlhbEZvY3VzRWwgPSB0aGlzLmdldEluaXRpYWxGb2N1c0VsKCk7XG4gICAgaW5pdGlhbEZvY3VzRWwgJiYgaW5pdGlhbEZvY3VzRWwuZm9jdXMoKTtcbiAgfVxuXG4gIG92ZXJyaWRlIGJsdXIoKSB7XG4gICAgaWYgKCF0aGlzLnNoYWRvd1Jvb3QpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBhY3RpdmVFbCA9IHRoaXMuc2hhZG93Um9vdC5hY3RpdmVFbGVtZW50O1xuICAgIGlmIChhY3RpdmVFbCkge1xuICAgICAgaWYgKGFjdGl2ZUVsIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpIHtcbiAgICAgICAgYWN0aXZlRWwuYmx1cigpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zdCByb290ID0gdGhpcy5nZXRSb290Tm9kZSgpO1xuICAgICAgY29uc3QgYWN0aXZlRWwgPSByb290IGluc3RhbmNlb2YgRG9jdW1lbnQgPyByb290LmFjdGl2ZUVsZW1lbnQgOiBudWxsO1xuICAgICAgaWYgKGFjdGl2ZUVsIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpIHtcbiAgICAgICAgYWN0aXZlRWwuYmx1cigpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHByb3RlY3RlZCBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICBpZiAodGhpcy5ib3VuZEhhbmRsZUNsaWNrKSB7XG4gICAgICB0aGlzLm1kY1Jvb3QuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmJvdW5kSGFuZGxlQ2xpY2spO1xuICAgIH1cbiAgICBpZiAodGhpcy5ib3VuZEhhbmRsZUtleWRvd24pIHtcbiAgICAgIHRoaXMubWRjUm9vdC5hZGRFdmVudExpc3RlbmVyKFxuICAgICAgICAgICdrZXlkb3duJywgdGhpcy5ib3VuZEhhbmRsZUtleWRvd24sIGFwcGx5UGFzc2l2ZSgpKTtcbiAgICB9XG4gICAgaWYgKHRoaXMuYm91bmRIYW5kbGVEb2N1bWVudEtleWRvd24pIHtcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgJ2tleWRvd24nLCB0aGlzLmJvdW5kSGFuZGxlRG9jdW1lbnRLZXlkb3duLCBhcHBseVBhc3NpdmUoKSk7XG4gICAgfVxuICB9XG5cbiAgcHJvdGVjdGVkIHJlbW92ZUV2ZW50TGlzdGVuZXJzKCkge1xuICAgIGlmICh0aGlzLmJvdW5kSGFuZGxlQ2xpY2spIHtcbiAgICAgIHRoaXMubWRjUm9vdC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuYm91bmRIYW5kbGVDbGljayk7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuYm91bmRIYW5kbGVLZXlkb3duKSB7XG4gICAgICB0aGlzLm1kY1Jvb3QucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuYm91bmRIYW5kbGVLZXlkb3duKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5ib3VuZEhhbmRsZURvY3VtZW50S2V5ZG93bikge1xuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuYm91bmRIYW5kbGVEb2N1bWVudEtleWRvd24pO1xuICAgIH1cbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMub3BlbiA9IGZhbHNlO1xuICB9XG5cbiAgc2hvdygpIHtcbiAgICB0aGlzLm9wZW4gPSB0cnVlO1xuICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@material/mwc-dialog/mwc-dialog-base.js\n");

/***/ }),

/***/ "./node_modules/@material/mwc-dialog/mwc-dialog.css.js":
/*!*************************************************************!*\
  !*** ./node_modules/@material/mwc-dialog/mwc-dialog.css.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"styles\": () => (/* binding */ styles)\n/* harmony export */ });\n/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ \"./node_modules/lit/index.js\");\n/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-LIcense-Identifier: Apache-2.0\n */\n\nconst styles = lit__WEBPACK_IMPORTED_MODULE_0__.css`.mdc-dialog .mdc-dialog__surface{background-color:#fff;background-color:var(--mdc-theme-surface, #fff)}.mdc-dialog .mdc-dialog__scrim{background-color:rgba(0,0,0,.32)}.mdc-dialog .mdc-dialog__surface-scrim{background-color:rgba(0,0,0,.32)}.mdc-dialog .mdc-dialog__title{color:rgba(0,0,0,.87)}.mdc-dialog .mdc-dialog__content{color:rgba(0,0,0,.6)}.mdc-dialog .mdc-dialog__close{color:#000;color:var(--mdc-theme-on-surface, #000)}.mdc-dialog .mdc-dialog__close .mdc-icon-button__ripple::before,.mdc-dialog .mdc-dialog__close .mdc-icon-button__ripple::after{background-color:#000;background-color:var(--mdc-ripple-color, var(--mdc-theme-on-surface, #000))}.mdc-dialog .mdc-dialog__close:hover .mdc-icon-button__ripple::before,.mdc-dialog .mdc-dialog__close.mdc-ripple-surface--hover .mdc-icon-button__ripple::before{opacity:0.04;opacity:var(--mdc-ripple-hover-opacity, 0.04)}.mdc-dialog .mdc-dialog__close.mdc-ripple-upgraded--background-focused .mdc-icon-button__ripple::before,.mdc-dialog .mdc-dialog__close:not(.mdc-ripple-upgraded):focus .mdc-icon-button__ripple::before{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-focus-opacity, 0.12)}.mdc-dialog .mdc-dialog__close:not(.mdc-ripple-upgraded) .mdc-icon-button__ripple::after{transition:opacity 150ms linear}.mdc-dialog .mdc-dialog__close:not(.mdc-ripple-upgraded):active .mdc-icon-button__ripple::after{transition-duration:75ms;opacity:0.12;opacity:var(--mdc-ripple-press-opacity, 0.12)}.mdc-dialog .mdc-dialog__close.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-ripple-press-opacity, 0.12)}.mdc-dialog.mdc-dialog--scrollable .mdc-dialog__title,.mdc-dialog.mdc-dialog--scrollable .mdc-dialog__actions,.mdc-dialog.mdc-dialog--scrollable.mdc-dialog-scroll-divider-footer .mdc-dialog__actions{border-color:rgba(0,0,0,.12)}.mdc-dialog.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:1px solid rgba(0,0,0,.12);margin-bottom:0}.mdc-dialog.mdc-dialog-scroll-divider-header.mdc-dialog--fullscreen .mdc-dialog__header{box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2),0px 2px 2px 0px rgba(0, 0, 0, 0.14),0px 1px 5px 0px rgba(0,0,0,.12)}.mdc-dialog .mdc-dialog__surface{border-radius:4px;border-radius:var(--mdc-shape-medium, 4px)}.mdc-dialog__surface{box-shadow:0px 11px 15px -7px rgba(0, 0, 0, 0.2),0px 24px 38px 3px rgba(0, 0, 0, 0.14),0px 9px 46px 8px rgba(0,0,0,.12)}.mdc-dialog__title{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-headline6-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:1.25rem;font-size:var(--mdc-typography-headline6-font-size, 1.25rem);line-height:2rem;line-height:var(--mdc-typography-headline6-line-height, 2rem);font-weight:500;font-weight:var(--mdc-typography-headline6-font-weight, 500);letter-spacing:0.0125em;letter-spacing:var(--mdc-typography-headline6-letter-spacing, 0.0125em);text-decoration:inherit;text-decoration:var(--mdc-typography-headline6-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-headline6-text-transform, inherit)}.mdc-dialog__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:Roboto, sans-serif;font-family:var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, Roboto, sans-serif));font-size:1rem;font-size:var(--mdc-typography-body1-font-size, 1rem);line-height:1.5rem;line-height:var(--mdc-typography-body1-line-height, 1.5rem);font-weight:400;font-weight:var(--mdc-typography-body1-font-weight, 400);letter-spacing:0.03125em;letter-spacing:var(--mdc-typography-body1-letter-spacing, 0.03125em);text-decoration:inherit;text-decoration:var(--mdc-typography-body1-text-decoration, inherit);text-transform:inherit;text-transform:var(--mdc-typography-body1-text-transform, inherit)}.mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:0;opacity:var(--mdc-elevation-overlay-opacity, 0);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:#fff;background-color:var(--mdc-elevation-overlay-color, #fff)}.mdc-dialog,.mdc-dialog__scrim{position:fixed;top:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;width:100%;height:100%}.mdc-dialog{display:none;z-index:7;z-index:var(--mdc-dialog-z-index, 7)}.mdc-dialog .mdc-dialog__content{padding:20px 24px 20px 24px}.mdc-dialog .mdc-dialog__surface{min-width:280px}@media(max-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:calc(100vw - 32px)}}@media(min-width: 592px){.mdc-dialog .mdc-dialog__surface{max-width:560px}}.mdc-dialog .mdc-dialog__surface{max-height:calc(100% - 32px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-width:none}@media(max-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px;width:560px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 112px)}}@media(max-width: 720px)and (min-width: 672px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:560px}}@media(max-width: 720px)and (max-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:calc(100vh - 160px)}}@media(max-width: 720px)and (min-height: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{max-height:560px}}@media(max-width: 720px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}@media(max-width: 720px)and (max-height: 400px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(max-width: 600px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{height:100%;max-height:100vh;max-width:100vw;width:100vw;border-radius:0}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{order:-1;left:-12px}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__header{padding:0 16px 9px;justify-content:flex-start}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__title{margin-left:calc(16px - 2 * 12px)}}@media(min-width: 960px){.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface{width:calc(100vw - 400px)}.mdc-dialog.mdc-dialog--fullscreen .mdc-dialog__surface .mdc-dialog__close{right:-12px}}.mdc-dialog.mdc-dialog__scrim--hidden .mdc-dialog__scrim{opacity:0}.mdc-dialog__scrim{opacity:0;z-index:-1}.mdc-dialog__container{display:flex;flex-direction:row;align-items:center;justify-content:space-around;box-sizing:border-box;height:100%;transform:scale(0.8);opacity:0;pointer-events:none}.mdc-dialog__surface{position:relative;display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;box-sizing:border-box;max-width:100%;max-height:100%;pointer-events:auto;overflow-y:auto}.mdc-dialog__surface .mdc-elevation-overlay{width:100%;height:100%;top:0;left:0}[dir=rtl] .mdc-dialog__surface,.mdc-dialog__surface[dir=rtl]{text-align:right}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mdc-dialog__surface{outline:2px solid windowText}}.mdc-dialog__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:2px solid transparent;border-radius:inherit;content:\"\";pointer-events:none}@media screen and (forced-colors: active){.mdc-dialog__surface::before{border-color:CanvasText}}@media screen and (-ms-high-contrast: active),screen and (-ms-high-contrast: none){.mdc-dialog__surface::before{content:none}}.mdc-dialog__title{display:block;margin-top:0;position:relative;flex-shrink:0;box-sizing:border-box;margin:0 0 1px;padding:0 24px 9px}.mdc-dialog__title::before{display:inline-block;width:0;height:40px;content:\"\";vertical-align:0}[dir=rtl] .mdc-dialog__title,.mdc-dialog__title[dir=rtl]{text-align:right}.mdc-dialog--scrollable .mdc-dialog__title{margin-bottom:1px;padding-bottom:15px}.mdc-dialog--fullscreen .mdc-dialog__header{align-items:baseline;border-bottom:1px solid transparent;display:inline-flex;justify-content:space-between;padding:0 24px 9px;z-index:1}@media screen and (forced-colors: active){.mdc-dialog--fullscreen .mdc-dialog__header{border-bottom-color:CanvasText}}.mdc-dialog--fullscreen .mdc-dialog__header .mdc-dialog__close{right:-12px}.mdc-dialog--fullscreen .mdc-dialog__title{margin-bottom:0;padding:0;border-bottom:0}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__title{border-bottom:0;margin-bottom:0}.mdc-dialog--fullscreen .mdc-dialog__close{top:5px}.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top:1px solid transparent}@media screen and (forced-colors: active){.mdc-dialog--fullscreen.mdc-dialog--scrollable .mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog__content{flex-grow:1;box-sizing:border-box;margin:0;overflow:auto}.mdc-dialog__content>:first-child{margin-top:0}.mdc-dialog__content>:last-child{margin-bottom:0}.mdc-dialog__title+.mdc-dialog__content,.mdc-dialog__header+.mdc-dialog__content{padding-top:0}.mdc-dialog--scrollable .mdc-dialog__title+.mdc-dialog__content{padding-top:8px;padding-bottom:8px}.mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:6px 0 0}.mdc-dialog--scrollable .mdc-dialog__content .mdc-deprecated-list:first-child:last-child{padding:0}.mdc-dialog__actions{display:flex;position:relative;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;box-sizing:border-box;min-height:52px;margin:0;padding:8px;border-top:1px solid transparent}@media screen and (forced-colors: active){.mdc-dialog__actions{border-top-color:CanvasText}}.mdc-dialog--stacked .mdc-dialog__actions{flex-direction:column;align-items:flex-end}.mdc-dialog__button{margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{margin-left:0;margin-right:8px}.mdc-dialog__button:first-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button:first-child,.mdc-dialog__button:first-child[dir=rtl]{margin-left:0;margin-right:0}[dir=rtl] .mdc-dialog__button,.mdc-dialog__button[dir=rtl]{text-align:left}.mdc-dialog--stacked .mdc-dialog__button:not(:first-child){margin-top:12px}.mdc-dialog--open,.mdc-dialog--opening,.mdc-dialog--closing{display:flex}.mdc-dialog--opening .mdc-dialog__scrim{transition:opacity 150ms linear}.mdc-dialog--opening .mdc-dialog__container{transition:opacity 75ms linear,transform 150ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-dialog--closing .mdc-dialog__scrim,.mdc-dialog--closing .mdc-dialog__container{transition:opacity 75ms linear}.mdc-dialog--closing .mdc-dialog__container{transform:none}.mdc-dialog--open .mdc-dialog__scrim{opacity:1}.mdc-dialog--open .mdc-dialog__container{transform:none;opacity:1}.mdc-dialog--open.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim{opacity:1;z-index:1}.mdc-dialog--open.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{transition:opacity 75ms linear}.mdc-dialog--open.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim{transition:opacity 150ms linear}.mdc-dialog__surface-scrim{display:none;opacity:0;position:absolute;width:100%;height:100%}.mdc-dialog__surface-scrim--shown .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--showing .mdc-dialog__surface-scrim,.mdc-dialog__surface-scrim--hiding .mdc-dialog__surface-scrim{display:block}.mdc-dialog-scroll-lock{overflow:hidden}.mdc-dialog--no-content-padding .mdc-dialog__content{padding:0}.mdc-dialog--sheet .mdc-dialog__close{right:12px;top:9px;position:absolute;z-index:1}#actions:not(.mdc-dialog__actions){display:none}.mdc-dialog__surface{box-shadow:var(--mdc-dialog-box-shadow, 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12))}@media(min-width: 560px){.mdc-dialog .mdc-dialog__surface{max-width:560px;max-width:var(--mdc-dialog-max-width, 560px)}}.mdc-dialog .mdc-dialog__scrim{background-color:rgba(0, 0, 0, 0.32);background-color:var(--mdc-dialog-scrim-color, rgba(0, 0, 0, 0.32))}.mdc-dialog .mdc-dialog__title{color:rgba(0, 0, 0, 0.87);color:var(--mdc-dialog-heading-ink-color, rgba(0, 0, 0, 0.87))}.mdc-dialog .mdc-dialog__content{color:rgba(0, 0, 0, 0.6);color:var(--mdc-dialog-content-ink-color, rgba(0, 0, 0, 0.6))}.mdc-dialog.mdc-dialog--scrollable .mdc-dialog__title,.mdc-dialog.mdc-dialog--scrollable .mdc-dialog__actions{border-color:rgba(0, 0, 0, 0.12);border-color:var(--mdc-dialog-scroll-divider-color, rgba(0, 0, 0, 0.12))}.mdc-dialog .mdc-dialog__surface{min-width:280px;min-width:var(--mdc-dialog-min-width, 280px)}.mdc-dialog .mdc-dialog__surface{max-height:var(--mdc-dialog-max-height, calc(100% - 32px))}#actions ::slotted(*){margin-left:8px;margin-right:0;max-width:100%;text-align:right}[dir=rtl] #actions ::slotted(*),#actions ::slotted(*[dir=rtl]){margin-left:0;margin-right:8px}[dir=rtl] #actions ::slotted(*),#actions ::slotted(*[dir=rtl]){text-align:left}.mdc-dialog--stacked #actions{flex-direction:column-reverse}.mdc-dialog--stacked #actions *:not(:last-child) ::slotted(*){flex-basis:.000000001px;margin-top:12px}`;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@material/mwc-dialog/mwc-dialog.css.js\n");

/***/ }),

/***/ "./node_modules/blocking-elements/dist/blocking-elements.js":
/*!******************************************************************!*\
  !*** ./node_modules/blocking-elements/dist/blocking-elements.js ***!
  \******************************************************************/
/***/ (() => {

eval("/**\n * @license\n * Copyright 2016 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(() => {\n  var _a, _b, _c;\n  /* Symbols for private properties */\n  const _blockingElements = Symbol();\n  const _alreadyInertElements = Symbol();\n  const _topElParents = Symbol();\n  const _siblingsToRestore = Symbol();\n  const _parentMO = Symbol();\n  /* Symbols for private static methods */\n  const _topChanged = Symbol();\n  const _swapInertedSibling = Symbol();\n  const _inertSiblings = Symbol();\n  const _restoreInertedSiblings = Symbol();\n  const _getParents = Symbol();\n  const _getDistributedChildren = Symbol();\n  const _isInertable = Symbol();\n  const _handleMutations = Symbol();\n  class BlockingElementsImpl {\n    constructor() {\n      /**\n       * The blocking elements.\n       */\n      this[_a] = [];\n      /**\n       * Used to keep track of the parents of the top element, from the element\n       * itself up to body. When top changes, the old top might have been removed\n       * from the document, so we need to memoize the inerted parents' siblings\n       * in order to restore their inerteness when top changes.\n       */\n      this[_b] = [];\n      /**\n       * Elements that are already inert before the first blocking element is\n       * pushed.\n       */\n      this[_c] = new Set();\n    }\n    destructor() {\n      // Restore original inertness.\n      this[_restoreInertedSiblings](this[_topElParents]);\n      // Note we don't want to make these properties nullable on the class,\n      // since then we'd need non-null casts in many places. Calling a method on\n      // a BlockingElements instance after calling destructor will result in an\n      // exception.\n      const nullable = this;\n      nullable[_blockingElements] = null;\n      nullable[_topElParents] = null;\n      nullable[_alreadyInertElements] = null;\n    }\n    get top() {\n      const elems = this[_blockingElements];\n      return elems[elems.length - 1] || null;\n    }\n    push(element) {\n      if (!element || element === this.top) {\n        return;\n      }\n      // Remove it from the stack, we'll bring it to the top.\n      this.remove(element);\n      this[_topChanged](element);\n      this[_blockingElements].push(element);\n    }\n    remove(element) {\n      const i = this[_blockingElements].indexOf(element);\n      if (i === -1) {\n        return false;\n      }\n      this[_blockingElements].splice(i, 1);\n      // Top changed only if the removed element was the top element.\n      if (i === this[_blockingElements].length) {\n        this[_topChanged](this.top);\n      }\n      return true;\n    }\n    pop() {\n      const top = this.top;\n      top && this.remove(top);\n      return top;\n    }\n    has(element) {\n      return this[_blockingElements].indexOf(element) !== -1;\n    }\n    /**\n     * Sets `inert` to all document elements except the new top element, its\n     * parents, and its distributed content.\n     */\n    [(_a = _blockingElements, _b = _topElParents, _c = _alreadyInertElements, _topChanged)](newTop) {\n      const toKeepInert = this[_alreadyInertElements];\n      const oldParents = this[_topElParents];\n      // No new top, reset old top if any.\n      if (!newTop) {\n        this[_restoreInertedSiblings](oldParents);\n        toKeepInert.clear();\n        this[_topElParents] = [];\n        return;\n      }\n      const newParents = this[_getParents](newTop);\n      // New top is not contained in the main document!\n      if (newParents[newParents.length - 1].parentNode !== document.body) {\n        throw Error('Non-connected element cannot be a blocking element');\n      }\n      // Cast here because we know we'll call _inertSiblings on newParents\n      // below.\n      this[_topElParents] = newParents;\n      const toSkip = this[_getDistributedChildren](newTop);\n      // No previous top element.\n      if (!oldParents.length) {\n        this[_inertSiblings](newParents, toSkip, toKeepInert);\n        return;\n      }\n      let i = oldParents.length - 1;\n      let j = newParents.length - 1;\n      // Find common parent. Index 0 is the element itself (so stop before it).\n      while (i > 0 && j > 0 && oldParents[i] === newParents[j]) {\n        i--;\n        j--;\n      }\n      // If up the parents tree there are 2 elements that are siblings, swap\n      // the inerted sibling.\n      if (oldParents[i] !== newParents[j]) {\n        this[_swapInertedSibling](oldParents[i], newParents[j]);\n      }\n      // Restore old parents siblings inertness.\n      i > 0 && this[_restoreInertedSiblings](oldParents.slice(0, i));\n      // Make new parents siblings inert.\n      j > 0 && this[_inertSiblings](newParents.slice(0, j), toSkip, null);\n    }\n    /**\n     * Swaps inertness between two sibling elements.\n     * Sets the property `inert` over the attribute since the inert spec\n     * doesn't specify if it should be reflected.\n     * https://html.spec.whatwg.org/multipage/interaction.html#inert\n     */\n    [_swapInertedSibling](oldInert, newInert) {\n      const siblingsToRestore = oldInert[_siblingsToRestore];\n      // oldInert is not contained in siblings to restore, so we have to check\n      // if it's inertable and if already inert.\n      if (this[_isInertable](oldInert) && !oldInert.inert) {\n        oldInert.inert = true;\n        siblingsToRestore.add(oldInert);\n      }\n      // If newInert was already between the siblings to restore, it means it is\n      // inertable and must be restored.\n      if (siblingsToRestore.has(newInert)) {\n        newInert.inert = false;\n        siblingsToRestore.delete(newInert);\n      }\n      newInert[_parentMO] = oldInert[_parentMO];\n      newInert[_siblingsToRestore] = siblingsToRestore;\n      oldInert[_parentMO] = undefined;\n      oldInert[_siblingsToRestore] = undefined;\n    }\n    /**\n     * Restores original inertness to the siblings of the elements.\n     * Sets the property `inert` over the attribute since the inert spec\n     * doesn't specify if it should be reflected.\n     * https://html.spec.whatwg.org/multipage/interaction.html#inert\n     */\n    [_restoreInertedSiblings](elements) {\n      for (const element of elements) {\n        const mo = element[_parentMO];\n        mo.disconnect();\n        element[_parentMO] = undefined;\n        const siblings = element[_siblingsToRestore];\n        for (const sibling of siblings) {\n          sibling.inert = false;\n        }\n        element[_siblingsToRestore] = undefined;\n      }\n    }\n    /**\n     * Inerts the siblings of the elements except the elements to skip. Stores\n     * the inerted siblings into the element's symbol `_siblingsToRestore`.\n     * Pass `toKeepInert` to collect the already inert elements.\n     * Sets the property `inert` over the attribute since the inert spec\n     * doesn't specify if it should be reflected.\n     * https://html.spec.whatwg.org/multipage/interaction.html#inert\n     */\n    [_inertSiblings](elements, toSkip, toKeepInert) {\n      for (const element of elements) {\n        // Assume element is not a Document, so it must have a parentNode.\n        const parent = element.parentNode;\n        const children = parent.children;\n        const inertedSiblings = new Set();\n        for (let j = 0; j < children.length; j++) {\n          const sibling = children[j];\n          // Skip the input element, if not inertable or to be skipped.\n          if (sibling === element || !this[_isInertable](sibling) || toSkip && toSkip.has(sibling)) {\n            continue;\n          }\n          // Should be collected since already inerted.\n          if (toKeepInert && sibling.inert) {\n            toKeepInert.add(sibling);\n          } else {\n            sibling.inert = true;\n            inertedSiblings.add(sibling);\n          }\n        }\n        // Store the siblings that were inerted.\n        element[_siblingsToRestore] = inertedSiblings;\n        // Observe only immediate children mutations on the parent.\n        const mo = new MutationObserver(this[_handleMutations].bind(this));\n        element[_parentMO] = mo;\n        let parentToObserve = parent;\n        // If we're using the ShadyDOM polyfill, then our parent could be a\n        // shady root, which is an object that acts like a ShadowRoot, but isn't\n        // actually a node in the real DOM. Observe the real DOM parent instead.\n        const maybeShadyRoot = parentToObserve;\n        if (maybeShadyRoot.__shady && maybeShadyRoot.host) {\n          parentToObserve = maybeShadyRoot.host;\n        }\n        mo.observe(parentToObserve, {\n          childList: true\n        });\n      }\n    }\n    /**\n     * Handles newly added/removed nodes by toggling their inertness.\n     * It also checks if the current top Blocking Element has been removed,\n     * notifying and removing it.\n     */\n    [_handleMutations](mutations) {\n      const parents = this[_topElParents];\n      const toKeepInert = this[_alreadyInertElements];\n      for (const mutation of mutations) {\n        // If the target is a shadowRoot, get its host as we skip shadowRoots when\n        // computing _topElParents.\n        const target = mutation.target.host || mutation.target;\n        const idx = target === document.body ? parents.length : parents.indexOf(target);\n        const inertedChild = parents[idx - 1];\n        const inertedSiblings = inertedChild[_siblingsToRestore];\n        // To restore.\n        for (let i = 0; i < mutation.removedNodes.length; i++) {\n          const sibling = mutation.removedNodes[i];\n          if (sibling === inertedChild) {\n            console.info('Detected removal of the top Blocking Element.');\n            this.pop();\n            return;\n          }\n          if (inertedSiblings.has(sibling)) {\n            sibling.inert = false;\n            inertedSiblings.delete(sibling);\n          }\n        }\n        // To inert.\n        for (let i = 0; i < mutation.addedNodes.length; i++) {\n          const sibling = mutation.addedNodes[i];\n          if (!this[_isInertable](sibling)) {\n            continue;\n          }\n          if (toKeepInert && sibling.inert) {\n            toKeepInert.add(sibling);\n          } else {\n            sibling.inert = true;\n            inertedSiblings.add(sibling);\n          }\n        }\n      }\n    }\n    /**\n     * Returns if the element is inertable.\n     */\n    [_isInertable](element) {\n      return false === /^(style|template|script)$/.test(element.localName);\n    }\n    /**\n     * Returns the list of newParents of an element, starting from element\n     * (included) up to `document.body` (excluded).\n     */\n    [_getParents](element) {\n      const parents = [];\n      let current = element;\n      // Stop to body.\n      while (current && current !== document.body) {\n        // Skip shadow roots.\n        if (current.nodeType === Node.ELEMENT_NODE) {\n          parents.push(current);\n        }\n        // ShadowDom v1\n        if (current.assignedSlot) {\n          // Collect slots from deepest slot to top.\n          while (current = current.assignedSlot) {\n            parents.push(current);\n          }\n          // Continue the search on the top slot.\n          current = parents.pop();\n          continue;\n        }\n        current = current.parentNode || current.host;\n      }\n      return parents;\n    }\n    /**\n     * Returns the distributed children of the element's shadow root.\n     * Returns null if the element doesn't have a shadow root.\n     */\n    [_getDistributedChildren](element) {\n      const shadowRoot = element.shadowRoot;\n      if (!shadowRoot) {\n        return null;\n      }\n      const result = new Set();\n      let i;\n      let j;\n      let nodes;\n      const slots = shadowRoot.querySelectorAll('slot');\n      if (slots.length && slots[0].assignedNodes) {\n        for (i = 0; i < slots.length; i++) {\n          nodes = slots[i].assignedNodes({\n            flatten: true\n          });\n          for (j = 0; j < nodes.length; j++) {\n            if (nodes[j].nodeType === Node.ELEMENT_NODE) {\n              result.add(nodes[j]);\n            }\n          }\n        }\n        // No need to search for <content>.\n      }\n\n      return result;\n    }\n  }\n  document.$blockingElements = new BlockingElementsImpl();\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Z0VsZW1lbnRzIiwiU3ltYm9sIiwiX2FscmVhZHlJbmVydEVsZW1lbnRzIiwiX3RvcEVsUGFyZW50cyIsIl9zaWJsaW5nc1RvUmVzdG9yZSIsIl9wYXJlbnRNTyIsIl90b3BDaGFuZ2VkIiwiX3N3YXBJbmVydGVkU2libGluZyIsIl9pbmVydFNpYmxpbmdzIiwiX3Jlc3RvcmVJbmVydGVkU2libGluZ3MiLCJfZ2V0UGFyZW50cyIsIl9nZXREaXN0cmlidXRlZENoaWxkcmVuIiwiX2lzSW5lcnRhYmxlIiwiX2hhbmRsZU11dGF0aW9ucyIsIkJsb2NraW5nRWxlbWVudHNJbXBsIiwiY29uc3RydWN0b3IiLCJTZXQiLCJkZXN0cnVjdG9yIiwibnVsbGFibGUiLCJ0b3AiLCJlbGVtcyIsImxlbmd0aCIsInB1c2giLCJlbGVtZW50IiwicmVtb3ZlIiwiaSIsImluZGV4T2YiLCJzcGxpY2UiLCJwb3AiLCJoYXMiLCJuZXdUb3AiLCJ0b0tlZXBJbmVydCIsIm9sZFBhcmVudHMiLCJjbGVhciIsIm5ld1BhcmVudHMiLCJwYXJlbnROb2RlIiwiZG9jdW1lbnQiLCJib2R5IiwiRXJyb3IiLCJ0b1NraXAiLCJqIiwic2xpY2UiLCJvbGRJbmVydCIsIm5ld0luZXJ0Iiwic2libGluZ3NUb1Jlc3RvcmUiLCJpbmVydCIsImFkZCIsImRlbGV0ZSIsInVuZGVmaW5lZCIsImVsZW1lbnRzIiwibW8iLCJkaXNjb25uZWN0Iiwic2libGluZ3MiLCJzaWJsaW5nIiwicGFyZW50IiwiY2hpbGRyZW4iLCJpbmVydGVkU2libGluZ3MiLCJNdXRhdGlvbk9ic2VydmVyIiwiYmluZCIsInBhcmVudFRvT2JzZXJ2ZSIsIm1heWJlU2hhZHlSb290IiwiX19zaGFkeSIsImhvc3QiLCJvYnNlcnZlIiwiY2hpbGRMaXN0IiwibXV0YXRpb25zIiwicGFyZW50cyIsIm11dGF0aW9uIiwidGFyZ2V0IiwiaWR4IiwiaW5lcnRlZENoaWxkIiwicmVtb3ZlZE5vZGVzIiwiY29uc29sZSIsImluZm8iLCJhZGRlZE5vZGVzIiwidGVzdCIsImxvY2FsTmFtZSIsImN1cnJlbnQiLCJub2RlVHlwZSIsIk5vZGUiLCJFTEVNRU5UX05PREUiLCJhc3NpZ25lZFNsb3QiLCJzaGFkb3dSb290IiwicmVzdWx0Iiwibm9kZXMiLCJzbG90cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJhc3NpZ25lZE5vZGVzIiwiZmxhdHRlbiIsIiRibG9ja2luZ0VsZW1lbnRzIl0sInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnN0ZW9uLXBhbmVsLWZyb250ZW5kLy4uL3NyYy9ibG9ja2luZy1lbGVtZW50cy50cz9mMmZhIl0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sImZpbGUiOiIuL25vZGVfbW9kdWxlcy9ibG9ja2luZy1lbGVtZW50cy9kaXN0L2Jsb2NraW5nLWVsZW1lbnRzLmpzLmpzIn0=\n//# sourceURL=webpack-internal:///./node_modules/blocking-elements/dist/blocking-elements.js\n");

/***/ }),

/***/ "./node_modules/wicg-inert/dist/inert.esm.js":
/*!***************************************************!*\
  !*** ./node_modules/wicg-inert/dist/inert.esm.js ***!
  \***************************************************/
/***/ (() => {

eval("var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/**\n * This work is licensed under the W3C Software and Document License\n * (http://www.w3.org/Consortium/Legal/2015/copyright-software-and-document).\n */\n\n(function () {\n  // Return early if we're not running inside of the browser.\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  // Convenience function for converting NodeLists.\n  /** @type {typeof Array.prototype.slice} */\n  var slice = Array.prototype.slice;\n\n  /**\n   * IE has a non-standard name for \"matches\".\n   * @type {typeof Element.prototype.matches}\n   */\n  var matches = Element.prototype.matches || Element.prototype.msMatchesSelector;\n\n  /** @type {string} */\n  var _focusableElementsString = ['a[href]', 'area[href]', 'input:not([disabled])', 'select:not([disabled])', 'textarea:not([disabled])', 'button:not([disabled])', 'details', 'summary', 'iframe', 'object', 'embed', '[contenteditable]'].join(',');\n\n  /**\n   * `InertRoot` manages a single inert subtree, i.e. a DOM subtree whose root element has an `inert`\n   * attribute.\n   *\n   * Its main functions are:\n   *\n   * - to create and maintain a set of managed `InertNode`s, including when mutations occur in the\n   *   subtree. The `makeSubtreeUnfocusable()` method handles collecting `InertNode`s via registering\n   *   each focusable node in the subtree with the singleton `InertManager` which manages all known\n   *   focusable nodes within inert subtrees. `InertManager` ensures that a single `InertNode`\n   *   instance exists for each focusable node which has at least one inert root as an ancestor.\n   *\n   * - to notify all managed `InertNode`s when this subtree stops being inert (i.e. when the `inert`\n   *   attribute is removed from the root node). This is handled in the destructor, which calls the\n   *   `deregister` method on `InertManager` for each managed inert node.\n   */\n\n  var InertRoot = function () {\n    /**\n     * @param {!HTMLElement} rootElement The HTMLElement at the root of the inert subtree.\n     * @param {!InertManager} inertManager The global singleton InertManager object.\n     */\n    function InertRoot(rootElement, inertManager) {\n      _classCallCheck(this, InertRoot);\n\n      /** @type {!InertManager} */\n      this._inertManager = inertManager;\n\n      /** @type {!HTMLElement} */\n      this._rootElement = rootElement;\n\n      /**\n       * @type {!Set<!InertNode>}\n       * All managed focusable nodes in this InertRoot's subtree.\n       */\n      this._managedNodes = new Set();\n\n      // Make the subtree hidden from assistive technology\n      if (this._rootElement.hasAttribute('aria-hidden')) {\n        /** @type {?string} */\n        this._savedAriaHidden = this._rootElement.getAttribute('aria-hidden');\n      } else {\n        this._savedAriaHidden = null;\n      }\n      this._rootElement.setAttribute('aria-hidden', 'true');\n\n      // Make all focusable elements in the subtree unfocusable and add them to _managedNodes\n      this._makeSubtreeUnfocusable(this._rootElement);\n\n      // Watch for:\n      // - any additions in the subtree: make them unfocusable too\n      // - any removals from the subtree: remove them from this inert root's managed nodes\n      // - attribute changes: if `tabindex` is added, or removed from an intrinsically focusable\n      //   element, make that node a managed node.\n      this._observer = new MutationObserver(this._onMutation.bind(this));\n      this._observer.observe(this._rootElement, {\n        attributes: true,\n        childList: true,\n        subtree: true\n      });\n    }\n\n    /**\n     * Call this whenever this object is about to become obsolete.  This unwinds all of the state\n     * stored in this object and updates the state of all of the managed nodes.\n     */\n\n    _createClass(InertRoot, [{\n      key: 'destructor',\n      value: function destructor() {\n        this._observer.disconnect();\n        if (this._rootElement) {\n          if (this._savedAriaHidden !== null) {\n            this._rootElement.setAttribute('aria-hidden', this._savedAriaHidden);\n          } else {\n            this._rootElement.removeAttribute('aria-hidden');\n          }\n        }\n        this._managedNodes.forEach(function (inertNode) {\n          this._unmanageNode(inertNode.node);\n        }, this);\n\n        // Note we cast the nulls to the ANY type here because:\n        // 1) We want the class properties to be declared as non-null, or else we\n        //    need even more casts throughout this code. All bets are off if an\n        //    instance has been destroyed and a method is called.\n        // 2) We don't want to cast \"this\", because we want type-aware optimizations\n        //    to know which properties we're setting.\n        this._observer = /** @type {?} */null;\n        this._rootElement = /** @type {?} */null;\n        this._managedNodes = /** @type {?} */null;\n        this._inertManager = /** @type {?} */null;\n      }\n\n      /**\n       * @return {!Set<!InertNode>} A copy of this InertRoot's managed nodes set.\n       */\n    }, {\n      key: '_makeSubtreeUnfocusable',\n      /**\n       * @param {!Node} startNode\n       */\n      value: function _makeSubtreeUnfocusable(startNode) {\n        var _this2 = this;\n        composedTreeWalk(startNode, function (node) {\n          return _this2._visitNode(node);\n        });\n        var activeElement = document.activeElement;\n        if (!document.body.contains(startNode)) {\n          // startNode may be in shadow DOM, so find its nearest shadowRoot to get the activeElement.\n          var node = startNode;\n          /** @type {!ShadowRoot|undefined} */\n          var root = undefined;\n          while (node) {\n            if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n              root = /** @type {!ShadowRoot} */node;\n              break;\n            }\n            node = node.parentNode;\n          }\n          if (root) {\n            activeElement = root.activeElement;\n          }\n        }\n        if (startNode.contains(activeElement)) {\n          activeElement.blur();\n          // In IE11, if an element is already focused, and then set to tabindex=-1\n          // calling blur() will not actually move the focus.\n          // To work around this we call focus() on the body instead.\n          if (activeElement === document.activeElement) {\n            document.body.focus();\n          }\n        }\n      }\n\n      /**\n       * @param {!Node} node\n       */\n    }, {\n      key: '_visitNode',\n      value: function _visitNode(node) {\n        if (node.nodeType !== Node.ELEMENT_NODE) {\n          return;\n        }\n        var element = /** @type {!HTMLElement} */node;\n\n        // If a descendant inert root becomes un-inert, its descendants will still be inert because of\n        // this inert root, so all of its managed nodes need to be adopted by this InertRoot.\n        if (element !== this._rootElement && element.hasAttribute('inert')) {\n          this._adoptInertRoot(element);\n        }\n        if (matches.call(element, _focusableElementsString) || element.hasAttribute('tabindex')) {\n          this._manageNode(element);\n        }\n      }\n\n      /**\n       * Register the given node with this InertRoot and with InertManager.\n       * @param {!Node} node\n       */\n    }, {\n      key: '_manageNode',\n      value: function _manageNode(node) {\n        var inertNode = this._inertManager.register(node, this);\n        this._managedNodes.add(inertNode);\n      }\n\n      /**\n       * Unregister the given node with this InertRoot and with InertManager.\n       * @param {!Node} node\n       */\n    }, {\n      key: '_unmanageNode',\n      value: function _unmanageNode(node) {\n        var inertNode = this._inertManager.deregister(node, this);\n        if (inertNode) {\n          this._managedNodes['delete'](inertNode);\n        }\n      }\n\n      /**\n       * Unregister the entire subtree starting at `startNode`.\n       * @param {!Node} startNode\n       */\n    }, {\n      key: '_unmanageSubtree',\n      value: function _unmanageSubtree(startNode) {\n        var _this3 = this;\n        composedTreeWalk(startNode, function (node) {\n          return _this3._unmanageNode(node);\n        });\n      }\n\n      /**\n       * If a descendant node is found with an `inert` attribute, adopt its managed nodes.\n       * @param {!HTMLElement} node\n       */\n    }, {\n      key: '_adoptInertRoot',\n      value: function _adoptInertRoot(node) {\n        var inertSubroot = this._inertManager.getInertRoot(node);\n\n        // During initialisation this inert root may not have been registered yet,\n        // so register it now if need be.\n        if (!inertSubroot) {\n          this._inertManager.setInert(node, true);\n          inertSubroot = this._inertManager.getInertRoot(node);\n        }\n        inertSubroot.managedNodes.forEach(function (savedInertNode) {\n          this._manageNode(savedInertNode.node);\n        }, this);\n      }\n\n      /**\n       * Callback used when mutation observer detects subtree additions, removals, or attribute changes.\n       * @param {!Array<!MutationRecord>} records\n       * @param {!MutationObserver} self\n       */\n    }, {\n      key: '_onMutation',\n      value: function _onMutation(records, self) {\n        records.forEach(function (record) {\n          var target = /** @type {!HTMLElement} */record.target;\n          if (record.type === 'childList') {\n            // Manage added nodes\n            slice.call(record.addedNodes).forEach(function (node) {\n              this._makeSubtreeUnfocusable(node);\n            }, this);\n\n            // Un-manage removed nodes\n            slice.call(record.removedNodes).forEach(function (node) {\n              this._unmanageSubtree(node);\n            }, this);\n          } else if (record.type === 'attributes') {\n            if (record.attributeName === 'tabindex') {\n              // Re-initialise inert node if tabindex changes\n              this._manageNode(target);\n            } else if (target !== this._rootElement && record.attributeName === 'inert' && target.hasAttribute('inert')) {\n              // If a new inert root is added, adopt its managed nodes and make sure it knows about the\n              // already managed nodes from this inert subroot.\n              this._adoptInertRoot(target);\n              var inertSubroot = this._inertManager.getInertRoot(target);\n              this._managedNodes.forEach(function (managedNode) {\n                if (target.contains(managedNode.node)) {\n                  inertSubroot._manageNode(managedNode.node);\n                }\n              });\n            }\n          }\n        }, this);\n      }\n    }, {\n      key: 'managedNodes',\n      get: function get() {\n        return new Set(this._managedNodes);\n      }\n\n      /** @return {boolean} */\n    }, {\n      key: 'hasSavedAriaHidden',\n      get: function get() {\n        return this._savedAriaHidden !== null;\n      }\n\n      /** @param {?string} ariaHidden */\n    }, {\n      key: 'savedAriaHidden',\n      set: function set(ariaHidden) {\n        this._savedAriaHidden = ariaHidden;\n      }\n\n      /** @return {?string} */,\n\n      get: function get() {\n        return this._savedAriaHidden;\n      }\n    }]);\n    return InertRoot;\n  }();\n\n  /**\n   * `InertNode` initialises and manages a single inert node.\n   * A node is inert if it is a descendant of one or more inert root elements.\n   *\n   * On construction, `InertNode` saves the existing `tabindex` value for the node, if any, and\n   * either removes the `tabindex` attribute or sets it to `-1`, depending on whether the element\n   * is intrinsically focusable or not.\n   *\n   * `InertNode` maintains a set of `InertRoot`s which are descendants of this `InertNode`. When an\n   * `InertRoot` is destroyed, and calls `InertManager.deregister()`, the `InertManager` notifies the\n   * `InertNode` via `removeInertRoot()`, which in turn destroys the `InertNode` if no `InertRoot`s\n   * remain in the set. On destruction, `InertNode` reinstates the stored `tabindex` if one exists,\n   * or removes the `tabindex` attribute if the element is intrinsically focusable.\n   */\n\n  var InertNode = function () {\n    /**\n     * @param {!Node} node A focusable element to be made inert.\n     * @param {!InertRoot} inertRoot The inert root element associated with this inert node.\n     */\n    function InertNode(node, inertRoot) {\n      _classCallCheck(this, InertNode);\n\n      /** @type {!Node} */\n      this._node = node;\n\n      /** @type {boolean} */\n      this._overrodeFocusMethod = false;\n\n      /**\n       * @type {!Set<!InertRoot>} The set of descendant inert roots.\n       *    If and only if this set becomes empty, this node is no longer inert.\n       */\n      this._inertRoots = new Set([inertRoot]);\n\n      /** @type {?number} */\n      this._savedTabIndex = null;\n\n      /** @type {boolean} */\n      this._destroyed = false;\n\n      // Save any prior tabindex info and make this node untabbable\n      this.ensureUntabbable();\n    }\n\n    /**\n     * Call this whenever this object is about to become obsolete.\n     * This makes the managed node focusable again and deletes all of the previously stored state.\n     */\n\n    _createClass(InertNode, [{\n      key: 'destructor',\n      value: function destructor() {\n        this._throwIfDestroyed();\n        if (this._node && this._node.nodeType === Node.ELEMENT_NODE) {\n          var element = /** @type {!HTMLElement} */this._node;\n          if (this._savedTabIndex !== null) {\n            element.setAttribute('tabindex', this._savedTabIndex);\n          } else {\n            element.removeAttribute('tabindex');\n          }\n\n          // Use `delete` to restore native focus method.\n          if (this._overrodeFocusMethod) {\n            delete element.focus;\n          }\n        }\n\n        // See note in InertRoot.destructor for why we cast these nulls to ANY.\n        this._node = /** @type {?} */null;\n        this._inertRoots = /** @type {?} */null;\n        this._destroyed = true;\n      }\n\n      /**\n       * @type {boolean} Whether this object is obsolete because the managed node is no longer inert.\n       * If the object has been destroyed, any attempt to access it will cause an exception.\n       */\n    }, {\n      key: '_throwIfDestroyed',\n      /**\n       * Throw if user tries to access destroyed InertNode.\n       */\n      value: function _throwIfDestroyed() {\n        if (this.destroyed) {\n          throw new Error('Trying to access destroyed InertNode');\n        }\n      }\n\n      /** @return {boolean} */\n    }, {\n      key: 'ensureUntabbable',\n      /** Save the existing tabindex value and make the node untabbable and unfocusable */\n      value: function ensureUntabbable() {\n        if (this.node.nodeType !== Node.ELEMENT_NODE) {\n          return;\n        }\n        var element = /** @type {!HTMLElement} */this.node;\n        if (matches.call(element, _focusableElementsString)) {\n          if ( /** @type {!HTMLElement} */element.tabIndex === -1 && this.hasSavedTabIndex) {\n            return;\n          }\n          if (element.hasAttribute('tabindex')) {\n            this._savedTabIndex = /** @type {!HTMLElement} */element.tabIndex;\n          }\n          element.setAttribute('tabindex', '-1');\n          if (element.nodeType === Node.ELEMENT_NODE) {\n            element.focus = function () {};\n            this._overrodeFocusMethod = true;\n          }\n        } else if (element.hasAttribute('tabindex')) {\n          this._savedTabIndex = /** @type {!HTMLElement} */element.tabIndex;\n          element.removeAttribute('tabindex');\n        }\n      }\n\n      /**\n       * Add another inert root to this inert node's set of managing inert roots.\n       * @param {!InertRoot} inertRoot\n       */\n    }, {\n      key: 'addInertRoot',\n      value: function addInertRoot(inertRoot) {\n        this._throwIfDestroyed();\n        this._inertRoots.add(inertRoot);\n      }\n\n      /**\n       * Remove the given inert root from this inert node's set of managing inert roots.\n       * If the set of managing inert roots becomes empty, this node is no longer inert,\n       * so the object should be destroyed.\n       * @param {!InertRoot} inertRoot\n       */\n    }, {\n      key: 'removeInertRoot',\n      value: function removeInertRoot(inertRoot) {\n        this._throwIfDestroyed();\n        this._inertRoots['delete'](inertRoot);\n        if (this._inertRoots.size === 0) {\n          this.destructor();\n        }\n      }\n    }, {\n      key: 'destroyed',\n      get: function get() {\n        return (/** @type {!InertNode} */this._destroyed\n        );\n      }\n    }, {\n      key: 'hasSavedTabIndex',\n      get: function get() {\n        return this._savedTabIndex !== null;\n      }\n\n      /** @return {!Node} */\n    }, {\n      key: 'node',\n      get: function get() {\n        this._throwIfDestroyed();\n        return this._node;\n      }\n\n      /** @param {?number} tabIndex */\n    }, {\n      key: 'savedTabIndex',\n      set: function set(tabIndex) {\n        this._throwIfDestroyed();\n        this._savedTabIndex = tabIndex;\n      }\n\n      /** @return {?number} */,\n\n      get: function get() {\n        this._throwIfDestroyed();\n        return this._savedTabIndex;\n      }\n    }]);\n    return InertNode;\n  }();\n\n  /**\n   * InertManager is a per-document singleton object which manages all inert roots and nodes.\n   *\n   * When an element becomes an inert root by having an `inert` attribute set and/or its `inert`\n   * property set to `true`, the `setInert` method creates an `InertRoot` object for the element.\n   * The `InertRoot` in turn registers itself as managing all of the element's focusable descendant\n   * nodes via the `register()` method. The `InertManager` ensures that a single `InertNode` instance\n   * is created for each such node, via the `_managedNodes` map.\n   */\n\n  var InertManager = function () {\n    /**\n     * @param {!Document} document\n     */\n    function InertManager(document) {\n      _classCallCheck(this, InertManager);\n      if (!document) {\n        throw new Error('Missing required argument; InertManager needs to wrap a document.');\n      }\n\n      /** @type {!Document} */\n      this._document = document;\n\n      /**\n       * All managed nodes known to this InertManager. In a map to allow looking up by Node.\n       * @type {!Map<!Node, !InertNode>}\n       */\n      this._managedNodes = new Map();\n\n      /**\n       * All inert roots known to this InertManager. In a map to allow looking up by Node.\n       * @type {!Map<!Node, !InertRoot>}\n       */\n      this._inertRoots = new Map();\n\n      /**\n       * Observer for mutations on `document.body`.\n       * @type {!MutationObserver}\n       */\n      this._observer = new MutationObserver(this._watchForInert.bind(this));\n\n      // Add inert style.\n      addInertStyle(document.head || document.body || document.documentElement);\n\n      // Wait for document to be loaded.\n      if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', this._onDocumentLoaded.bind(this));\n      } else {\n        this._onDocumentLoaded();\n      }\n    }\n\n    /**\n     * Set whether the given element should be an inert root or not.\n     * @param {!HTMLElement} root\n     * @param {boolean} inert\n     */\n\n    _createClass(InertManager, [{\n      key: 'setInert',\n      value: function setInert(root, inert) {\n        if (inert) {\n          if (this._inertRoots.has(root)) {\n            // element is already inert\n            return;\n          }\n          var inertRoot = new InertRoot(root, this);\n          root.setAttribute('inert', '');\n          this._inertRoots.set(root, inertRoot);\n          // If not contained in the document, it must be in a shadowRoot.\n          // Ensure inert styles are added there.\n          if (!this._document.body.contains(root)) {\n            var parent = root.parentNode;\n            while (parent) {\n              if (parent.nodeType === 11) {\n                addInertStyle(parent);\n              }\n              parent = parent.parentNode;\n            }\n          }\n        } else {\n          if (!this._inertRoots.has(root)) {\n            // element is already non-inert\n            return;\n          }\n          var _inertRoot = this._inertRoots.get(root);\n          _inertRoot.destructor();\n          this._inertRoots['delete'](root);\n          root.removeAttribute('inert');\n        }\n      }\n\n      /**\n       * Get the InertRoot object corresponding to the given inert root element, if any.\n       * @param {!Node} element\n       * @return {!InertRoot|undefined}\n       */\n    }, {\n      key: 'getInertRoot',\n      value: function getInertRoot(element) {\n        return this._inertRoots.get(element);\n      }\n\n      /**\n       * Register the given InertRoot as managing the given node.\n       * In the case where the node has a previously existing inert root, this inert root will\n       * be added to its set of inert roots.\n       * @param {!Node} node\n       * @param {!InertRoot} inertRoot\n       * @return {!InertNode} inertNode\n       */\n    }, {\n      key: 'register',\n      value: function register(node, inertRoot) {\n        var inertNode = this._managedNodes.get(node);\n        if (inertNode !== undefined) {\n          // node was already in an inert subtree\n          inertNode.addInertRoot(inertRoot);\n        } else {\n          inertNode = new InertNode(node, inertRoot);\n        }\n        this._managedNodes.set(node, inertNode);\n        return inertNode;\n      }\n\n      /**\n       * De-register the given InertRoot as managing the given inert node.\n       * Removes the inert root from the InertNode's set of managing inert roots, and remove the inert\n       * node from the InertManager's set of managed nodes if it is destroyed.\n       * If the node is not currently managed, this is essentially a no-op.\n       * @param {!Node} node\n       * @param {!InertRoot} inertRoot\n       * @return {?InertNode} The potentially destroyed InertNode associated with this node, if any.\n       */\n    }, {\n      key: 'deregister',\n      value: function deregister(node, inertRoot) {\n        var inertNode = this._managedNodes.get(node);\n        if (!inertNode) {\n          return null;\n        }\n        inertNode.removeInertRoot(inertRoot);\n        if (inertNode.destroyed) {\n          this._managedNodes['delete'](node);\n        }\n        return inertNode;\n      }\n\n      /**\n       * Callback used when document has finished loading.\n       */\n    }, {\n      key: '_onDocumentLoaded',\n      value: function _onDocumentLoaded() {\n        // Find all inert roots in document and make them actually inert.\n        var inertElements = slice.call(this._document.querySelectorAll('[inert]'));\n        inertElements.forEach(function (inertElement) {\n          this.setInert(inertElement, true);\n        }, this);\n\n        // Comment this out to use programmatic API only.\n        this._observer.observe(this._document.body || this._document.documentElement, {\n          attributes: true,\n          subtree: true,\n          childList: true\n        });\n      }\n\n      /**\n       * Callback used when mutation observer detects attribute changes.\n       * @param {!Array<!MutationRecord>} records\n       * @param {!MutationObserver} self\n       */\n    }, {\n      key: '_watchForInert',\n      value: function _watchForInert(records, self) {\n        var _this = this;\n        records.forEach(function (record) {\n          switch (record.type) {\n            case 'childList':\n              slice.call(record.addedNodes).forEach(function (node) {\n                if (node.nodeType !== Node.ELEMENT_NODE) {\n                  return;\n                }\n                var inertElements = slice.call(node.querySelectorAll('[inert]'));\n                if (matches.call(node, '[inert]')) {\n                  inertElements.unshift(node);\n                }\n                inertElements.forEach(function (inertElement) {\n                  this.setInert(inertElement, true);\n                }, _this);\n              }, _this);\n              break;\n            case 'attributes':\n              if (record.attributeName !== 'inert') {\n                return;\n              }\n              var target = /** @type {!HTMLElement} */record.target;\n              var inert = target.hasAttribute('inert');\n              _this.setInert(target, inert);\n              break;\n          }\n        }, this);\n      }\n    }]);\n    return InertManager;\n  }();\n\n  /**\n   * Recursively walk the composed tree from |node|.\n   * @param {!Node} node\n   * @param {(function (!HTMLElement))=} callback Callback to be called for each element traversed,\n   *     before descending into child nodes.\n   * @param {?ShadowRoot=} shadowRootAncestor The nearest ShadowRoot ancestor, if any.\n   */\n\n  function composedTreeWalk(node, callback, shadowRootAncestor) {\n    if (node.nodeType == Node.ELEMENT_NODE) {\n      var element = /** @type {!HTMLElement} */node;\n      if (callback) {\n        callback(element);\n      }\n\n      // Descend into node:\n      // If it has a ShadowRoot, ignore all child elements - these will be picked\n      // up by the <content> or <shadow> elements. Descend straight into the\n      // ShadowRoot.\n      var shadowRoot = /** @type {!HTMLElement} */element.shadowRoot;\n      if (shadowRoot) {\n        composedTreeWalk(shadowRoot, callback, shadowRoot);\n        return;\n      }\n\n      // If it is a <content> element, descend into distributed elements - these\n      // are elements from outside the shadow root which are rendered inside the\n      // shadow DOM.\n      if (element.localName == 'content') {\n        var content = /** @type {!HTMLContentElement} */element;\n        // Verifies if ShadowDom v0 is supported.\n        var distributedNodes = content.getDistributedNodes ? content.getDistributedNodes() : [];\n        for (var i = 0; i < distributedNodes.length; i++) {\n          composedTreeWalk(distributedNodes[i], callback, shadowRootAncestor);\n        }\n        return;\n      }\n\n      // If it is a <slot> element, descend into assigned nodes - these\n      // are elements from outside the shadow root which are rendered inside the\n      // shadow DOM.\n      if (element.localName == 'slot') {\n        var slot = /** @type {!HTMLSlotElement} */element;\n        // Verify if ShadowDom v1 is supported.\n        var _distributedNodes = slot.assignedNodes ? slot.assignedNodes({\n          flatten: true\n        }) : [];\n        for (var _i = 0; _i < _distributedNodes.length; _i++) {\n          composedTreeWalk(_distributedNodes[_i], callback, shadowRootAncestor);\n        }\n        return;\n      }\n    }\n\n    // If it is neither the parent of a ShadowRoot, a <content> element, a <slot>\n    // element, nor a <shadow> element recurse normally.\n    var child = node.firstChild;\n    while (child != null) {\n      composedTreeWalk(child, callback, shadowRootAncestor);\n      child = child.nextSibling;\n    }\n  }\n\n  /**\n   * Adds a style element to the node containing the inert specific styles\n   * @param {!Node} node\n   */\n  function addInertStyle(node) {\n    if (node.querySelector('style#inert-style, link#inert-style')) {\n      return;\n    }\n    var style = document.createElement('style');\n    style.setAttribute('id', 'inert-style');\n    style.textContent = '\\n' + '[inert] {\\n' + '  pointer-events: none;\\n' + '  cursor: default;\\n' + '}\\n' + '\\n' + '[inert], [inert] * {\\n' + '  -webkit-user-select: none;\\n' + '  -moz-user-select: none;\\n' + '  -ms-user-select: none;\\n' + '  user-select: none;\\n' + '}\\n';\n    node.appendChild(style);\n  }\n  if (!HTMLElement.prototype.hasOwnProperty('inert')) {\n    /** @type {!InertManager} */\n    var inertManager = new InertManager(document);\n    Object.defineProperty(HTMLElement.prototype, 'inert', {\n      enumerable: true,\n      /** @this {!HTMLElement} */\n      get: function get() {\n        return this.hasAttribute('inert');\n      },\n      /** @this {!HTMLElement} */\n      set: function set(inert) {\n        inertManager.setInert(this, inert);\n      }\n    });\n  }\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/wicg-inert/dist/inert.esm.js\n");

/***/ })

}]);