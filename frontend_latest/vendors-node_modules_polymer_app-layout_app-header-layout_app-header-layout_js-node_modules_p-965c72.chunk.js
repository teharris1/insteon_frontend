"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkinsteon_panel_frontend"] = self["webpackChunkinsteon_panel_frontend"] || []).push([["vendors-node_modules_polymer_app-layout_app-header-layout_app-header-layout_js-node_modules_p-965c72"],{

/***/ "./node_modules/@polymer/app-layout/app-header-layout/app-header-layout.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@polymer/app-layout/app-header-layout/app-header-layout.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_iron_flex_layout_iron_flex_layout_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/iron-flex-layout/iron-flex-layout.js */ \"./node_modules/@polymer/iron-flex-layout/iron-flex-layout.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer-fn.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer-fn.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer.dom.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer.dom.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polymer/polymer/lib/utils/html-tag.js */ \"./node_modules/@polymer/polymer/lib/utils/html-tag.js\");\n/* harmony import */ var _app_layout_behavior_app_layout_behavior_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../app-layout-behavior/app-layout-behavior.js */ \"./node_modules/@polymer/app-layout/app-layout-behavior/app-layout-behavior.js\");\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n\n/**\napp-header-layout is a wrapper element that positions an app-header and other\ncontent. This element uses the document scroll by default, but it can also\ndefine its own scrolling region.\n\nUsing the document scroll:\n\n```html\n<app-header-layout>\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nUsing an own scrolling region:\n\n```html\n<app-header-layout has-scrolling-region style=\"width: 300px; height: 400px;\">\n  <app-header slot=\"header\" fixed condenses effects=\"waterfall\">\n    <app-toolbar>\n      <div main-title>App name</div>\n    </app-toolbar>\n  </app-header>\n  <div>\n    main content\n  </div>\n</app-header-layout>\n```\n\nAdd the `fullbleed` attribute to app-header-layout to make it fit the size of\nits container:\n\n```html\n<app-header-layout fullbleed>\n ...\n</app-header-layout>\n```\n\n@element app-header-layout\n@demo app-header-layout/demo/simple.html Simple Demo\n@demo app-header-layout/demo/scrolling-region.html Scrolling Region\n@demo app-header-layout/demo/music.html Music Demo\n@demo app-header-layout/demo/footer.html Footer Demo\n*/\n\n(0,_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_2__.Polymer)({\n  /** @override */\n  _template: _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__.html`\n    <style>\n      :host {\n        display: block;\n        /**\n         * Force app-header-layout to have its own stacking context so that its parent can\n         * control the stacking of it relative to other elements (e.g. app-drawer-layout).\n         * This could be done using \\`isolation: isolate\\`, but that's not well supported\n         * across browsers.\n         */\n        position: relative;\n        z-index: 0;\n      }\n\n      #wrapper ::slotted([slot=header]) {\n        @apply --layout-fixed-top;\n        z-index: 1;\n      }\n\n      #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) {\n        height: 100%;\n      }\n\n      :host([has-scrolling-region]) #wrapper ::slotted([slot=header]) {\n        position: absolute;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing ::slotted([slot=header]) {\n        position: relative;\n      }\n\n      :host([has-scrolling-region]) #wrapper #contentContainer {\n        @apply --layout-fit;\n        overflow-y: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      :host([has-scrolling-region]) #wrapper.initializing #contentContainer {\n        position: relative;\n      }\n\n      :host([fullbleed]) {\n        @apply --layout-vertical;\n        @apply --layout-fit;\n      }\n\n      :host([fullbleed]) #wrapper,\n      :host([fullbleed]) #wrapper #contentContainer {\n        @apply --layout-vertical;\n        @apply --layout-flex;\n      }\n\n      #contentContainer {\n        /* Create a stacking context here so that all children appear below the header. */\n        position: relative;\n        z-index: 0;\n      }\n\n      @media print {\n        :host([has-scrolling-region]) #wrapper #contentContainer {\n          overflow-y: visible;\n        }\n      }\n\n    </style>\n\n    <div id=\"wrapper\" class=\"initializing\">\n      <slot id=\"headerSlot\" name=\"header\"></slot>\n\n      <div id=\"contentContainer\">\n        <slot></slot>\n      </div>\n    </div>\n`,\n  is: 'app-header-layout',\n  behaviors: [_app_layout_behavior_app_layout_behavior_js__WEBPACK_IMPORTED_MODULE_5__.AppLayoutBehavior],\n  properties: {\n    /**\n     * If true, the current element will have its own scrolling region.\n     * Otherwise, it will use the document scroll to control the header.\n     */\n    hasScrollingRegion: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    }\n  },\n  observers: ['resetLayout(isAttached, hasScrollingRegion)'],\n\n  /**\n   * A reference to the app-header element.\n   *\n   * @property header\n   */\n  get header() {\n    return (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_3__.dom)(this.$.headerSlot).getDistributedNodes()[0];\n  },\n\n  _updateLayoutStates: function () {\n    var header = this.header;\n\n    if (!this.isAttached || !header) {\n      return;\n    } // Remove the initializing class, which staticly positions the header and\n    // the content until the height of the header can be read.\n\n\n    this.$.wrapper.classList.remove('initializing'); // Update scroll target.\n\n    header.scrollTarget = this.hasScrollingRegion ? this.$.contentContainer : this.ownerDocument.documentElement; // Get header height here so that style reads are batched together before\n    // style writes (i.e. getBoundingClientRect() below).\n\n    var headerHeight = header.offsetHeight; // Update the header position.\n\n    if (!this.hasScrollingRegion) {\n      requestAnimationFrame(function () {\n        var rect = this.getBoundingClientRect();\n        var rightOffset = document.documentElement.clientWidth - rect.right;\n        header.style.left = rect.left + 'px';\n        header.style.right = rightOffset + 'px';\n      }.bind(this));\n    } else {\n      header.style.left = '';\n      header.style.right = '';\n    } // Update the content container position.\n\n\n    var containerStyle = this.$.contentContainer.style;\n\n    if (header.fixed && !header.condenses && this.hasScrollingRegion) {\n      // If the header size does not change and we're using a scrolling region,\n      // exclude the header area from the scrolling region so that the header\n      // doesn't overlap the scrollbar.\n      containerStyle.marginTop = headerHeight + 'px';\n      containerStyle.paddingTop = '';\n    } else {\n      containerStyle.paddingTop = headerHeight + 'px';\n      containerStyle.marginTop = '';\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@polymer/app-layout/app-header-layout/app-header-layout.js\n");

/***/ }),

/***/ "./node_modules/@polymer/app-layout/app-header/app-header.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@polymer/app-layout/app-header/app-header.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_iron_flex_layout_iron_flex_layout_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/iron-flex-layout/iron-flex-layout.js */ \"./node_modules/@polymer/iron-flex-layout/iron-flex-layout.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer-fn.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer-fn.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer.dom.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer.dom.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polymer/polymer/lib/utils/html-tag.js */ \"./node_modules/@polymer/polymer/lib/utils/html-tag.js\");\n/* harmony import */ var _app_layout_behavior_app_layout_behavior_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../app-layout-behavior/app-layout-behavior.js */ \"./node_modules/@polymer/app-layout/app-layout-behavior/app-layout-behavior.js\");\n/* harmony import */ var _app_scroll_effects_app_scroll_effects_behavior_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../app-scroll-effects/app-scroll-effects-behavior.js */ \"./node_modules/@polymer/app-layout/app-scroll-effects/app-scroll-effects-behavior.js\");\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n\n\n/**\napp-header is container element for app-toolbars at the top of the screen that\ncan have scroll effects. By default, an app-header moves away from the viewport\nwhen scrolling down and if using `reveals`, the header slides back when\nscrolling back up. For example:\n\n```html\n<app-header reveals>\n  <app-toolbar>\n    <div main-title>App name</div>\n  </app-toolbar>\n</app-header>\n```\n\napp-header can also condense when scrolling down. To achieve this behavior, the\nheader must have a larger height than the `sticky` element in the light DOM. For\nexample:\n\n```html\n<app-header style=\"height: 96px;\" condenses fixed>\n  <app-toolbar style=\"height: 64px;\">\n    <div main-title>App name</div>\n  </app-toolbar>\n</app-header>\n```\n\nIn this case the header is initially `96px` tall, and it shrinks to `64px` when\nscrolling down. That is what is meant by \"condensing\".\n\n### Sticky element\n\nThe element that is positioned fixed to top of the header's `scrollTarget` when\na threshold is reached, similar to `position: sticky` in CSS. This element\n**must** be an immediate child of app-header. By default, the `sticky` element\nis the first `app-toolbar that is an immediate child of app-header.\n\n```html\n<app-header condenses>\n  <app-toolbar> Sticky element </app-toolbar>\n  <app-toolbar></app-toolbar>\n</app-header>\n```\n\n#### Customizing the sticky element\n\n```html\n<app-header condenses>\n  <app-toolbar></app-toolbar>\n  <app-toolbar sticky> Sticky element </app-toolbar>\n</app-header>\n```\n\n### Scroll target\n\nThe app-header's `scrollTarget` property allows to customize the scrollable\nelement to which the header responds when the user scrolls. By default,\napp-header uses the document as the scroll target, but you can customize this\nproperty by setting the id of the element, e.g.\n\n```html\n<div id=\"scrollingRegion\" style=\"overflow-y: auto;\">\n  <app-header scroll-target=\"scrollingRegion\">\n  </app-header>\n</div>\n```\n\nIn this case, the `scrollTarget` property points to the outer div element.\nAlternatively, you can set this property programmatically:\n\n```js\nappHeader.scrollTarget = document.querySelector(\"#scrollingRegion\");\n```\n\n## Backgrounds\napp-header has two background layers that can be used for styling when the\nheader is condensed or when the scrollable element is scrolled to the top.\n\n## Scroll effects\n\nScroll effects are _optional_ visual effects applied in app-header based on\nscroll position. For example, The [Material Design scrolling\ntechniques](https://www.google.com/design/spec/patterns/scrolling-techniques.html)\nrecommends effects that can be installed via the `effects` property. e.g.\n\n```html\n<app-header effects=\"waterfall\">\n  <app-toolbar>App name</app-toolbar>\n</app-header>\n```\n\n#### Importing the effects\n\nTo use the scroll effects, you must explicitly import them in addition to\n`app-header`:\n\n```js\nimport '@polymer/app-layout/app-scroll-effects/app-scroll-effects.js';\n```\n\n#### List of effects\n\n* **blend-background**\nFades in/out two background elements by applying CSS opacity based on scroll\nposition. You can use this effect to smoothly change the background color or\nimage of the header. For example, using the mixin\n`--app-header-background-rear-layer` lets you assign a different background when\nthe header is condensed:\n\n```css\napp-header {\n  background-color: red;\n  --app-header-background-rear-layer: {\n    /* The header is blue when condensed *\\/\n    background-color: blue;\n  };\n}\n```\n\n* **fade-background**\nUpon scrolling past a threshold, this effect will trigger an opacity transition\nto fade in/out the backgrounds. Compared to the `blend-background` effect, this\neffect doesn't interpolate the opacity based on scroll position.\n\n\n* **parallax-background**\nA simple parallax effect that vertically translates the backgrounds based on a\nfraction of the scroll position. For example:\n\n```css\napp-header {\n  --app-header-background-front-layer: {\n    background-image: url(...);\n  };\n}\n```\n```html\n<app-header style=\"height: 300px;\" effects=\"parallax-background\">\n  <app-toolbar>App name</app-toolbar>\n</app-header>\n```\n\nThe fraction determines how far the background moves relative to the scroll\nposition. This value can be assigned via the `scalar` config value and it is\ntypically a value between 0 and 1 inclusive. If `scalar=0`, the background\ndoesn't move away from the header.\n\n* **resize-title**\nProgressively interpolates the size of the title from the element with the\n`main-title` attribute to the element with the `condensed-title` attribute as\nthe header condenses. For example:\n\n```html\n<app-header condenses reveals effects=\"resize-title\">\n  <app-toolbar>\n      <h4 condensed-title>App name</h4>\n  </app-toolbar>\n  <app-toolbar>\n      <h1 main-title>App name</h1>\n  </app-toolbar>\n</app-header>\n```\n\n* **resize-snapped-title**\nUpon scrolling past a threshold, this effect fades in/out the titles using\nopacity transitions. Similarly to `resize-title`, the `main-title` and\n`condensed-title` elements must be placed in the light DOM.\n\n* **waterfall**\nToggles the shadow property in app-header to create a sense of depth (as\nrecommended in the MD spec) between the header and the underneath content. You\ncan change the shadow by customizing the `--app-header-shadow` mixin. For\nexample:\n\n```css\napp-header {\n  --app-header-shadow: {\n    box-shadow: inset 0px 5px 2px -3px rgba(0, 0, 0, 0.2);\n  };\n}\n```\n\n```html\n<app-header condenses reveals effects=\"waterfall\">\n  <app-toolbar>\n      <h1 main-title>App name</h1>\n  </app-toolbar>\n</app-header>\n```\n\n* **material**\nInstalls the waterfall, resize-title, blend-background and parallax-background\neffects.\n\n### Content attributes\n\nAttribute | Description         | Default\n----------|---------------------|----------------------------------------\n`sticky` | Element that remains at the top when the header condenses. | The first app-toolbar in the light DOM.\n\n\n## Styling\n\nMixin | Description | Default\n------|-------------|----------\n`--app-header-background-front-layer` | Applies to the front layer of the background. | {}\n`--app-header-background-rear-layer` | Applies to the rear layer of the background. | {}\n`--app-header-shadow` | Applies to the shadow. | {}\n\n@element app-header\n@demo app-header/demo/blend-background-1.html Blend Background Image\n@demo app-header/demo/blend-background-2.html Blend 2 Background Images\n@demo app-header/demo/blend-background-3.html Blend Background Colors\n@demo app-header/demo/contacts.html Contacts Demo\n@demo app-header/demo/give.html Resize Snapped Title Demo\n@demo app-header/demo/music.html Reveals Demo\n@demo app-header/demo/no-effects.html Condenses and Reveals Demo\n@demo app-header/demo/notes.html Fixed with Dynamic Shadow Demo\n@demo app-header/demo/custom-sticky-element-1.html Custom Sticky Element Demo 1\n@demo app-header/demo/custom-sticky-element-2.html Custom Sticky Element Demo 2\n\n*/\n\n(0,_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_2__.Polymer)({\n  /** @override */\n  _template: _polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_4__.html`\n    <style>\n      :host {\n        position: relative;\n        display: block;\n        transition-timing-function: linear;\n        transition-property: -webkit-transform;\n        transition-property: transform;\n      }\n\n      :host::before {\n        position: absolute;\n        right: 0px;\n        bottom: -5px;\n        left: 0px;\n        width: 100%;\n        height: 5px;\n        content: \"\";\n        transition: opacity 0.4s;\n        pointer-events: none;\n        opacity: 0;\n        box-shadow: inset 0px 5px 6px -3px rgba(0, 0, 0, 0.4);\n        will-change: opacity;\n        @apply --app-header-shadow;\n      }\n\n      :host([shadow])::before {\n        opacity: 1;\n      }\n\n      #background {\n        @apply --layout-fit;\n        overflow: hidden;\n      }\n\n      #backgroundFrontLayer,\n      #backgroundRearLayer {\n        @apply --layout-fit;\n        height: 100%;\n        pointer-events: none;\n        background-size: cover;\n      }\n\n      #backgroundFrontLayer {\n        @apply --app-header-background-front-layer;\n      }\n\n      #backgroundRearLayer {\n        opacity: 0;\n        @apply --app-header-background-rear-layer;\n      }\n\n      #contentContainer {\n        position: relative;\n        width: 100%;\n        height: 100%;\n      }\n\n      :host([disabled]),\n      :host([disabled])::after,\n      :host([disabled]) #backgroundFrontLayer,\n      :host([disabled]) #backgroundRearLayer,\n      /* Silent scrolling should not run CSS transitions */\n      :host([silent-scroll]),\n      :host([silent-scroll])::after,\n      :host([silent-scroll]) #backgroundFrontLayer,\n      :host([silent-scroll]) #backgroundRearLayer {\n        transition: none !important;\n      }\n\n      :host([disabled]) ::slotted(app-toolbar:first-of-type),\n      :host([disabled]) ::slotted([sticky]),\n      /* Silent scrolling should not run CSS transitions */\n      :host([silent-scroll]) ::slotted(app-toolbar:first-of-type),\n      :host([silent-scroll]) ::slotted([sticky]) {\n        transition: none !important;\n      }\n\n    </style>\n    <div id=\"contentContainer\">\n      <slot id=\"slot\"></slot>\n    </div>\n`,\n  is: 'app-header',\n  behaviors: [_app_scroll_effects_app_scroll_effects_behavior_js__WEBPACK_IMPORTED_MODULE_6__.AppScrollEffectsBehavior, _app_layout_behavior_app_layout_behavior_js__WEBPACK_IMPORTED_MODULE_5__.AppLayoutBehavior],\n  properties: {\n    /**\n     * If true, the header will automatically collapse when scrolling down.\n     * That is, the `sticky` element remains visible when the header is fully\n     *condensed whereas the rest of the elements will collapse below `sticky`\n     *element.\n     *\n     * By default, the `sticky` element is the first toolbar in the light DOM:\n     *\n     *```html\n     * <app-header condenses>\n     *   <app-toolbar>This toolbar remains on top</app-toolbar>\n     *   <app-toolbar></app-toolbar>\n     *   <app-toolbar></app-toolbar>\n     * </app-header>\n     * ```\n     *\n     * Additionally, you can specify which toolbar or element remains visible in\n     *condensed mode by adding the `sticky` attribute to that element. For\n     *example: if we want the last toolbar to remain visible, we can add the\n     *`sticky` attribute to it.\n     *\n     *```html\n     * <app-header condenses>\n     *   <app-toolbar></app-toolbar>\n     *   <app-toolbar></app-toolbar>\n     *   <app-toolbar sticky>This toolbar remains on top</app-toolbar>\n     * </app-header>\n     * ```\n     *\n     * Note the `sticky` element must be a direct child of `app-header`.\n     */\n    condenses: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Mantains the header fixed at the top so it never moves away.\n     */\n    fixed: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Slides back the header when scrolling back up.\n     */\n    reveals: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Displays a shadow below the header.\n     */\n    shadow: {\n      type: Boolean,\n      reflectToAttribute: true,\n      value: false\n    }\n  },\n  observers: ['_configChanged(isAttached, condenses, fixed)'],\n\n  /**\n   * A cached offsetHeight of the current element.\n   *\n   * @type {number}\n   */\n  _height: 0,\n\n  /**\n   * The distance in pixels the header will be translated to when scrolling.\n   *\n   * @type {number}\n   */\n  _dHeight: 0,\n\n  /**\n   * The offsetTop of `_stickyEl`\n   *\n   * @type {number}\n   */\n  _stickyElTop: 0,\n\n  /**\n   * A reference to the element that remains visible when the header condenses.\n   *\n   * @type {HTMLElement}\n   */\n  _stickyElRef: null,\n\n  /**\n   * The header's top value used for the `transformY`\n   *\n   * @type {number}\n   */\n  _top: 0,\n\n  /**\n   * The current scroll progress.\n   *\n   * @type {number}\n   */\n  _progress: 0,\n  _wasScrollingDown: false,\n  _initScrollTop: 0,\n  _initTimestamp: 0,\n  _lastTimestamp: 0,\n  _lastScrollTop: 0,\n\n  /**\n   * The distance the header is allowed to move away.\n   *\n   * @type {number}\n   */\n  get _maxHeaderTop() {\n    return this.fixed ? this._dHeight : this._height + 5;\n  },\n\n  /**\n   * Returns a reference to the sticky element.\n   *\n   * @return {HTMLElement}?\n   */\n  get _stickyEl() {\n    if (this._stickyElRef) {\n      return this._stickyElRef;\n    }\n\n    var nodes = (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_3__.dom)(this.$.slot).getDistributedNodes(); // Get the element with the sticky attribute on it or the first element in\n    // the light DOM.\n\n    for (var i = 0, node; node =\n    /** @type {!HTMLElement} */\n    nodes[i]; i++) {\n      if (node.nodeType === Node.ELEMENT_NODE) {\n        if (node.hasAttribute('sticky')) {\n          this._stickyElRef = node;\n          break;\n        } else if (!this._stickyElRef) {\n          this._stickyElRef = node;\n        }\n      }\n    }\n\n    return this._stickyElRef;\n  },\n\n  _configChanged: function () {\n    this.resetLayout();\n\n    this._notifyLayoutChanged();\n  },\n  _updateLayoutStates: function () {\n    if (this.offsetWidth === 0 && this.offsetHeight === 0) {\n      return;\n    }\n\n    var scrollTop = this._clampedScrollTop;\n    var firstSetup = this._height === 0 || scrollTop === 0;\n    var currentDisabled = this.disabled;\n    this._height = this.offsetHeight;\n    this._stickyElRef = null;\n    this.disabled = true; // prepare for measurement\n\n    if (!firstSetup) {\n      this._updateScrollState(0, true);\n    }\n\n    if (this._mayMove()) {\n      this._dHeight = this._stickyEl ? this._height - this._stickyEl.offsetHeight : 0;\n    } else {\n      this._dHeight = 0;\n    }\n\n    this._stickyElTop = this._stickyEl ? this._stickyEl.offsetTop : 0;\n\n    this._setUpEffect();\n\n    if (firstSetup) {\n      this._updateScrollState(scrollTop, true);\n    } else {\n      this._updateScrollState(this._lastScrollTop, true);\n\n      this._layoutIfDirty();\n    } // restore no transition\n\n\n    this.disabled = currentDisabled;\n  },\n\n  /**\n   * Updates the scroll state.\n   *\n   * @param {number} scrollTop\n   * @param {boolean=} forceUpdate (default: false)\n   */\n  _updateScrollState: function (scrollTop, forceUpdate) {\n    if (this._height === 0) {\n      return;\n    }\n\n    var progress = 0;\n    var top = 0;\n    var lastTop = this._top;\n    var lastScrollTop = this._lastScrollTop;\n    var maxHeaderTop = this._maxHeaderTop;\n    var dScrollTop = scrollTop - this._lastScrollTop;\n    var absDScrollTop = Math.abs(dScrollTop);\n    var isScrollingDown = scrollTop > this._lastScrollTop;\n    var now = performance.now();\n\n    if (this._mayMove()) {\n      top = this._clamp(this.reveals ? lastTop + dScrollTop : scrollTop, 0, maxHeaderTop);\n    }\n\n    if (scrollTop >= this._dHeight) {\n      top = this.condenses && !this.fixed ? Math.max(this._dHeight, top) : top;\n      this.style.transitionDuration = '0ms';\n    }\n\n    if (this.reveals && !this.disabled && absDScrollTop < 100) {\n      // set the initial scroll position\n      if (now - this._initTimestamp > 300 || this._wasScrollingDown !== isScrollingDown) {\n        this._initScrollTop = scrollTop;\n        this._initTimestamp = now;\n      }\n\n      if (scrollTop >= maxHeaderTop) {\n        // check if the header is allowed to snap\n        if (Math.abs(this._initScrollTop - scrollTop) > 30 || absDScrollTop > 10) {\n          if (isScrollingDown && scrollTop >= maxHeaderTop) {\n            top = maxHeaderTop;\n          } else if (!isScrollingDown && scrollTop >= this._dHeight) {\n            top = this.condenses && !this.fixed ? this._dHeight : 0;\n          }\n\n          var scrollVelocity = dScrollTop / (now - this._lastTimestamp);\n          this.style.transitionDuration = this._clamp((top - lastTop) / scrollVelocity, 0, 300) + 'ms';\n        } else {\n          top = this._top;\n        }\n      }\n    }\n\n    if (this._dHeight === 0) {\n      progress = scrollTop > 0 ? 1 : 0;\n    } else {\n      progress = top / this._dHeight;\n    }\n\n    if (!forceUpdate) {\n      this._lastScrollTop = scrollTop;\n      this._top = top;\n      this._wasScrollingDown = isScrollingDown;\n      this._lastTimestamp = now;\n    }\n\n    if (forceUpdate || progress !== this._progress || lastTop !== top || scrollTop === 0) {\n      this._progress = progress;\n\n      this._runEffects(progress, top);\n\n      this._transformHeader(top);\n    }\n  },\n\n  /**\n   * Returns true if the current header is allowed to move as the user scrolls.\n   *\n   * @return {boolean}\n   */\n  _mayMove: function () {\n    return this.condenses || !this.fixed;\n  },\n\n  /**\n   * Returns true if the current header will condense based on the size of the\n   * header and the `consenses` property.\n   *\n   * @return {boolean}\n   */\n  willCondense: function () {\n    return this._dHeight > 0 && this.condenses;\n  },\n\n  /**\n   * Returns true if the current element is on the screen.\n   * That is, visible in the current viewport.\n   *\n   * @method isOnScreen\n   * @return {boolean}\n   */\n  isOnScreen: function () {\n    return this._height !== 0 && this._top < this._height;\n  },\n\n  /**\n   * Returns true if there's content below the current element.\n   *\n   * @method isContentBelow\n   * @return {boolean}\n   */\n  isContentBelow: function () {\n    return this._top === 0 ? this._clampedScrollTop > 0 : this._clampedScrollTop - this._maxHeaderTop >= 0;\n  },\n\n  /**\n   * Transforms the header.\n   *\n   * @param {number} y\n   */\n  _transformHeader: function (y) {\n    this.translate3d(0, -y + 'px', 0);\n\n    if (this._stickyEl) {\n      this.translate3d(0, this.condenses && y >= this._stickyElTop ? Math.min(y, this._dHeight) - this._stickyElTop + 'px' : 0, 0, this._stickyEl);\n    }\n  },\n  _clamp: function (v, min, max) {\n    return Math.min(max, Math.max(min, v));\n  },\n  _ensureBgContainers: function () {\n    if (!this._bgContainer) {\n      this._bgContainer = document.createElement('div');\n      this._bgContainer.id = 'background';\n      this._bgRear = document.createElement('div');\n      this._bgRear.id = 'backgroundRearLayer';\n\n      this._bgContainer.appendChild(this._bgRear);\n\n      this._bgFront = document.createElement('div');\n      this._bgFront.id = 'backgroundFrontLayer';\n\n      this._bgContainer.appendChild(this._bgFront);\n\n      (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_3__.dom)(this.root).insertBefore(this._bgContainer, this.$.contentContainer);\n    }\n  },\n  _getDOMRef: function (id) {\n    switch (id) {\n      case 'backgroundFrontLayer':\n        this._ensureBgContainers();\n\n        return this._bgFront;\n\n      case 'backgroundRearLayer':\n        this._ensureBgContainers();\n\n        return this._bgRear;\n\n      case 'background':\n        this._ensureBgContainers();\n\n        return this._bgContainer;\n\n      case 'mainTitle':\n        return (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_3__.dom)(this).querySelector('[main-title]');\n\n      case 'condensedTitle':\n        return (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_3__.dom)(this).querySelector('[condensed-title]');\n    }\n\n    return null;\n  },\n\n  /**\n   * Returns an object containing the progress value of the scroll effects\n   * and the top position of the header.\n   *\n   * @method getScrollState\n   * @return {Object}\n   */\n  getScrollState: function () {\n    return {\n      progress: this._progress,\n      top: this._top\n    };\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@polymer/app-layout/app-header/app-header.js\n");

/***/ }),

/***/ "./node_modules/@polymer/app-layout/app-layout-behavior/app-layout-behavior.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@polymer/app-layout/app-layout-behavior/app-layout-behavior.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AppLayoutBehavior\": () => (/* binding */ AppLayoutBehavior)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_iron_resizable_behavior_iron_resizable_behavior_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/iron-resizable-behavior/iron-resizable-behavior.js */ \"./node_modules/@polymer/iron-resizable-behavior/iron-resizable-behavior.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer.dom.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer.dom.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_async_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @polymer/polymer/lib/utils/async.js */ \"./node_modules/@polymer/polymer/lib/utils/async.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_debounce_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @polymer/polymer/lib/utils/debounce.js */ \"./node_modules/@polymer/polymer/lib/utils/debounce.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_flush_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @polymer/polymer/lib/utils/flush.js */ \"./node_modules/@polymer/polymer/lib/utils/flush.js\");\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n\n\n\n/**\n * @polymerBehavior\n */\n\nconst AppLayoutBehavior = [_polymer_iron_resizable_behavior_iron_resizable_behavior_js__WEBPACK_IMPORTED_MODULE_1__.IronResizableBehavior, {\n  listeners: {\n    'app-reset-layout': '_appResetLayoutHandler',\n    'iron-resize': 'resetLayout'\n  },\n  attached: function () {\n    this.fire('app-reset-layout');\n  },\n  _appResetLayoutHandler: function (e) {\n    if ((0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_2__.dom)(e).path[0] === this) {\n      return;\n    }\n\n    this.resetLayout();\n    e.stopPropagation();\n  },\n  _updateLayoutStates: function () {\n    console.error('unimplemented');\n  },\n\n  /**\n   * Resets the layout. If you changed the size of this element via CSS\n   * you can notify the changes by either firing the `iron-resize` event\n   * or calling `resetLayout` directly.\n   *\n   * @method resetLayout\n   */\n  resetLayout: function () {\n    var self = this;\n\n    var cb = this._updateLayoutStates.bind(this);\n\n    this._layoutDebouncer = _polymer_polymer_lib_utils_debounce_js__WEBPACK_IMPORTED_MODULE_4__.Debouncer.debounce(this._layoutDebouncer, _polymer_polymer_lib_utils_async_js__WEBPACK_IMPORTED_MODULE_3__.animationFrame, cb);\n    (0,_polymer_polymer_lib_utils_flush_js__WEBPACK_IMPORTED_MODULE_5__.enqueueDebouncer)(this._layoutDebouncer);\n\n    this._notifyDescendantResize();\n  },\n  _notifyLayoutChanged: function () {\n    var self = this; // TODO: the event `app-reset-layout` can be fired synchronously\n    // as long as `_updateLayoutStates` waits for all the microtasks after\n    // rAF. E.g. requestAnimationFrame(setTimeOut())\n\n    requestAnimationFrame(function () {\n      self.fire('app-reset-layout');\n    });\n  },\n  _notifyDescendantResize: function () {\n    if (!this.isAttached) {\n      return;\n    }\n\n    this._interestedResizables.forEach(function (resizable) {\n      if (this.resizerShouldNotify(resizable)) {\n        this._notifyDescendant(resizable);\n      }\n    }, this);\n  }\n}];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHBvbHltZXIvYXBwLWxheW91dC9hcHAtbGF5b3V0LWJlaGF2aW9yL2FwcC1sYXlvdXQtYmVoYXZpb3IuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBOztBQUNBO0FBSUE7QUFDQTtBQUNBO0FBRkE7QUFLQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBOztBQUNBO0FBRUE7O0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBMURBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zdGVvbi1wYW5lbC1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy9AcG9seW1lci9hcHAtbGF5b3V0L2FwcC1sYXlvdXQtYmVoYXZpb3IvYXBwLWxheW91dC1iZWhhdmlvci5qcz80ZThjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuQGxpY2Vuc2VcbkNvcHlyaWdodCAoYykgMjAxNiBUaGUgUG9seW1lciBQcm9qZWN0IEF1dGhvcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG5UaGlzIGNvZGUgbWF5IG9ubHkgYmUgdXNlZCB1bmRlciB0aGUgQlNEIHN0eWxlIGxpY2Vuc2UgZm91bmQgYXRcbmh0dHA6Ly9wb2x5bWVyLmdpdGh1Yi5pby9MSUNFTlNFLnR4dCBUaGUgY29tcGxldGUgc2V0IG9mIGF1dGhvcnMgbWF5IGJlIGZvdW5kIGF0XG5odHRwOi8vcG9seW1lci5naXRodWIuaW8vQVVUSE9SUy50eHQgVGhlIGNvbXBsZXRlIHNldCBvZiBjb250cmlidXRvcnMgbWF5IGJlXG5mb3VuZCBhdCBodHRwOi8vcG9seW1lci5naXRodWIuaW8vQ09OVFJJQlVUT1JTLnR4dCBDb2RlIGRpc3RyaWJ1dGVkIGJ5IEdvb2dsZSBhc1xucGFydCBvZiB0aGUgcG9seW1lciBwcm9qZWN0IGlzIGFsc28gc3ViamVjdCB0byBhbiBhZGRpdGlvbmFsIElQIHJpZ2h0cyBncmFudFxuZm91bmQgYXQgaHR0cDovL3BvbHltZXIuZ2l0aHViLmlvL1BBVEVOVFMudHh0XG4qL1xuaW1wb3J0ICdAcG9seW1lci9wb2x5bWVyL3BvbHltZXItbGVnYWN5LmpzJztcblxuaW1wb3J0IHtJcm9uUmVzaXphYmxlQmVoYXZpb3J9IGZyb20gJ0Bwb2x5bWVyL2lyb24tcmVzaXphYmxlLWJlaGF2aW9yL2lyb24tcmVzaXphYmxlLWJlaGF2aW9yLmpzJztcbmltcG9ydCB7ZG9tfSBmcm9tICdAcG9seW1lci9wb2x5bWVyL2xpYi9sZWdhY3kvcG9seW1lci5kb20uanMnO1xuaW1wb3J0IHthbmltYXRpb25GcmFtZX0gZnJvbSAnQHBvbHltZXIvcG9seW1lci9saWIvdXRpbHMvYXN5bmMuanMnO1xuaW1wb3J0IHtEZWJvdW5jZXJ9IGZyb20gJ0Bwb2x5bWVyL3BvbHltZXIvbGliL3V0aWxzL2RlYm91bmNlLmpzJztcbmltcG9ydCB7ZW5xdWV1ZURlYm91bmNlcn0gZnJvbSAnQHBvbHltZXIvcG9seW1lci9saWIvdXRpbHMvZmx1c2guanMnO1xuXG4vKipcbiAqIEBwb2x5bWVyQmVoYXZpb3JcbiAqL1xuZXhwb3J0IGNvbnN0IEFwcExheW91dEJlaGF2aW9yID0gW1xuICBJcm9uUmVzaXphYmxlQmVoYXZpb3IsXG4gIHtcblxuICAgIGxpc3RlbmVyczoge1xuICAgICAgJ2FwcC1yZXNldC1sYXlvdXQnOiAnX2FwcFJlc2V0TGF5b3V0SGFuZGxlcicsXG4gICAgICAnaXJvbi1yZXNpemUnOiAncmVzZXRMYXlvdXQnXG4gICAgfSxcblxuICAgIGF0dGFjaGVkOiBmdW5jdGlvbigpIHtcbiAgICAgIHRoaXMuZmlyZSgnYXBwLXJlc2V0LWxheW91dCcpO1xuICAgIH0sXG5cbiAgICBfYXBwUmVzZXRMYXlvdXRIYW5kbGVyOiBmdW5jdGlvbihlKSB7XG4gICAgICBpZiAoZG9tKGUpLnBhdGhbMF0gPT09IHRoaXMpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdGhpcy5yZXNldExheW91dCgpO1xuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9LFxuXG4gICAgX3VwZGF0ZUxheW91dFN0YXRlczogZnVuY3Rpb24oKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCd1bmltcGxlbWVudGVkJyk7XG4gICAgfSxcblxuICAgIC8qKlxuICAgICAqIFJlc2V0cyB0aGUgbGF5b3V0LiBJZiB5b3UgY2hhbmdlZCB0aGUgc2l6ZSBvZiB0aGlzIGVsZW1lbnQgdmlhIENTU1xuICAgICAqIHlvdSBjYW4gbm90aWZ5IHRoZSBjaGFuZ2VzIGJ5IGVpdGhlciBmaXJpbmcgdGhlIGBpcm9uLXJlc2l6ZWAgZXZlbnRcbiAgICAgKiBvciBjYWxsaW5nIGByZXNldExheW91dGAgZGlyZWN0bHkuXG4gICAgICpcbiAgICAgKiBAbWV0aG9kIHJlc2V0TGF5b3V0XG4gICAgICovXG4gICAgcmVzZXRMYXlvdXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgICAgdmFyIGNiID0gdGhpcy5fdXBkYXRlTGF5b3V0U3RhdGVzLmJpbmQodGhpcyk7XG4gICAgICB0aGlzLl9sYXlvdXREZWJvdW5jZXIgPVxuICAgICAgICAgIERlYm91bmNlci5kZWJvdW5jZSh0aGlzLl9sYXlvdXREZWJvdW5jZXIsIGFuaW1hdGlvbkZyYW1lLCBjYik7XG4gICAgICBlbnF1ZXVlRGVib3VuY2VyKHRoaXMuX2xheW91dERlYm91bmNlcik7XG4gICAgICB0aGlzLl9ub3RpZnlEZXNjZW5kYW50UmVzaXplKCk7XG4gICAgfSxcblxuICAgIF9ub3RpZnlMYXlvdXRDaGFuZ2VkOiBmdW5jdGlvbigpIHtcbiAgICAgIHZhciBzZWxmID0gdGhpcztcbiAgICAgIC8vIFRPRE86IHRoZSBldmVudCBgYXBwLXJlc2V0LWxheW91dGAgY2FuIGJlIGZpcmVkIHN5bmNocm9ub3VzbHlcbiAgICAgIC8vIGFzIGxvbmcgYXMgYF91cGRhdGVMYXlvdXRTdGF0ZXNgIHdhaXRzIGZvciBhbGwgdGhlIG1pY3JvdGFza3MgYWZ0ZXJcbiAgICAgIC8vIHJBRi4gRS5nLiByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc2V0VGltZU91dCgpKVxuICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uKCkge1xuICAgICAgICBzZWxmLmZpcmUoJ2FwcC1yZXNldC1sYXlvdXQnKTtcbiAgICAgIH0pO1xuICAgIH0sXG5cbiAgICBfbm90aWZ5RGVzY2VuZGFudFJlc2l6ZTogZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIXRoaXMuaXNBdHRhY2hlZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICB0aGlzLl9pbnRlcmVzdGVkUmVzaXphYmxlcy5mb3JFYWNoKGZ1bmN0aW9uKHJlc2l6YWJsZSkge1xuICAgICAgICBpZiAodGhpcy5yZXNpemVyU2hvdWxkTm90aWZ5KHJlc2l6YWJsZSkpIHtcbiAgICAgICAgICB0aGlzLl9ub3RpZnlEZXNjZW5kYW50KHJlc2l6YWJsZSk7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMpO1xuICAgIH1cbiAgfVxuXTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@polymer/app-layout/app-layout-behavior/app-layout-behavior.js\n");

/***/ }),

/***/ "./node_modules/@polymer/app-layout/app-scroll-effects/app-scroll-effects-behavior.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@polymer/app-layout/app-scroll-effects/app-scroll-effects-behavior.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AppScrollEffectsBehavior\": () => (/* binding */ AppScrollEffectsBehavior)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_iron_scroll_target_behavior_iron_scroll_target_behavior_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js */ \"./node_modules/@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js\");\n/* harmony import */ var _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/helpers.js */ \"./node_modules/@polymer/app-layout/helpers/helpers.js\");\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n\n/**\n * `Polymer.AppScrollEffectsBehavior` provides an interface that allows an\n * element to use scrolls effects.\n *\n * ### Importing the app-layout effects\n *\n * app-layout provides a set of scroll effects that can be used by explicitly\n * importing `app-scroll-effects.js`:\n *\n * ```js\n * import '@polymer/app-layout/app-scroll-effects/app-scroll-effects.js';\n * ```\n *\n * The scroll effects can also be used by individually importing\n * `@polymer/app-layout/app-scroll-effects/effects/[effectName].js`. For\n * example:\n *\n * ```js\n * import '@polymer/app-layout/app-scroll-effects/effects/waterfall.js';\n * ```\n *\n * ### Consuming effects\n *\n * Effects can be consumed via the `effects` property. For example:\n *\n * ```html\n * <app-header effects=\"waterfall\"></app-header>\n * ```\n *\n * ### Creating scroll effects\n *\n * You may want to create a custom scroll effect if you need to modify the CSS\n * of an element based on the scroll position.\n *\n * A scroll effect definition is an object with `setUp()`, `tearDown()` and\n * `run()` functions.\n *\n * To register the effect, you can use\n * `Polymer.AppLayout.registerEffect(effectName, effectDef)` For example, let's\n * define an effect that resizes the header's logo:\n *\n * ```js\n * Polymer.AppLayout.registerEffect('resizable-logo', {\n *   setUp: function(config) {\n *     // the effect's config is passed to the setUp.\n *     this._fxResizeLogo = { logo: Polymer.dom(this).querySelector('[logo]') };\n *   },\n *\n *   run: function(progress) {\n *      // the progress of the effect\n *      this.transform('scale3d(' + progress + ', '+ progress +', 1)',\n * this._fxResizeLogo.logo);\n *   },\n *\n *   tearDown: function() {\n *      // clean up and reset of states\n *      delete this._fxResizeLogo;\n *   }\n * });\n * ```\n * Now, you can consume the effect:\n *\n * ```html\n * <app-header id=\"appHeader\" effects=\"resizable-logo\">\n *   <img logo src=\"logo.svg\">\n * </app-header>\n * ```\n *\n * ### Imperative API\n *\n * ```js\n * var logoEffect = appHeader.createEffect('resizable-logo', effectConfig);\n * // run the effect: logoEffect.run(progress);\n * // tear down the effect: logoEffect.tearDown();\n * ```\n *\n * ### Configuring effects\n *\n * For effects installed via the `effects` property, their configuration can be\n * set via the `effectsConfig` property. For example:\n *\n * ```html\n * <app-header effects=\"waterfall\"\n *   effects-config='{\"waterfall\": {\"startsAt\": 0, \"endsAt\": 0.5}}'>\n * </app-header>\n * ```\n *\n * All effects have a `startsAt` and `endsAt` config property. They specify at\n * what point the effect should start and end. This value goes from 0 to 1\n * inclusive.\n *\n * @polymerBehavior\n */\n\nconst AppScrollEffectsBehavior = [_polymer_iron_scroll_target_behavior_iron_scroll_target_behavior_js__WEBPACK_IMPORTED_MODULE_1__.IronScrollTargetBehavior, {\n  properties: {\n    /**\n     * A space-separated list of the effects names that will be triggered when\n     * the user scrolls. e.g. `waterfall parallax-background` installs the\n     * `waterfall` and `parallax-background`.\n     */\n    effects: {\n      type: String\n    },\n\n    /**\n     * An object that configurates the effects installed via the `effects`\n     * property. e.g.\n     * ```js\n     *  element.effectsConfig = {\n     *   \"blend-background\": {\n     *     \"startsAt\": 0.5\n     *   }\n     * };\n     * ```\n     * Every effect has at least two config properties: `startsAt` and\n     * `endsAt`. These properties indicate when the event should start and end\n     * respectively and relative to the overall element progress. So for\n     * example, if `blend-background` starts at `0.5`, the effect will only\n     * start once the current element reaches 0.5 of its progress. In this\n     * context, the progress is a value in the range of `[0, 1]` that\n     * indicates where this element is on the screen relative to the viewport.\n     */\n    effectsConfig: {\n      type: Object,\n      value: function () {\n        return {};\n      }\n    },\n\n    /**\n     * Disables CSS transitions and scroll effects on the element.\n     */\n    disabled: {\n      type: Boolean,\n      reflectToAttribute: true,\n      value: false\n    },\n\n    /**\n     * Allows to set a `scrollTop` threshold. When greater than 0,\n     * `thresholdTriggered` is true only when the scroll target's `scrollTop`\n     * has reached this value.\n     *\n     * For example, if `threshold = 100`, `thresholdTriggered` is true when\n     * the `scrollTop` is at least `100`.\n     */\n    threshold: {\n      type: Number,\n      value: 0\n    },\n\n    /**\n     * True if the `scrollTop` threshold (set in `scrollTopThreshold`) has\n     * been reached.\n     */\n    thresholdTriggered: {\n      type: Boolean,\n      notify: true,\n      readOnly: true,\n      reflectToAttribute: true\n    }\n  },\n  observers: ['_effectsChanged(effects, effectsConfig, isAttached)'],\n\n  /**\n   * Updates the scroll state. This method should be overridden\n   * by the consumer of this behavior.\n   *\n   * @method _updateScrollState\n   * @param {number} scrollTop\n   */\n  _updateScrollState: function (scrollTop) {},\n\n  /**\n   * Returns true if the current element is on the screen.\n   * That is, visible in the current viewport. This method should be\n   * overridden by the consumer of this behavior.\n   *\n   * @method isOnScreen\n   * @return {boolean}\n   */\n  isOnScreen: function () {\n    return false;\n  },\n\n  /**\n   * Returns true if there's content below the current element. This method\n   * should be overridden by the consumer of this behavior.\n   *\n   * @method isContentBelow\n   * @return {boolean}\n   */\n  isContentBelow: function () {\n    return false;\n  },\n\n  /**\n   * List of effects handlers that will take place during scroll.\n   *\n   * @type {Array<Function>}\n   */\n  _effectsRunFn: null,\n\n  /**\n   * List of the effects definitions installed via the `effects` property.\n   *\n   * @type {Array<Object>}\n   */\n  _effects: null,\n\n  /**\n   * The clamped value of `_scrollTop`.\n   * @type number\n   */\n  get _clampedScrollTop() {\n    return Math.max(0, this._scrollTop);\n  },\n\n  attached: function () {\n    this._scrollStateChanged();\n  },\n  detached: function () {\n    this._tearDownEffects();\n  },\n\n  /**\n   * Creates an effect object from an effect's name that can be used to run\n   * effects programmatically.\n   *\n   * @method createEffect\n   * @param {string} effectName The effect's name registered via `Polymer.AppLayout.registerEffect`.\n   * @param {Object=} effectConfig The effect config object. (Optional)\n   * @return {Object} An effect object with the following functions:\n   *\n   *  * `effect.setUp()`, Sets up the requirements for the effect.\n   *       This function is called automatically before the `effect` function\n   * returns.\n   *  * `effect.run(progress, y)`, Runs the effect given a `progress`.\n   *  * `effect.tearDown()`, Cleans up any DOM nodes or element references\n   * used by the effect.\n   *\n   * Example:\n   * ```js\n   * var parallax = element.createEffect('parallax-background');\n   * // runs the effect\n   * parallax.run(0.5, 0);\n   * ```\n   */\n  createEffect: function (effectName, effectConfig) {\n    var effectDef = _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_2__._scrollEffects[effectName];\n\n    if (!effectDef) {\n      throw new ReferenceError(this._getUndefinedMsg(effectName));\n    }\n\n    var prop = this._boundEffect(effectDef, effectConfig || {});\n\n    prop.setUp();\n    return prop;\n  },\n\n  /**\n   * Called when `effects` or `effectsConfig` changes.\n   */\n  _effectsChanged: function (effects, effectsConfig, isAttached) {\n    this._tearDownEffects();\n\n    if (!effects || !isAttached) {\n      return;\n    }\n\n    effects.split(' ').forEach(function (effectName) {\n      var effectDef;\n\n      if (effectName !== '') {\n        if (effectDef = _helpers_helpers_js__WEBPACK_IMPORTED_MODULE_2__._scrollEffects[effectName]) {\n          this._effects.push(this._boundEffect(effectDef, effectsConfig[effectName]));\n        } else {\n          console.warn(this._getUndefinedMsg(effectName));\n        }\n      }\n    }, this);\n\n    this._setUpEffect();\n  },\n\n  /**\n   * Forces layout\n   */\n  _layoutIfDirty: function () {\n    return this.offsetWidth;\n  },\n\n  /**\n   * Returns an effect object bound to the current context.\n   *\n   * @param {Object} effectDef\n   * @param {Object=} effectsConfig The effect config object if the effect accepts config values. (Optional)\n   */\n  _boundEffect: function (effectDef, effectsConfig) {\n    effectsConfig = effectsConfig || {};\n    var startsAt = parseFloat(effectsConfig.startsAt || 0);\n    var endsAt = parseFloat(effectsConfig.endsAt || 1);\n    var deltaS = endsAt - startsAt;\n\n    var noop = function () {}; // fast path if possible\n\n\n    var runFn = startsAt === 0 && endsAt === 1 ? effectDef.run : function (progress, y) {\n      effectDef.run.call(this, Math.max(0, (progress - startsAt) / deltaS), y);\n    };\n    return {\n      setUp: effectDef.setUp ? effectDef.setUp.bind(this, effectsConfig) : noop,\n      run: effectDef.run ? runFn.bind(this) : noop,\n      tearDown: effectDef.tearDown ? effectDef.tearDown.bind(this) : noop\n    };\n  },\n\n  /**\n   * Sets up the effects.\n   */\n  _setUpEffect: function () {\n    if (this.isAttached && this._effects) {\n      this._effectsRunFn = [];\n\n      this._effects.forEach(function (effectDef) {\n        // install the effect only if no error was reported\n        if (effectDef.setUp() !== false) {\n          this._effectsRunFn.push(effectDef.run);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * Tears down the effects.\n   */\n  _tearDownEffects: function () {\n    if (this._effects) {\n      this._effects.forEach(function (effectDef) {\n        effectDef.tearDown();\n      });\n    }\n\n    this._effectsRunFn = [];\n    this._effects = [];\n  },\n\n  /**\n   * Runs the effects.\n   *\n   * @param {number} p The progress\n   * @param {number} y The top position of the current element relative to the viewport.\n   */\n  _runEffects: function (p, y) {\n    if (this._effectsRunFn) {\n      this._effectsRunFn.forEach(function (run) {\n        run(p, y);\n      });\n    }\n  },\n\n  /**\n   * Overrides the `_scrollHandler`.\n   */\n  _scrollHandler: function () {\n    this._scrollStateChanged();\n  },\n  _scrollStateChanged: function () {\n    if (!this.disabled) {\n      var scrollTop = this._clampedScrollTop;\n\n      this._updateScrollState(scrollTop);\n\n      if (this.threshold > 0) {\n        this._setThresholdTriggered(scrollTop >= this.threshold);\n      }\n    }\n  },\n\n  /**\n   * Override this method to return a reference to a node in the local DOM.\n   * The node is consumed by a scroll effect.\n   *\n   * @param {string} id The id for the node.\n   */\n  _getDOMRef: function (id) {\n    console.warn('_getDOMRef', '`' + id + '` is undefined');\n  },\n  _getUndefinedMsg: function (effectName) {\n    return 'Scroll effect `' + effectName + '` is undefined. ' + 'Did you forget to import app-layout/app-scroll-effects/effects/' + effectName + '.html ?';\n  }\n}];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@polymer/app-layout/app-scroll-effects/app-scroll-effects-behavior.js\n");

/***/ }),

/***/ "./node_modules/@polymer/app-layout/helpers/helpers.js":
/*!*************************************************************!*\
  !*** ./node_modules/@polymer/app-layout/helpers/helpers.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ElementWithBackground\": () => (/* binding */ ElementWithBackground),\n/* harmony export */   \"_scrollEffects\": () => (/* binding */ _scrollEffects),\n/* harmony export */   \"_scrollTimer\": () => (/* binding */ _scrollTimer),\n/* harmony export */   \"queryAllRoot\": () => (/* binding */ queryAllRoot),\n/* harmony export */   \"registerEffect\": () => (/* binding */ registerEffect),\n/* harmony export */   \"scroll\": () => (/* binding */ scroll),\n/* harmony export */   \"scrollTimingFunction\": () => (/* binding */ scrollTimingFunction)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\nconst _scrollEffects = {};\nlet _scrollTimer = null;\nconst scrollTimingFunction = function easeOutQuad(t, b, c, d) {\n  t /= d;\n  return -c * t * (t - 2) + b;\n};\n/**\n * Registers a scroll effect to be used in elements that implement the\n * `Polymer.AppScrollEffectsBehavior` behavior.\n *\n * @param {string} effectName The effect name.\n * @param {Object} effectDef The effect definition.\n */\n\nconst registerEffect = function registerEffect(effectName, effectDef) {\n  if (_scrollEffects[effectName] != null) {\n    throw new Error('effect `' + effectName + '` is already registered.');\n  }\n\n  _scrollEffects[effectName] = effectDef;\n};\nconst queryAllRoot = function (selector, root) {\n  var queue = [root];\n  var matches = [];\n\n  while (queue.length > 0) {\n    var node = queue.shift();\n    matches.push.apply(matches, node.querySelectorAll(selector));\n\n    for (var i = 0; node.children[i]; i++) {\n      if (node.children[i].shadowRoot) {\n        queue.push(node.children[i].shadowRoot);\n      }\n    }\n  }\n\n  return matches;\n};\n/**\n * Scrolls to a particular set of coordinates in a scroll target.\n * If the scroll target is not defined, then it would use the main document as\n * the target.\n *\n * To scroll in a smooth fashion, you can set the option `behavior: 'smooth'`.\n * e.g.\n *\n * ```js\n * Polymer.AppLayout.scroll({top: 0, behavior: 'smooth'});\n * ```\n *\n * To scroll in a silent mode, without notifying scroll changes to any\n * app-layout elements, you can set the option `behavior: 'silent'`. This is\n * particularly useful we you are using `app-header` and you desire to scroll to\n * the top of a scrolling region without running scroll effects. e.g.\n *\n * ```js\n * Polymer.AppLayout.scroll({top: 0, behavior: 'silent'});\n * ```\n *\n * @param {Object} options {top: Number, left: Number, behavior: String(smooth | silent)}\n */\n\nconst scroll = function scroll(options) {\n  options = options || {};\n  var docEl = document.documentElement;\n  var target = options.target || docEl;\n  var hasNativeScrollBehavior = 'scrollBehavior' in target.style && target.scroll;\n  var scrollClassName = 'app-layout-silent-scroll';\n  var scrollTop = options.top || 0;\n  var scrollLeft = options.left || 0;\n  var scrollTo = target === docEl ? window.scrollTo : function scrollTo(scrollLeft, scrollTop) {\n    target.scrollLeft = scrollLeft;\n    target.scrollTop = scrollTop;\n  };\n\n  if (options.behavior === 'smooth') {\n    if (hasNativeScrollBehavior) {\n      target.scroll(options);\n    } else {\n      var timingFn = scrollTimingFunction;\n      var startTime = Date.now();\n      var currentScrollTop = target === docEl ? window.pageYOffset : target.scrollTop;\n      var currentScrollLeft = target === docEl ? window.pageXOffset : target.scrollLeft;\n      var deltaScrollTop = scrollTop - currentScrollTop;\n      var deltaScrollLeft = scrollLeft - currentScrollLeft;\n      var duration = 300;\n\n      var updateFrame = function updateFrame() {\n        var now = Date.now();\n        var elapsedTime = now - startTime;\n\n        if (elapsedTime < duration) {\n          scrollTo(timingFn(elapsedTime, currentScrollLeft, deltaScrollLeft, duration), timingFn(elapsedTime, currentScrollTop, deltaScrollTop, duration));\n          requestAnimationFrame(updateFrame);\n        } else {\n          scrollTo(scrollLeft, scrollTop);\n        }\n      }.bind(this);\n\n      updateFrame();\n    }\n  } else if (options.behavior === 'silent') {\n    var headers = queryAllRoot('app-header', document.body);\n    headers.forEach(function (header) {\n      header.setAttribute('silent-scroll', '');\n    }); // Browsers keep the scroll momentum even if the bottom of the scrolling\n    // content was reached. This means that calling scroll({top: 0, behavior:\n    // 'silent'}) when the momentum is still going will result in more scroll\n    // events and thus scroll effects. This seems to only apply when using\n    // document scrolling. Therefore, when should we remove the class from the\n    // document element?\n\n    if (_scrollTimer) {\n      window.cancelAnimationFrame(_scrollTimer);\n    }\n\n    _scrollTimer = window.requestAnimationFrame(function () {\n      headers.forEach(function (header) {\n        header.removeAttribute('silent-scroll');\n      });\n      _scrollTimer = null;\n    });\n    scrollTo(scrollLeft, scrollTop);\n  } else {\n    scrollTo(scrollLeft, scrollTop);\n  }\n};\n/**\n * @interface\n * @extends {Polymer_LegacyElementMixin}\n */\n\nclass ElementWithBackground {\n  /** @return {boolean} True if there's content below the current element */\n  isContentBelow() {}\n  /** @return {boolean} true if the element is on screen */\n\n\n  isOnScreen() {}\n  /**\n   * @param {string} title\n   * @return {?Element} Element in local dom by id.\n   */\n\n\n  _getDOMRef(title) {}\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@polymer/app-layout/helpers/helpers.js\n");

/***/ }),

/***/ "./node_modules/@polymer/iron-resizable-behavior/iron-resizable-behavior.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@polymer/iron-resizable-behavior/iron-resizable-behavior.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IronResizableBehavior\": () => (/* binding */ IronResizableBehavior)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer.dom.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer.dom.js\");\n/* harmony import */ var _polymer_polymer_lib_utils_settings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @polymer/polymer/lib/utils/settings.js */ \"./node_modules/@polymer/polymer/lib/utils/settings.js\");\n/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n // Contains all connected resizables that do not have a parent.\n\nvar ORPHANS = new Set();\n/**\n * `IronResizableBehavior` is a behavior that can be used in Polymer elements to\n * coordinate the flow of resize events between \"resizers\" (elements that\n *control the size or hidden state of their children) and \"resizables\" (elements\n *that need to be notified when they are resized or un-hidden by their parents\n *in order to take action on their new measurements).\n *\n * Elements that perform measurement should add the `IronResizableBehavior`\n *behavior to their element definition and listen for the `iron-resize` event on\n *themselves. This event will be fired when they become showing after having\n *been hidden, when they are resized explicitly by another resizable, or when\n *the window has been resized.\n *\n * Note, the `iron-resize` event is non-bubbling.\n *\n * @polymerBehavior\n * @demo demo/index.html\n **/\n\nconst IronResizableBehavior = {\n  properties: {\n    /**\n     * The closest ancestor element that implements `IronResizableBehavior`.\n     */\n    _parentResizable: {\n      type: Object,\n      observer: '_parentResizableChanged'\n    },\n\n    /**\n     * True if this element is currently notifying its descendant elements of\n     * resize.\n     */\n    _notifyingDescendant: {\n      type: Boolean,\n      value: false\n    }\n  },\n  listeners: {\n    'iron-request-resize-notifications': '_onIronRequestResizeNotifications'\n  },\n  created: function () {\n    // We don't really need property effects on these, and also we want them\n    // to be created before the `_parentResizable` observer fires:\n    this._interestedResizables = [];\n    this._boundNotifyResize = this.notifyResize.bind(this);\n    this._boundOnDescendantIronResize = this._onDescendantIronResize.bind(this);\n  },\n  attached: function () {\n    this._requestResizeNotifications();\n  },\n  detached: function () {\n    if (this._parentResizable) {\n      this._parentResizable.stopResizeNotificationsFor(this);\n    } else {\n      ORPHANS.delete(this);\n      window.removeEventListener('resize', this._boundNotifyResize);\n    }\n\n    this._parentResizable = null;\n  },\n\n  /**\n   * Can be called to manually notify a resizable and its descendant\n   * resizables of a resize change.\n   */\n  notifyResize: function () {\n    if (!this.isAttached) {\n      return;\n    }\n\n    this._interestedResizables.forEach(function (resizable) {\n      if (this.resizerShouldNotify(resizable)) {\n        this._notifyDescendant(resizable);\n      }\n    }, this);\n\n    this._fireResize();\n  },\n\n  /**\n   * Used to assign the closest resizable ancestor to this resizable\n   * if the ancestor detects a request for notifications.\n   */\n  assignParentResizable: function (parentResizable) {\n    if (this._parentResizable) {\n      this._parentResizable.stopResizeNotificationsFor(this);\n    }\n\n    this._parentResizable = parentResizable;\n\n    if (parentResizable && parentResizable._interestedResizables.indexOf(this) === -1) {\n      parentResizable._interestedResizables.push(this);\n\n      parentResizable._subscribeIronResize(this);\n    }\n  },\n\n  /**\n   * Used to remove a resizable descendant from the list of descendants\n   * that should be notified of a resize change.\n   */\n  stopResizeNotificationsFor: function (target) {\n    var index = this._interestedResizables.indexOf(target);\n\n    if (index > -1) {\n      this._interestedResizables.splice(index, 1);\n\n      this._unsubscribeIronResize(target);\n    }\n  },\n\n  /**\n   * Subscribe this element to listen to iron-resize events on the given target.\n   *\n   * Preferred over target.listen because the property renamer does not\n   * understand to rename when the target is not specifically \"this\"\n   *\n   * @param {!HTMLElement} target Element to listen to for iron-resize events.\n   */\n  _subscribeIronResize: function (target) {\n    target.addEventListener('iron-resize', this._boundOnDescendantIronResize);\n  },\n\n  /**\n   * Unsubscribe this element from listening to to iron-resize events on the\n   * given target.\n   *\n   * Preferred over target.unlisten because the property renamer does not\n   * understand to rename when the target is not specifically \"this\"\n   *\n   * @param {!HTMLElement} target Element to listen to for iron-resize events.\n   */\n  _unsubscribeIronResize: function (target) {\n    target.removeEventListener('iron-resize', this._boundOnDescendantIronResize);\n  },\n\n  /**\n   * This method can be overridden to filter nested elements that should or\n   * should not be notified by the current element. Return true if an element\n   * should be notified, or false if it should not be notified.\n   *\n   * @param {HTMLElement} element A candidate descendant element that\n   * implements `IronResizableBehavior`.\n   * @return {boolean} True if the `element` should be notified of resize.\n   */\n  resizerShouldNotify: function (element) {\n    return true;\n  },\n  _onDescendantIronResize: function (event) {\n    if (this._notifyingDescendant) {\n      event.stopPropagation();\n      return;\n    } // no need to use this during shadow dom because of event retargeting\n\n\n    if (!_polymer_polymer_lib_utils_settings_js__WEBPACK_IMPORTED_MODULE_2__.useShadow) {\n      this._fireResize();\n    }\n  },\n  _fireResize: function () {\n    this.fire('iron-resize', null, {\n      node: this,\n      bubbles: false\n    });\n  },\n  _onIronRequestResizeNotifications: function (event) {\n    var target =\n    /** @type {!EventTarget} */\n    (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_1__.dom)(event).rootTarget;\n\n    if (target === this) {\n      return;\n    }\n\n    target.assignParentResizable(this);\n\n    this._notifyDescendant(target);\n\n    event.stopPropagation();\n  },\n  _parentResizableChanged: function (parentResizable) {\n    if (parentResizable) {\n      window.removeEventListener('resize', this._boundNotifyResize);\n    }\n  },\n  _notifyDescendant: function (descendant) {\n    // NOTE(cdata): In IE10, attached is fired on children first, so it's\n    // important not to notify them if the parent is not attached yet (or\n    // else they will get redundantly notified when the parent attaches).\n    if (!this.isAttached) {\n      return;\n    }\n\n    this._notifyingDescendant = true;\n    descendant.notifyResize();\n    this._notifyingDescendant = false;\n  },\n  _requestResizeNotifications: function () {\n    if (!this.isAttached) {\n      return;\n    }\n\n    if (document.readyState === 'loading') {\n      var _requestResizeNotifications = this._requestResizeNotifications.bind(this);\n\n      document.addEventListener('readystatechange', function readystatechanged() {\n        document.removeEventListener('readystatechange', readystatechanged);\n\n        _requestResizeNotifications();\n      });\n    } else {\n      this._findParent();\n\n      if (!this._parentResizable) {\n        // If this resizable is an orphan, tell other orphans to try to find\n        // their parent again, in case it's this resizable.\n        ORPHANS.forEach(function (orphan) {\n          if (orphan !== this) {\n            orphan._findParent();\n          }\n        }, this);\n        window.addEventListener('resize', this._boundNotifyResize);\n        this.notifyResize();\n      } else {\n        // If this resizable has a parent, tell other child resizables of\n        // that parent to try finding their parent again, in case it's this\n        // resizable.\n        this._parentResizable._interestedResizables.forEach(function (resizable) {\n          if (resizable !== this) {\n            resizable._findParent();\n          }\n        }, this);\n      }\n    }\n  },\n  _findParent: function () {\n    this.assignParentResizable(null);\n    this.fire('iron-request-resize-notifications', null, {\n      node: this,\n      bubbles: true,\n      cancelable: true\n    });\n\n    if (!this._parentResizable) {\n      ORPHANS.add(this);\n    } else {\n      ORPHANS.delete(this);\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@polymer/iron-resizable-behavior/iron-resizable-behavior.js\n");

/***/ }),

/***/ "./node_modules/@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"IronScrollTargetBehavior\": () => (/* binding */ IronScrollTargetBehavior)\n/* harmony export */ });\n/* harmony import */ var _polymer_polymer_polymer_legacy_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @polymer/polymer/polymer-legacy.js */ \"./node_modules/@polymer/polymer/polymer-legacy.js\");\n/* harmony import */ var _polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @polymer/polymer/lib/legacy/polymer.dom.js */ \"./node_modules/@polymer/polymer/lib/legacy/polymer.dom.js\");\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n\n\n/**\n * `Polymer.IronScrollTargetBehavior` allows an element to respond to scroll\n * events from a designated scroll target.\n *\n * Elements that consume this behavior can override the `_scrollHandler`\n * method to add logic on the scroll event.\n *\n * @demo demo/scrolling-region.html Scrolling Region\n * @demo demo/document.html Document Element\n * @polymerBehavior\n */\n\nconst IronScrollTargetBehavior = {\n  properties: {\n    /**\n     * Specifies the element that will handle the scroll event\n     * on the behalf of the current element. This is typically a reference to an\n     *element, but there are a few more posibilities:\n     *\n     * ### Elements id\n     *\n     *```html\n     * <div id=\"scrollable-element\" style=\"overflow: auto;\">\n     *  <x-element scroll-target=\"scrollable-element\">\n     *    <!-- Content-->\n     *  </x-element>\n     * </div>\n     *```\n     * In this case, the `scrollTarget` will point to the outer div element.\n     *\n     * ### Document scrolling\n     *\n     * For document scrolling, you can use the reserved word `document`:\n     *\n     *```html\n     * <x-element scroll-target=\"document\">\n     *   <!-- Content -->\n     * </x-element>\n     *```\n     *\n     * ### Elements reference\n     *\n     *```js\n     * appHeader.scrollTarget = document.querySelector('#scrollable-element');\n     *```\n     *\n     * @type {HTMLElement}\n     * @default document\n     */\n    scrollTarget: {\n      type: HTMLElement,\n      value: function () {\n        return this._defaultScrollTarget;\n      }\n    }\n  },\n  observers: ['_scrollTargetChanged(scrollTarget, isAttached)'],\n\n  /**\n   * True if the event listener should be installed.\n   */\n  _shouldHaveListener: true,\n  _scrollTargetChanged: function (scrollTarget, isAttached) {\n    var eventTarget;\n\n    if (this._oldScrollTarget) {\n      this._toggleScrollListener(false, this._oldScrollTarget);\n\n      this._oldScrollTarget = null;\n    }\n\n    if (!isAttached) {\n      return;\n    } // Support element id references\n\n\n    if (scrollTarget === 'document') {\n      this.scrollTarget = this._doc;\n    } else if (typeof scrollTarget === 'string') {\n      var domHost = this.domHost;\n      this.scrollTarget = domHost && domHost.$ ? domHost.$[scrollTarget] : (0,_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_1__.dom)(this.ownerDocument).querySelector('#' + scrollTarget);\n    } else if (this._isValidScrollTarget()) {\n      this._oldScrollTarget = scrollTarget;\n\n      this._toggleScrollListener(this._shouldHaveListener, scrollTarget);\n    }\n  },\n\n  /**\n   * Runs on every scroll event. Consumer of this behavior may override this\n   * method.\n   *\n   * @protected\n   */\n  _scrollHandler: function scrollHandler() {},\n\n  /**\n   * The default scroll target. Consumers of this behavior may want to customize\n   * the default scroll target.\n   *\n   * @type {Element}\n   */\n  get _defaultScrollTarget() {\n    return this._doc;\n  },\n\n  /**\n   * Shortcut for the document element\n   *\n   * @type {Element}\n   */\n  get _doc() {\n    return this.ownerDocument.documentElement;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  get _scrollTop() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageYOffset : this.scrollTarget.scrollTop;\n    }\n\n    return 0;\n  },\n\n  /**\n   * Gets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  get _scrollLeft() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.pageXOffset : this.scrollTarget.scrollLeft;\n    }\n\n    return 0;\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled\n   * upward.\n   *\n   * @type {number}\n   */\n  set _scrollTop(top) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(window.pageXOffset, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Sets the number of pixels that the content of an element is scrolled to the\n   * left.\n   *\n   * @type {number}\n   */\n  set _scrollLeft(left) {\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, window.pageYOffset);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n    }\n  },\n\n  /**\n   * Scrolls the content to a particular place.\n   *\n   * @method scroll\n   * @param {number|!{left: number, top: number}} leftOrOptions The left position or scroll options\n   * @param {number=} top The top position\n   * @return {void}\n   */\n  scroll: function (leftOrOptions, top) {\n    var left;\n\n    if (typeof leftOrOptions === 'object') {\n      left = leftOrOptions.left;\n      top = leftOrOptions.top;\n    } else {\n      left = leftOrOptions;\n    }\n\n    left = left || 0;\n    top = top || 0;\n\n    if (this.scrollTarget === this._doc) {\n      window.scrollTo(left, top);\n    } else if (this._isValidScrollTarget()) {\n      this.scrollTarget.scrollLeft = left;\n      this.scrollTarget.scrollTop = top;\n    }\n  },\n\n  /**\n   * Gets the width of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetWidth() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerWidth : this.scrollTarget.offsetWidth;\n    }\n\n    return 0;\n  },\n\n  /**\n   * Gets the height of the scroll target.\n   *\n   * @type {number}\n   */\n  get _scrollTargetHeight() {\n    if (this._isValidScrollTarget()) {\n      return this.scrollTarget === this._doc ? window.innerHeight : this.scrollTarget.offsetHeight;\n    }\n\n    return 0;\n  },\n\n  /**\n   * Returns true if the scroll target is a valid HTMLElement.\n   *\n   * @return {boolean}\n   */\n  _isValidScrollTarget: function () {\n    return this.scrollTarget instanceof HTMLElement;\n  },\n  _toggleScrollListener: function (yes, scrollTarget) {\n    var eventTarget = scrollTarget === this._doc ? window : scrollTarget;\n\n    if (yes) {\n      if (!this._boundScrollHandler) {\n        this._boundScrollHandler = this._scrollHandler.bind(this);\n        eventTarget.addEventListener('scroll', this._boundScrollHandler);\n      }\n    } else {\n      if (this._boundScrollHandler) {\n        eventTarget.removeEventListener('scroll', this._boundScrollHandler);\n        this._boundScrollHandler = null;\n      }\n    }\n  },\n\n  /**\n   * Enables or disables the scroll event listener.\n   *\n   * @param {boolean} yes True to add the event, False to remove it.\n   */\n  toggleScrollListener: function (yes) {\n    this._shouldHaveListener = yes;\n\n    this._toggleScrollListener(yes, this.scrollTarget);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@polymer/iron-scroll-target-behavior/iron-scroll-target-behavior.js\n");

/***/ })

}]);